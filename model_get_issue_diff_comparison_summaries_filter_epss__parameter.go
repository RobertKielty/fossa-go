/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueDiffComparisonSummariesFilterEpssParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueDiffComparisonSummariesFilterEpssParameter{}

// GetIssueDiffComparisonSummariesFilterEpssParameter struct for GetIssueDiffComparisonSummariesFilterEpssParameter
type GetIssueDiffComparisonSummariesFilterEpssParameter struct {
	Type *string `json:"type,omitempty"`
	Min *float32 `json:"min,omitempty"`
	Max *float32 `json:"max,omitempty"`
}

// NewGetIssueDiffComparisonSummariesFilterEpssParameter instantiates a new GetIssueDiffComparisonSummariesFilterEpssParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueDiffComparisonSummariesFilterEpssParameter() *GetIssueDiffComparisonSummariesFilterEpssParameter {
	this := GetIssueDiffComparisonSummariesFilterEpssParameter{}
	return &this
}

// NewGetIssueDiffComparisonSummariesFilterEpssParameterWithDefaults instantiates a new GetIssueDiffComparisonSummariesFilterEpssParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueDiffComparisonSummariesFilterEpssParameterWithDefaults() *GetIssueDiffComparisonSummariesFilterEpssParameter {
	this := GetIssueDiffComparisonSummariesFilterEpssParameter{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) SetType(v string) {
	o.Type = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) GetMin() float32 {
	if o == nil || IsNil(o.Min) {
		var ret float32
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) GetMinOk() (*float32, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given float32 and assigns it to the Min field.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) SetMin(v float32) {
	o.Min = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) GetMax() float32 {
	if o == nil || IsNil(o.Max) {
		var ret float32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) GetMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given float32 and assigns it to the Max field.
func (o *GetIssueDiffComparisonSummariesFilterEpssParameter) SetMax(v float32) {
	o.Max = &v
}

func (o GetIssueDiffComparisonSummariesFilterEpssParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueDiffComparisonSummariesFilterEpssParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	return toSerialize, nil
}

type NullableGetIssueDiffComparisonSummariesFilterEpssParameter struct {
	value *GetIssueDiffComparisonSummariesFilterEpssParameter
	isSet bool
}

func (v NullableGetIssueDiffComparisonSummariesFilterEpssParameter) Get() *GetIssueDiffComparisonSummariesFilterEpssParameter {
	return v.value
}

func (v *NullableGetIssueDiffComparisonSummariesFilterEpssParameter) Set(val *GetIssueDiffComparisonSummariesFilterEpssParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueDiffComparisonSummariesFilterEpssParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueDiffComparisonSummariesFilterEpssParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueDiffComparisonSummariesFilterEpssParameter(val *GetIssueDiffComparisonSummariesFilterEpssParameter) *NullableGetIssueDiffComparisonSummariesFilterEpssParameter {
	return &NullableGetIssueDiffComparisonSummariesFilterEpssParameter{value: val, isSet: true}
}

func (v NullableGetIssueDiffComparisonSummariesFilterEpssParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueDiffComparisonSummariesFilterEpssParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


