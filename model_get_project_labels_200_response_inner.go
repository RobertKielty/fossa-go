/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetProjectLabels200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectLabels200ResponseInner{}

// GetProjectLabels200ResponseInner struct for GetProjectLabels200ResponseInner
type GetProjectLabels200ResponseInner struct {
	// ID of this label
	Id *int32 `json:"id,omitempty"`
	// Text that this Label represents
	Label *string `json:"label,omitempty"`
}

// NewGetProjectLabels200ResponseInner instantiates a new GetProjectLabels200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectLabels200ResponseInner() *GetProjectLabels200ResponseInner {
	this := GetProjectLabels200ResponseInner{}
	return &this
}

// NewGetProjectLabels200ResponseInnerWithDefaults instantiates a new GetProjectLabels200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectLabels200ResponseInnerWithDefaults() *GetProjectLabels200ResponseInner {
	this := GetProjectLabels200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetProjectLabels200ResponseInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectLabels200ResponseInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetProjectLabels200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetProjectLabels200ResponseInner) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetProjectLabels200ResponseInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectLabels200ResponseInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetProjectLabels200ResponseInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetProjectLabels200ResponseInner) SetLabel(v string) {
	o.Label = &v
}

func (o GetProjectLabels200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjectLabels200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	return toSerialize, nil
}

type NullableGetProjectLabels200ResponseInner struct {
	value *GetProjectLabels200ResponseInner
	isSet bool
}

func (v NullableGetProjectLabels200ResponseInner) Get() *GetProjectLabels200ResponseInner {
	return v.value
}

func (v *NullableGetProjectLabels200ResponseInner) Set(val *GetProjectLabels200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectLabels200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectLabels200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectLabels200ResponseInner(val *GetProjectLabels200ResponseInner) *NullableGetProjectLabels200ResponseInner {
	return &NullableGetProjectLabels200ResponseInner{value: val, isSet: true}
}

func (v NullableGetProjectLabels200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectLabels200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


