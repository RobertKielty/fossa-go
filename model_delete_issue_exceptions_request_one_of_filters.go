/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the DeleteIssueExceptionsRequestOneOfFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteIssueExceptionsRequestOneOfFilters{}

// DeleteIssueExceptionsRequestOneOfFilters struct for DeleteIssueExceptionsRequestOneOfFilters
type DeleteIssueExceptionsRequestOneOfFilters struct {
	PolicyId *int32 `json:"policyId,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	ReleaseGroupId *int32 `json:"releaseGroupId,omitempty"`
	Category *string `json:"category,omitempty"`
}

// NewDeleteIssueExceptionsRequestOneOfFilters instantiates a new DeleteIssueExceptionsRequestOneOfFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteIssueExceptionsRequestOneOfFilters() *DeleteIssueExceptionsRequestOneOfFilters {
	this := DeleteIssueExceptionsRequestOneOfFilters{}
	return &this
}

// NewDeleteIssueExceptionsRequestOneOfFiltersWithDefaults instantiates a new DeleteIssueExceptionsRequestOneOfFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteIssueExceptionsRequestOneOfFiltersWithDefaults() *DeleteIssueExceptionsRequestOneOfFilters {
	this := DeleteIssueExceptionsRequestOneOfFilters{}
	return &this
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetPolicyId() int32 {
	if o == nil || IsNil(o.PolicyId) {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *DeleteIssueExceptionsRequestOneOfFilters) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *DeleteIssueExceptionsRequestOneOfFilters) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetReleaseGroupId returns the ReleaseGroupId field value if set, zero value otherwise.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetReleaseGroupId() int32 {
	if o == nil || IsNil(o.ReleaseGroupId) {
		var ret int32
		return ret
	}
	return *o.ReleaseGroupId
}

// GetReleaseGroupIdOk returns a tuple with the ReleaseGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetReleaseGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReleaseGroupId) {
		return nil, false
	}
	return o.ReleaseGroupId, true
}

// HasReleaseGroupId returns a boolean if a field has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) HasReleaseGroupId() bool {
	if o != nil && !IsNil(o.ReleaseGroupId) {
		return true
	}

	return false
}

// SetReleaseGroupId gets a reference to the given int32 and assigns it to the ReleaseGroupId field.
func (o *DeleteIssueExceptionsRequestOneOfFilters) SetReleaseGroupId(v int32) {
	o.ReleaseGroupId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *DeleteIssueExceptionsRequestOneOfFilters) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *DeleteIssueExceptionsRequestOneOfFilters) SetCategory(v string) {
	o.Category = &v
}

func (o DeleteIssueExceptionsRequestOneOfFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteIssueExceptionsRequestOneOfFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ReleaseGroupId) {
		toSerialize["releaseGroupId"] = o.ReleaseGroupId
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	return toSerialize, nil
}

type NullableDeleteIssueExceptionsRequestOneOfFilters struct {
	value *DeleteIssueExceptionsRequestOneOfFilters
	isSet bool
}

func (v NullableDeleteIssueExceptionsRequestOneOfFilters) Get() *DeleteIssueExceptionsRequestOneOfFilters {
	return v.value
}

func (v *NullableDeleteIssueExceptionsRequestOneOfFilters) Set(val *DeleteIssueExceptionsRequestOneOfFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteIssueExceptionsRequestOneOfFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteIssueExceptionsRequestOneOfFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteIssueExceptionsRequestOneOfFilters(val *DeleteIssueExceptionsRequestOneOfFilters) *NullableDeleteIssueExceptionsRequestOneOfFilters {
	return &NullableDeleteIssueExceptionsRequestOneOfFilters{value: val, isSet: true}
}

func (v NullableDeleteIssueExceptionsRequestOneOfFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteIssueExceptionsRequestOneOfFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


