/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the CreateReleaseGroupRequestReleaseProjectsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateReleaseGroupRequestReleaseProjectsInner{}

// CreateReleaseGroupRequestReleaseProjectsInner struct for CreateReleaseGroupRequestReleaseProjectsInner
type CreateReleaseGroupRequestReleaseProjectsInner struct {
	ProjectId *string `json:"projectId,omitempty"`
	Branch *string `json:"branch,omitempty"`
	RevisionId *string `json:"revisionId,omitempty"`
}

// NewCreateReleaseGroupRequestReleaseProjectsInner instantiates a new CreateReleaseGroupRequestReleaseProjectsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateReleaseGroupRequestReleaseProjectsInner() *CreateReleaseGroupRequestReleaseProjectsInner {
	this := CreateReleaseGroupRequestReleaseProjectsInner{}
	return &this
}

// NewCreateReleaseGroupRequestReleaseProjectsInnerWithDefaults instantiates a new CreateReleaseGroupRequestReleaseProjectsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateReleaseGroupRequestReleaseProjectsInnerWithDefaults() *CreateReleaseGroupRequestReleaseProjectsInner {
	this := CreateReleaseGroupRequestReleaseProjectsInner{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) SetBranch(v string) {
	o.Branch = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) GetRevisionId() string {
	if o == nil || IsNil(o.RevisionId) {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) GetRevisionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionId) {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) HasRevisionId() bool {
	if o != nil && !IsNil(o.RevisionId) {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *CreateReleaseGroupRequestReleaseProjectsInner) SetRevisionId(v string) {
	o.RevisionId = &v
}

func (o CreateReleaseGroupRequestReleaseProjectsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateReleaseGroupRequestReleaseProjectsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.RevisionId) {
		toSerialize["revisionId"] = o.RevisionId
	}
	return toSerialize, nil
}

type NullableCreateReleaseGroupRequestReleaseProjectsInner struct {
	value *CreateReleaseGroupRequestReleaseProjectsInner
	isSet bool
}

func (v NullableCreateReleaseGroupRequestReleaseProjectsInner) Get() *CreateReleaseGroupRequestReleaseProjectsInner {
	return v.value
}

func (v *NullableCreateReleaseGroupRequestReleaseProjectsInner) Set(val *CreateReleaseGroupRequestReleaseProjectsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateReleaseGroupRequestReleaseProjectsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateReleaseGroupRequestReleaseProjectsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateReleaseGroupRequestReleaseProjectsInner(val *CreateReleaseGroupRequestReleaseProjectsInner) *NullableCreateReleaseGroupRequestReleaseProjectsInner {
	return &NullableCreateReleaseGroupRequestReleaseProjectsInner{value: val, isSet: true}
}

func (v NullableCreateReleaseGroupRequestReleaseProjectsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateReleaseGroupRequestReleaseProjectsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


