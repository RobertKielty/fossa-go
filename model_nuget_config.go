/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the NugetConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NugetConfig{}

// NugetConfig struct for NugetConfig
type NugetConfig struct {
	// List of configured Nuget Feeds
	Sources []GetOrganizationNugetSettings200ResponseSourcesInner `json:"sources,omitempty"`
}

// NewNugetConfig instantiates a new NugetConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNugetConfig() *NugetConfig {
	this := NugetConfig{}
	return &this
}

// NewNugetConfigWithDefaults instantiates a new NugetConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNugetConfigWithDefaults() *NugetConfig {
	this := NugetConfig{}
	return &this
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *NugetConfig) GetSources() []GetOrganizationNugetSettings200ResponseSourcesInner {
	if o == nil || IsNil(o.Sources) {
		var ret []GetOrganizationNugetSettings200ResponseSourcesInner
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NugetConfig) GetSourcesOk() ([]GetOrganizationNugetSettings200ResponseSourcesInner, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *NugetConfig) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given []GetOrganizationNugetSettings200ResponseSourcesInner and assigns it to the Sources field.
func (o *NugetConfig) SetSources(v []GetOrganizationNugetSettings200ResponseSourcesInner) {
	o.Sources = v
}

func (o NugetConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NugetConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	return toSerialize, nil
}

type NullableNugetConfig struct {
	value *NugetConfig
	isSet bool
}

func (v NullableNugetConfig) Get() *NugetConfig {
	return v.value
}

func (v *NullableNugetConfig) Set(val *NugetConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNugetConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNugetConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNugetConfig(val *NugetConfig) *NullableNugetConfig {
	return &NullableNugetConfig{value: val, isSet: true}
}

func (v NullableNugetConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNugetConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


