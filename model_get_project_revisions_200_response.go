/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetProjectRevisions200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectRevisions200Response{}

// GetProjectRevisions200Response struct for GetProjectRevisions200Response
type GetProjectRevisions200Response struct {
	// map of branches to their Revisions
	Branch map[string][]GetProjectRevisions200ResponseBranchValueInner `json:"branch,omitempty"`
	// map of tags to their Revisions
	Tag map[string][]GetProjectRevisions200ResponseBranchValueInner `json:"tag,omitempty"`
}

// NewGetProjectRevisions200Response instantiates a new GetProjectRevisions200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectRevisions200Response() *GetProjectRevisions200Response {
	this := GetProjectRevisions200Response{}
	return &this
}

// NewGetProjectRevisions200ResponseWithDefaults instantiates a new GetProjectRevisions200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectRevisions200ResponseWithDefaults() *GetProjectRevisions200Response {
	this := GetProjectRevisions200Response{}
	return &this
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *GetProjectRevisions200Response) GetBranch() map[string][]GetProjectRevisions200ResponseBranchValueInner {
	if o == nil || IsNil(o.Branch) {
		var ret map[string][]GetProjectRevisions200ResponseBranchValueInner
		return ret
	}
	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200Response) GetBranchOk() (map[string][]GetProjectRevisions200ResponseBranchValueInner, bool) {
	if o == nil || IsNil(o.Branch) {
		return map[string][]GetProjectRevisions200ResponseBranchValueInner{}, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *GetProjectRevisions200Response) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given map[string][]GetProjectRevisions200ResponseBranchValueInner and assigns it to the Branch field.
func (o *GetProjectRevisions200Response) SetBranch(v map[string][]GetProjectRevisions200ResponseBranchValueInner) {
	o.Branch = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *GetProjectRevisions200Response) GetTag() map[string][]GetProjectRevisions200ResponseBranchValueInner {
	if o == nil || IsNil(o.Tag) {
		var ret map[string][]GetProjectRevisions200ResponseBranchValueInner
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200Response) GetTagOk() (map[string][]GetProjectRevisions200ResponseBranchValueInner, bool) {
	if o == nil || IsNil(o.Tag) {
		return map[string][]GetProjectRevisions200ResponseBranchValueInner{}, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *GetProjectRevisions200Response) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given map[string][]GetProjectRevisions200ResponseBranchValueInner and assigns it to the Tag field.
func (o *GetProjectRevisions200Response) SetTag(v map[string][]GetProjectRevisions200ResponseBranchValueInner) {
	o.Tag = v
}

func (o GetProjectRevisions200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjectRevisions200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableGetProjectRevisions200Response struct {
	value *GetProjectRevisions200Response
	isSet bool
}

func (v NullableGetProjectRevisions200Response) Get() *GetProjectRevisions200Response {
	return v.value
}

func (v *NullableGetProjectRevisions200Response) Set(val *GetProjectRevisions200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectRevisions200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectRevisions200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectRevisions200Response(val *GetProjectRevisions200Response) *NullableGetProjectRevisions200Response {
	return &NullableGetProjectRevisions200Response{value: val, isSet: true}
}

func (v NullableGetProjectRevisions200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectRevisions200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


