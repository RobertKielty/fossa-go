/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the PutOrganizationNugetSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutOrganizationNugetSettingsRequest{}

// PutOrganizationNugetSettingsRequest struct for PutOrganizationNugetSettingsRequest
type PutOrganizationNugetSettingsRequest struct {
	// List of configured Nuget Feeds
	Sources []GetOrganizationNugetSettings200ResponseSourcesInner `json:"sources,omitempty"`
}

// NewPutOrganizationNugetSettingsRequest instantiates a new PutOrganizationNugetSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutOrganizationNugetSettingsRequest() *PutOrganizationNugetSettingsRequest {
	this := PutOrganizationNugetSettingsRequest{}
	return &this
}

// NewPutOrganizationNugetSettingsRequestWithDefaults instantiates a new PutOrganizationNugetSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutOrganizationNugetSettingsRequestWithDefaults() *PutOrganizationNugetSettingsRequest {
	this := PutOrganizationNugetSettingsRequest{}
	return &this
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *PutOrganizationNugetSettingsRequest) GetSources() []GetOrganizationNugetSettings200ResponseSourcesInner {
	if o == nil || IsNil(o.Sources) {
		var ret []GetOrganizationNugetSettings200ResponseSourcesInner
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutOrganizationNugetSettingsRequest) GetSourcesOk() ([]GetOrganizationNugetSettings200ResponseSourcesInner, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *PutOrganizationNugetSettingsRequest) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given []GetOrganizationNugetSettings200ResponseSourcesInner and assigns it to the Sources field.
func (o *PutOrganizationNugetSettingsRequest) SetSources(v []GetOrganizationNugetSettings200ResponseSourcesInner) {
	o.Sources = v
}

func (o PutOrganizationNugetSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutOrganizationNugetSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	return toSerialize, nil
}

type NullablePutOrganizationNugetSettingsRequest struct {
	value *PutOrganizationNugetSettingsRequest
	isSet bool
}

func (v NullablePutOrganizationNugetSettingsRequest) Get() *PutOrganizationNugetSettingsRequest {
	return v.value
}

func (v *NullablePutOrganizationNugetSettingsRequest) Set(val *PutOrganizationNugetSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutOrganizationNugetSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutOrganizationNugetSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutOrganizationNugetSettingsRequest(val *PutOrganizationNugetSettingsRequest) *NullablePutOrganizationNugetSettingsRequest {
	return &NullablePutOrganizationNugetSettingsRequest{value: val, isSet: true}
}

func (v NullablePutOrganizationNugetSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutOrganizationNugetSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


