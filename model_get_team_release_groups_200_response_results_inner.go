/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetTeamReleaseGroups200ResponseResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTeamReleaseGroups200ResponseResultsInner{}

// GetTeamReleaseGroups200ResponseResultsInner struct for GetTeamReleaseGroups200ResponseResultsInner
type GetTeamReleaseGroups200ResponseResultsInner struct {
	// Title of the Release Group
	Title string `json:"title"`
	// ID of the Release Group
	Id int32 `json:"id"`
}

type _GetTeamReleaseGroups200ResponseResultsInner GetTeamReleaseGroups200ResponseResultsInner

// NewGetTeamReleaseGroups200ResponseResultsInner instantiates a new GetTeamReleaseGroups200ResponseResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTeamReleaseGroups200ResponseResultsInner(title string, id int32) *GetTeamReleaseGroups200ResponseResultsInner {
	this := GetTeamReleaseGroups200ResponseResultsInner{}
	this.Title = title
	this.Id = id
	return &this
}

// NewGetTeamReleaseGroups200ResponseResultsInnerWithDefaults instantiates a new GetTeamReleaseGroups200ResponseResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTeamReleaseGroups200ResponseResultsInnerWithDefaults() *GetTeamReleaseGroups200ResponseResultsInner {
	this := GetTeamReleaseGroups200ResponseResultsInner{}
	return &this
}

// GetTitle returns the Title field value
func (o *GetTeamReleaseGroups200ResponseResultsInner) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *GetTeamReleaseGroups200ResponseResultsInner) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *GetTeamReleaseGroups200ResponseResultsInner) SetTitle(v string) {
	o.Title = v
}

// GetId returns the Id field value
func (o *GetTeamReleaseGroups200ResponseResultsInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetTeamReleaseGroups200ResponseResultsInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetTeamReleaseGroups200ResponseResultsInner) SetId(v int32) {
	o.Id = v
}

func (o GetTeamReleaseGroups200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTeamReleaseGroups200ResponseResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *GetTeamReleaseGroups200ResponseResultsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetTeamReleaseGroups200ResponseResultsInner := _GetTeamReleaseGroups200ResponseResultsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetTeamReleaseGroups200ResponseResultsInner)

	if err != nil {
		return err
	}

	*o = GetTeamReleaseGroups200ResponseResultsInner(varGetTeamReleaseGroups200ResponseResultsInner)

	return err
}

type NullableGetTeamReleaseGroups200ResponseResultsInner struct {
	value *GetTeamReleaseGroups200ResponseResultsInner
	isSet bool
}

func (v NullableGetTeamReleaseGroups200ResponseResultsInner) Get() *GetTeamReleaseGroups200ResponseResultsInner {
	return v.value
}

func (v *NullableGetTeamReleaseGroups200ResponseResultsInner) Set(val *GetTeamReleaseGroups200ResponseResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTeamReleaseGroups200ResponseResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTeamReleaseGroups200ResponseResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTeamReleaseGroups200ResponseResultsInner(val *GetTeamReleaseGroups200ResponseResultsInner) *NullableGetTeamReleaseGroups200ResponseResultsInner {
	return &NullableGetTeamReleaseGroups200ResponseResultsInner{value: val, isSet: true}
}

func (v NullableGetTeamReleaseGroups200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTeamReleaseGroups200ResponseResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


