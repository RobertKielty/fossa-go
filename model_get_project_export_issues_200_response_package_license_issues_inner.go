/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetProjectExportIssues200ResponsePackageLicenseIssuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectExportIssues200ResponsePackageLicenseIssuesInner{}

// GetProjectExportIssues200ResponsePackageLicenseIssuesInner struct for GetProjectExportIssues200ResponsePackageLicenseIssuesInner
type GetProjectExportIssues200ResponsePackageLicenseIssuesInner struct {
	// The dependency that the issue is associated with. 
	Dependency *string `json:"Dependency,omitempty"`
	// The revision of the dependency that the issue is associated with. 
	Revision *string `json:"Revision,omitempty"`
	// The policy that triggered the issue. 
	FlaggedByPolicy *string `json:"Flagged by Policy,omitempty"`
	// The type of issue. 
	IssueType *string `json:"Issue Type,omitempty"`
	// The license that triggered the issue. 
	License *string `json:"License,omitempty"`
	// The User Project that the issue is associated with. 
	AffectedProject *string `json:"Affected Project,omitempty"`
	// A link to the project in the FOSSA UI. 
	FOSSA_URL *string `json:"FOSSA URL,omitempty"`
	// A description of the policy rule that triggered this issue (if available). 
	Details *string `json:"Details,omitempty"`
	// The depth(s) of the dependency in the dependency tree. 
	DependencyDepths *string `json:"Dependency Depths,omitempty"`
}

// NewGetProjectExportIssues200ResponsePackageLicenseIssuesInner instantiates a new GetProjectExportIssues200ResponsePackageLicenseIssuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectExportIssues200ResponsePackageLicenseIssuesInner() *GetProjectExportIssues200ResponsePackageLicenseIssuesInner {
	this := GetProjectExportIssues200ResponsePackageLicenseIssuesInner{}
	return &this
}

// NewGetProjectExportIssues200ResponsePackageLicenseIssuesInnerWithDefaults instantiates a new GetProjectExportIssues200ResponsePackageLicenseIssuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectExportIssues200ResponsePackageLicenseIssuesInnerWithDefaults() *GetProjectExportIssues200ResponsePackageLicenseIssuesInner {
	this := GetProjectExportIssues200ResponsePackageLicenseIssuesInner{}
	return &this
}

// GetDependency returns the Dependency field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetDependency() string {
	if o == nil || IsNil(o.Dependency) {
		var ret string
		return ret
	}
	return *o.Dependency
}

// GetDependencyOk returns a tuple with the Dependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetDependencyOk() (*string, bool) {
	if o == nil || IsNil(o.Dependency) {
		return nil, false
	}
	return o.Dependency, true
}

// HasDependency returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasDependency() bool {
	if o != nil && !IsNil(o.Dependency) {
		return true
	}

	return false
}

// SetDependency gets a reference to the given string and assigns it to the Dependency field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetDependency(v string) {
	o.Dependency = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetRevision(v string) {
	o.Revision = &v
}

// GetFlaggedByPolicy returns the FlaggedByPolicy field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetFlaggedByPolicy() string {
	if o == nil || IsNil(o.FlaggedByPolicy) {
		var ret string
		return ret
	}
	return *o.FlaggedByPolicy
}

// GetFlaggedByPolicyOk returns a tuple with the FlaggedByPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetFlaggedByPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.FlaggedByPolicy) {
		return nil, false
	}
	return o.FlaggedByPolicy, true
}

// HasFlaggedByPolicy returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasFlaggedByPolicy() bool {
	if o != nil && !IsNil(o.FlaggedByPolicy) {
		return true
	}

	return false
}

// SetFlaggedByPolicy gets a reference to the given string and assigns it to the FlaggedByPolicy field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetFlaggedByPolicy(v string) {
	o.FlaggedByPolicy = &v
}

// GetIssueType returns the IssueType field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetIssueType() string {
	if o == nil || IsNil(o.IssueType) {
		var ret string
		return ret
	}
	return *o.IssueType
}

// GetIssueTypeOk returns a tuple with the IssueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetIssueTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssueType) {
		return nil, false
	}
	return o.IssueType, true
}

// HasIssueType returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasIssueType() bool {
	if o != nil && !IsNil(o.IssueType) {
		return true
	}

	return false
}

// SetIssueType gets a reference to the given string and assigns it to the IssueType field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetIssueType(v string) {
	o.IssueType = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetLicense(v string) {
	o.License = &v
}

// GetAffectedProject returns the AffectedProject field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetAffectedProject() string {
	if o == nil || IsNil(o.AffectedProject) {
		var ret string
		return ret
	}
	return *o.AffectedProject
}

// GetAffectedProjectOk returns a tuple with the AffectedProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetAffectedProjectOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedProject) {
		return nil, false
	}
	return o.AffectedProject, true
}

// HasAffectedProject returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasAffectedProject() bool {
	if o != nil && !IsNil(o.AffectedProject) {
		return true
	}

	return false
}

// SetAffectedProject gets a reference to the given string and assigns it to the AffectedProject field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetAffectedProject(v string) {
	o.AffectedProject = &v
}

// GetFOSSA_URL returns the FOSSA_URL field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetFOSSA_URL() string {
	if o == nil || IsNil(o.FOSSA_URL) {
		var ret string
		return ret
	}
	return *o.FOSSA_URL
}

// GetFOSSA_URLOk returns a tuple with the FOSSA_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetFOSSA_URLOk() (*string, bool) {
	if o == nil || IsNil(o.FOSSA_URL) {
		return nil, false
	}
	return o.FOSSA_URL, true
}

// HasFOSSA_URL returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasFOSSA_URL() bool {
	if o != nil && !IsNil(o.FOSSA_URL) {
		return true
	}

	return false
}

// SetFOSSA_URL gets a reference to the given string and assigns it to the FOSSA_URL field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetFOSSA_URL(v string) {
	o.FOSSA_URL = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetDetails(v string) {
	o.Details = &v
}

// GetDependencyDepths returns the DependencyDepths field value if set, zero value otherwise.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetDependencyDepths() string {
	if o == nil || IsNil(o.DependencyDepths) {
		var ret string
		return ret
	}
	return *o.DependencyDepths
}

// GetDependencyDepthsOk returns a tuple with the DependencyDepths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) GetDependencyDepthsOk() (*string, bool) {
	if o == nil || IsNil(o.DependencyDepths) {
		return nil, false
	}
	return o.DependencyDepths, true
}

// HasDependencyDepths returns a boolean if a field has been set.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) HasDependencyDepths() bool {
	if o != nil && !IsNil(o.DependencyDepths) {
		return true
	}

	return false
}

// SetDependencyDepths gets a reference to the given string and assigns it to the DependencyDepths field.
func (o *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) SetDependencyDepths(v string) {
	o.DependencyDepths = &v
}

func (o GetProjectExportIssues200ResponsePackageLicenseIssuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjectExportIssues200ResponsePackageLicenseIssuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dependency) {
		toSerialize["Dependency"] = o.Dependency
	}
	if !IsNil(o.Revision) {
		toSerialize["Revision"] = o.Revision
	}
	if !IsNil(o.FlaggedByPolicy) {
		toSerialize["Flagged by Policy"] = o.FlaggedByPolicy
	}
	if !IsNil(o.IssueType) {
		toSerialize["Issue Type"] = o.IssueType
	}
	if !IsNil(o.License) {
		toSerialize["License"] = o.License
	}
	if !IsNil(o.AffectedProject) {
		toSerialize["Affected Project"] = o.AffectedProject
	}
	if !IsNil(o.FOSSA_URL) {
		toSerialize["FOSSA URL"] = o.FOSSA_URL
	}
	if !IsNil(o.Details) {
		toSerialize["Details"] = o.Details
	}
	if !IsNil(o.DependencyDepths) {
		toSerialize["Dependency Depths"] = o.DependencyDepths
	}
	return toSerialize, nil
}

type NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner struct {
	value *GetProjectExportIssues200ResponsePackageLicenseIssuesInner
	isSet bool
}

func (v NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner) Get() *GetProjectExportIssues200ResponsePackageLicenseIssuesInner {
	return v.value
}

func (v *NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner) Set(val *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner(val *GetProjectExportIssues200ResponsePackageLicenseIssuesInner) *NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner {
	return &NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner{value: val, isSet: true}
}

func (v NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectExportIssues200ResponsePackageLicenseIssuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


