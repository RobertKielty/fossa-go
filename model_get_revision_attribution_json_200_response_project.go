/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetRevisionAttributionJSON200ResponseProject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRevisionAttributionJSON200ResponseProject{}

// GetRevisionAttributionJSON200ResponseProject Project information
type GetRevisionAttributionJSON200ResponseProject struct {
	// The name of the project
	Name *string `json:"name,omitempty"`
	// The revision of the project
	Revision *string `json:"revision,omitempty"`
}

// NewGetRevisionAttributionJSON200ResponseProject instantiates a new GetRevisionAttributionJSON200ResponseProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRevisionAttributionJSON200ResponseProject() *GetRevisionAttributionJSON200ResponseProject {
	this := GetRevisionAttributionJSON200ResponseProject{}
	return &this
}

// NewGetRevisionAttributionJSON200ResponseProjectWithDefaults instantiates a new GetRevisionAttributionJSON200ResponseProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRevisionAttributionJSON200ResponseProjectWithDefaults() *GetRevisionAttributionJSON200ResponseProject {
	this := GetRevisionAttributionJSON200ResponseProject{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200ResponseProject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200ResponseProject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200ResponseProject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetRevisionAttributionJSON200ResponseProject) SetName(v string) {
	o.Name = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200ResponseProject) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200ResponseProject) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200ResponseProject) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *GetRevisionAttributionJSON200ResponseProject) SetRevision(v string) {
	o.Revision = &v
}

func (o GetRevisionAttributionJSON200ResponseProject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRevisionAttributionJSON200ResponseProject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	return toSerialize, nil
}

type NullableGetRevisionAttributionJSON200ResponseProject struct {
	value *GetRevisionAttributionJSON200ResponseProject
	isSet bool
}

func (v NullableGetRevisionAttributionJSON200ResponseProject) Get() *GetRevisionAttributionJSON200ResponseProject {
	return v.value
}

func (v *NullableGetRevisionAttributionJSON200ResponseProject) Set(val *GetRevisionAttributionJSON200ResponseProject) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRevisionAttributionJSON200ResponseProject) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRevisionAttributionJSON200ResponseProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRevisionAttributionJSON200ResponseProject(val *GetRevisionAttributionJSON200ResponseProject) *NullableGetRevisionAttributionJSON200ResponseProject {
	return &NullableGetRevisionAttributionJSON200ResponseProject{value: val, isSet: true}
}

func (v NullableGetRevisionAttributionJSON200ResponseProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRevisionAttributionJSON200ResponseProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


