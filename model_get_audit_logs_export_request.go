/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetAuditLogsExportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAuditLogsExportRequest{}

// GetAuditLogsExportRequest struct for GetAuditLogsExportRequest
type GetAuditLogsExportRequest struct {
	// Filter audit logs to those created on or after this date (YYYY-MM-DD format)
	StartDate string `json:"startDate"`
	// Filter audit logs to those created on or before this date (YYYY-MM-DD format)
	EndDate string `json:"endDate"`
	// Filter audit logs to those created by the given user IDs
	ActingUserIds []string `json:"actingUserIds,omitempty"`
	// Filter audit logs to those with the given actions
	Actions []string `json:"actions,omitempty"`
	// Filter audit logs to those with the given topics
	Topics []string `json:"topics,omitempty"`
	// Filter audit logs to those with the given topic and action
	TopicActions []string `json:"topicActions,omitempty"`
}

type _GetAuditLogsExportRequest GetAuditLogsExportRequest

// NewGetAuditLogsExportRequest instantiates a new GetAuditLogsExportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAuditLogsExportRequest(startDate string, endDate string) *GetAuditLogsExportRequest {
	this := GetAuditLogsExportRequest{}
	this.StartDate = startDate
	this.EndDate = endDate
	return &this
}

// NewGetAuditLogsExportRequestWithDefaults instantiates a new GetAuditLogsExportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAuditLogsExportRequestWithDefaults() *GetAuditLogsExportRequest {
	this := GetAuditLogsExportRequest{}
	return &this
}

// GetStartDate returns the StartDate field value
func (o *GetAuditLogsExportRequest) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *GetAuditLogsExportRequest) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *GetAuditLogsExportRequest) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *GetAuditLogsExportRequest) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *GetAuditLogsExportRequest) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *GetAuditLogsExportRequest) SetEndDate(v string) {
	o.EndDate = v
}

// GetActingUserIds returns the ActingUserIds field value if set, zero value otherwise.
func (o *GetAuditLogsExportRequest) GetActingUserIds() []string {
	if o == nil || IsNil(o.ActingUserIds) {
		var ret []string
		return ret
	}
	return o.ActingUserIds
}

// GetActingUserIdsOk returns a tuple with the ActingUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogsExportRequest) GetActingUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ActingUserIds) {
		return nil, false
	}
	return o.ActingUserIds, true
}

// HasActingUserIds returns a boolean if a field has been set.
func (o *GetAuditLogsExportRequest) HasActingUserIds() bool {
	if o != nil && !IsNil(o.ActingUserIds) {
		return true
	}

	return false
}

// SetActingUserIds gets a reference to the given []string and assigns it to the ActingUserIds field.
func (o *GetAuditLogsExportRequest) SetActingUserIds(v []string) {
	o.ActingUserIds = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *GetAuditLogsExportRequest) GetActions() []string {
	if o == nil || IsNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogsExportRequest) GetActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *GetAuditLogsExportRequest) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *GetAuditLogsExportRequest) SetActions(v []string) {
	o.Actions = v
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *GetAuditLogsExportRequest) GetTopics() []string {
	if o == nil || IsNil(o.Topics) {
		var ret []string
		return ret
	}
	return o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogsExportRequest) GetTopicsOk() ([]string, bool) {
	if o == nil || IsNil(o.Topics) {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *GetAuditLogsExportRequest) HasTopics() bool {
	if o != nil && !IsNil(o.Topics) {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []string and assigns it to the Topics field.
func (o *GetAuditLogsExportRequest) SetTopics(v []string) {
	o.Topics = v
}

// GetTopicActions returns the TopicActions field value if set, zero value otherwise.
func (o *GetAuditLogsExportRequest) GetTopicActions() []string {
	if o == nil || IsNil(o.TopicActions) {
		var ret []string
		return ret
	}
	return o.TopicActions
}

// GetTopicActionsOk returns a tuple with the TopicActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogsExportRequest) GetTopicActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.TopicActions) {
		return nil, false
	}
	return o.TopicActions, true
}

// HasTopicActions returns a boolean if a field has been set.
func (o *GetAuditLogsExportRequest) HasTopicActions() bool {
	if o != nil && !IsNil(o.TopicActions) {
		return true
	}

	return false
}

// SetTopicActions gets a reference to the given []string and assigns it to the TopicActions field.
func (o *GetAuditLogsExportRequest) SetTopicActions(v []string) {
	o.TopicActions = v
}

func (o GetAuditLogsExportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAuditLogsExportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startDate"] = o.StartDate
	toSerialize["endDate"] = o.EndDate
	if !IsNil(o.ActingUserIds) {
		toSerialize["actingUserIds"] = o.ActingUserIds
	}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.Topics) {
		toSerialize["topics"] = o.Topics
	}
	if !IsNil(o.TopicActions) {
		toSerialize["topicActions"] = o.TopicActions
	}
	return toSerialize, nil
}

func (o *GetAuditLogsExportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startDate",
		"endDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetAuditLogsExportRequest := _GetAuditLogsExportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetAuditLogsExportRequest)

	if err != nil {
		return err
	}

	*o = GetAuditLogsExportRequest(varGetAuditLogsExportRequest)

	return err
}

type NullableGetAuditLogsExportRequest struct {
	value *GetAuditLogsExportRequest
	isSet bool
}

func (v NullableGetAuditLogsExportRequest) Get() *GetAuditLogsExportRequest {
	return v.value
}

func (v *NullableGetAuditLogsExportRequest) Set(val *GetAuditLogsExportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAuditLogsExportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAuditLogsExportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAuditLogsExportRequest(val *GetAuditLogsExportRequest) *NullableGetAuditLogsExportRequest {
	return &NullableGetAuditLogsExportRequest{value: val, isSet: true}
}

func (v NullableGetAuditLogsExportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAuditLogsExportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


