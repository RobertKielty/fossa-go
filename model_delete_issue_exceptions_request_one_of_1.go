/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the DeleteIssueExceptionsRequestOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteIssueExceptionsRequestOneOf1{}

// DeleteIssueExceptionsRequestOneOf1 struct for DeleteIssueExceptionsRequestOneOf1
type DeleteIssueExceptionsRequestOneOf1 struct {
	Kind *string `json:"kind,omitempty"`
	Value []int32 `json:"value,omitempty"`
}

// NewDeleteIssueExceptionsRequestOneOf1 instantiates a new DeleteIssueExceptionsRequestOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteIssueExceptionsRequestOneOf1() *DeleteIssueExceptionsRequestOneOf1 {
	this := DeleteIssueExceptionsRequestOneOf1{}
	return &this
}

// NewDeleteIssueExceptionsRequestOneOf1WithDefaults instantiates a new DeleteIssueExceptionsRequestOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteIssueExceptionsRequestOneOf1WithDefaults() *DeleteIssueExceptionsRequestOneOf1 {
	this := DeleteIssueExceptionsRequestOneOf1{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *DeleteIssueExceptionsRequestOneOf1) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteIssueExceptionsRequestOneOf1) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *DeleteIssueExceptionsRequestOneOf1) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *DeleteIssueExceptionsRequestOneOf1) SetKind(v string) {
	o.Kind = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DeleteIssueExceptionsRequestOneOf1) GetValue() []int32 {
	if o == nil || IsNil(o.Value) {
		var ret []int32
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteIssueExceptionsRequestOneOf1) GetValueOk() ([]int32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DeleteIssueExceptionsRequestOneOf1) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []int32 and assigns it to the Value field.
func (o *DeleteIssueExceptionsRequestOneOf1) SetValue(v []int32) {
	o.Value = v
}

func (o DeleteIssueExceptionsRequestOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteIssueExceptionsRequestOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableDeleteIssueExceptionsRequestOneOf1 struct {
	value *DeleteIssueExceptionsRequestOneOf1
	isSet bool
}

func (v NullableDeleteIssueExceptionsRequestOneOf1) Get() *DeleteIssueExceptionsRequestOneOf1 {
	return v.value
}

func (v *NullableDeleteIssueExceptionsRequestOneOf1) Set(val *DeleteIssueExceptionsRequestOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteIssueExceptionsRequestOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteIssueExceptionsRequestOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteIssueExceptionsRequestOneOf1(val *DeleteIssueExceptionsRequestOneOf1) *NullableDeleteIssueExceptionsRequestOneOf1 {
	return &NullableDeleteIssueExceptionsRequestOneOf1{value: val, isSet: true}
}

func (v NullableDeleteIssueExceptionsRequestOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteIssueExceptionsRequestOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


