/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueCounts200ResponseQualityType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueCounts200ResponseQualityType{}

// GetIssueCounts200ResponseQualityType struct for GetIssueCounts200ResponseQualityType
type GetIssueCounts200ResponseQualityType struct {
	OutdatedDependency *int32 `json:"outdated_dependency,omitempty"`
	BlacklistedDependency *int32 `json:"blacklisted_dependency,omitempty"`
	RiskAbandonware *int32 `json:"risk_abandonware,omitempty"`
	RiskEmptyPackage *int32 `json:"risk_empty-package,omitempty"`
	RiskNativeCode *int32 `json:"risk_native-code,omitempty"`
}

// NewGetIssueCounts200ResponseQualityType instantiates a new GetIssueCounts200ResponseQualityType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueCounts200ResponseQualityType() *GetIssueCounts200ResponseQualityType {
	this := GetIssueCounts200ResponseQualityType{}
	return &this
}

// NewGetIssueCounts200ResponseQualityTypeWithDefaults instantiates a new GetIssueCounts200ResponseQualityType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueCounts200ResponseQualityTypeWithDefaults() *GetIssueCounts200ResponseQualityType {
	this := GetIssueCounts200ResponseQualityType{}
	return &this
}

// GetOutdatedDependency returns the OutdatedDependency field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseQualityType) GetOutdatedDependency() int32 {
	if o == nil || IsNil(o.OutdatedDependency) {
		var ret int32
		return ret
	}
	return *o.OutdatedDependency
}

// GetOutdatedDependencyOk returns a tuple with the OutdatedDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseQualityType) GetOutdatedDependencyOk() (*int32, bool) {
	if o == nil || IsNil(o.OutdatedDependency) {
		return nil, false
	}
	return o.OutdatedDependency, true
}

// HasOutdatedDependency returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseQualityType) HasOutdatedDependency() bool {
	if o != nil && !IsNil(o.OutdatedDependency) {
		return true
	}

	return false
}

// SetOutdatedDependency gets a reference to the given int32 and assigns it to the OutdatedDependency field.
func (o *GetIssueCounts200ResponseQualityType) SetOutdatedDependency(v int32) {
	o.OutdatedDependency = &v
}

// GetBlacklistedDependency returns the BlacklistedDependency field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseQualityType) GetBlacklistedDependency() int32 {
	if o == nil || IsNil(o.BlacklistedDependency) {
		var ret int32
		return ret
	}
	return *o.BlacklistedDependency
}

// GetBlacklistedDependencyOk returns a tuple with the BlacklistedDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseQualityType) GetBlacklistedDependencyOk() (*int32, bool) {
	if o == nil || IsNil(o.BlacklistedDependency) {
		return nil, false
	}
	return o.BlacklistedDependency, true
}

// HasBlacklistedDependency returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseQualityType) HasBlacklistedDependency() bool {
	if o != nil && !IsNil(o.BlacklistedDependency) {
		return true
	}

	return false
}

// SetBlacklistedDependency gets a reference to the given int32 and assigns it to the BlacklistedDependency field.
func (o *GetIssueCounts200ResponseQualityType) SetBlacklistedDependency(v int32) {
	o.BlacklistedDependency = &v
}

// GetRiskAbandonware returns the RiskAbandonware field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseQualityType) GetRiskAbandonware() int32 {
	if o == nil || IsNil(o.RiskAbandonware) {
		var ret int32
		return ret
	}
	return *o.RiskAbandonware
}

// GetRiskAbandonwareOk returns a tuple with the RiskAbandonware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseQualityType) GetRiskAbandonwareOk() (*int32, bool) {
	if o == nil || IsNil(o.RiskAbandonware) {
		return nil, false
	}
	return o.RiskAbandonware, true
}

// HasRiskAbandonware returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseQualityType) HasRiskAbandonware() bool {
	if o != nil && !IsNil(o.RiskAbandonware) {
		return true
	}

	return false
}

// SetRiskAbandonware gets a reference to the given int32 and assigns it to the RiskAbandonware field.
func (o *GetIssueCounts200ResponseQualityType) SetRiskAbandonware(v int32) {
	o.RiskAbandonware = &v
}

// GetRiskEmptyPackage returns the RiskEmptyPackage field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseQualityType) GetRiskEmptyPackage() int32 {
	if o == nil || IsNil(o.RiskEmptyPackage) {
		var ret int32
		return ret
	}
	return *o.RiskEmptyPackage
}

// GetRiskEmptyPackageOk returns a tuple with the RiskEmptyPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseQualityType) GetRiskEmptyPackageOk() (*int32, bool) {
	if o == nil || IsNil(o.RiskEmptyPackage) {
		return nil, false
	}
	return o.RiskEmptyPackage, true
}

// HasRiskEmptyPackage returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseQualityType) HasRiskEmptyPackage() bool {
	if o != nil && !IsNil(o.RiskEmptyPackage) {
		return true
	}

	return false
}

// SetRiskEmptyPackage gets a reference to the given int32 and assigns it to the RiskEmptyPackage field.
func (o *GetIssueCounts200ResponseQualityType) SetRiskEmptyPackage(v int32) {
	o.RiskEmptyPackage = &v
}

// GetRiskNativeCode returns the RiskNativeCode field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseQualityType) GetRiskNativeCode() int32 {
	if o == nil || IsNil(o.RiskNativeCode) {
		var ret int32
		return ret
	}
	return *o.RiskNativeCode
}

// GetRiskNativeCodeOk returns a tuple with the RiskNativeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseQualityType) GetRiskNativeCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.RiskNativeCode) {
		return nil, false
	}
	return o.RiskNativeCode, true
}

// HasRiskNativeCode returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseQualityType) HasRiskNativeCode() bool {
	if o != nil && !IsNil(o.RiskNativeCode) {
		return true
	}

	return false
}

// SetRiskNativeCode gets a reference to the given int32 and assigns it to the RiskNativeCode field.
func (o *GetIssueCounts200ResponseQualityType) SetRiskNativeCode(v int32) {
	o.RiskNativeCode = &v
}

func (o GetIssueCounts200ResponseQualityType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueCounts200ResponseQualityType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OutdatedDependency) {
		toSerialize["outdated_dependency"] = o.OutdatedDependency
	}
	if !IsNil(o.BlacklistedDependency) {
		toSerialize["blacklisted_dependency"] = o.BlacklistedDependency
	}
	if !IsNil(o.RiskAbandonware) {
		toSerialize["risk_abandonware"] = o.RiskAbandonware
	}
	if !IsNil(o.RiskEmptyPackage) {
		toSerialize["risk_empty-package"] = o.RiskEmptyPackage
	}
	if !IsNil(o.RiskNativeCode) {
		toSerialize["risk_native-code"] = o.RiskNativeCode
	}
	return toSerialize, nil
}

type NullableGetIssueCounts200ResponseQualityType struct {
	value *GetIssueCounts200ResponseQualityType
	isSet bool
}

func (v NullableGetIssueCounts200ResponseQualityType) Get() *GetIssueCounts200ResponseQualityType {
	return v.value
}

func (v *NullableGetIssueCounts200ResponseQualityType) Set(val *GetIssueCounts200ResponseQualityType) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueCounts200ResponseQualityType) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueCounts200ResponseQualityType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueCounts200ResponseQualityType(val *GetIssueCounts200ResponseQualityType) *NullableGetIssueCounts200ResponseQualityType {
	return &NullableGetIssueCounts200ResponseQualityType{value: val, isSet: true}
}

func (v NullableGetIssueCounts200ResponseQualityType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueCounts200ResponseQualityType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


