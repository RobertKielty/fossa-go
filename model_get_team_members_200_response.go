/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetTeamMembers200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTeamMembers200Response{}

// GetTeamMembers200Response struct for GetTeamMembers200Response
type GetTeamMembers200Response struct {
	// Array of team members
	Results []GetTeamMembers200ResponseResultsInner `json:"results"`
	// Number of items per page
	PageSize int32 `json:"pageSize"`
	// Current page number (1-indexed)
	Page int32 `json:"page"`
	// Total number of team members
	TotalCount int32 `json:"totalCount"`
}

type _GetTeamMembers200Response GetTeamMembers200Response

// NewGetTeamMembers200Response instantiates a new GetTeamMembers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTeamMembers200Response(results []GetTeamMembers200ResponseResultsInner, pageSize int32, page int32, totalCount int32) *GetTeamMembers200Response {
	this := GetTeamMembers200Response{}
	this.Results = results
	this.PageSize = pageSize
	this.Page = page
	this.TotalCount = totalCount
	return &this
}

// NewGetTeamMembers200ResponseWithDefaults instantiates a new GetTeamMembers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTeamMembers200ResponseWithDefaults() *GetTeamMembers200Response {
	this := GetTeamMembers200Response{}
	return &this
}

// GetResults returns the Results field value
func (o *GetTeamMembers200Response) GetResults() []GetTeamMembers200ResponseResultsInner {
	if o == nil {
		var ret []GetTeamMembers200ResponseResultsInner
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *GetTeamMembers200Response) GetResultsOk() ([]GetTeamMembers200ResponseResultsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *GetTeamMembers200Response) SetResults(v []GetTeamMembers200ResponseResultsInner) {
	o.Results = v
}

// GetPageSize returns the PageSize field value
func (o *GetTeamMembers200Response) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *GetTeamMembers200Response) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *GetTeamMembers200Response) SetPageSize(v int32) {
	o.PageSize = v
}

// GetPage returns the Page field value
func (o *GetTeamMembers200Response) GetPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *GetTeamMembers200Response) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *GetTeamMembers200Response) SetPage(v int32) {
	o.Page = v
}

// GetTotalCount returns the TotalCount field value
func (o *GetTeamMembers200Response) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *GetTeamMembers200Response) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *GetTeamMembers200Response) SetTotalCount(v int32) {
	o.TotalCount = v
}

func (o GetTeamMembers200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTeamMembers200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["pageSize"] = o.PageSize
	toSerialize["page"] = o.Page
	toSerialize["totalCount"] = o.TotalCount
	return toSerialize, nil
}

func (o *GetTeamMembers200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
		"pageSize",
		"page",
		"totalCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetTeamMembers200Response := _GetTeamMembers200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetTeamMembers200Response)

	if err != nil {
		return err
	}

	*o = GetTeamMembers200Response(varGetTeamMembers200Response)

	return err
}

type NullableGetTeamMembers200Response struct {
	value *GetTeamMembers200Response
	isSet bool
}

func (v NullableGetTeamMembers200Response) Get() *GetTeamMembers200Response {
	return v.value
}

func (v *NullableGetTeamMembers200Response) Set(val *GetTeamMembers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTeamMembers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTeamMembers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTeamMembers200Response(val *GetTeamMembers200Response) *NullableGetTeamMembers200Response {
	return &NullableGetTeamMembers200Response{value: val, isSet: true}
}

func (v NullableGetTeamMembers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTeamMembers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


