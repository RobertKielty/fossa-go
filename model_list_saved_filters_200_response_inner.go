/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the ListSavedFilters200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSavedFilters200ResponseInner{}

// ListSavedFilters200ResponseInner struct for ListSavedFilters200ResponseInner
type ListSavedFilters200ResponseInner struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Category *string `json:"category,omitempty"`
	// A JSON object representing the specific filter criteria.
	Filter map[string]Json `json:"filter,omitempty"`
	// Can be any of the sort options related to issue or revision.
	Sort *string `json:"sort,omitempty"`
	Group *string `json:"group,omitempty"`
}

// NewListSavedFilters200ResponseInner instantiates a new ListSavedFilters200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSavedFilters200ResponseInner() *ListSavedFilters200ResponseInner {
	this := ListSavedFilters200ResponseInner{}
	return &this
}

// NewListSavedFilters200ResponseInnerWithDefaults instantiates a new ListSavedFilters200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSavedFilters200ResponseInnerWithDefaults() *ListSavedFilters200ResponseInner {
	this := ListSavedFilters200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListSavedFilters200ResponseInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSavedFilters200ResponseInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListSavedFilters200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ListSavedFilters200ResponseInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListSavedFilters200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSavedFilters200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListSavedFilters200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListSavedFilters200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ListSavedFilters200ResponseInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSavedFilters200ResponseInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ListSavedFilters200ResponseInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ListSavedFilters200ResponseInner) SetCategory(v string) {
	o.Category = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ListSavedFilters200ResponseInner) GetFilter() map[string]Json {
	if o == nil || IsNil(o.Filter) {
		var ret map[string]Json
		return ret
	}
	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSavedFilters200ResponseInner) GetFilterOk() (map[string]Json, bool) {
	if o == nil || IsNil(o.Filter) {
		return map[string]Json{}, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ListSavedFilters200ResponseInner) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given map[string]Json and assigns it to the Filter field.
func (o *ListSavedFilters200ResponseInner) SetFilter(v map[string]Json) {
	o.Filter = v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *ListSavedFilters200ResponseInner) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSavedFilters200ResponseInner) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *ListSavedFilters200ResponseInner) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *ListSavedFilters200ResponseInner) SetSort(v string) {
	o.Sort = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ListSavedFilters200ResponseInner) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSavedFilters200ResponseInner) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ListSavedFilters200ResponseInner) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *ListSavedFilters200ResponseInner) SetGroup(v string) {
	o.Group = &v
}

func (o ListSavedFilters200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSavedFilters200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return toSerialize, nil
}

type NullableListSavedFilters200ResponseInner struct {
	value *ListSavedFilters200ResponseInner
	isSet bool
}

func (v NullableListSavedFilters200ResponseInner) Get() *ListSavedFilters200ResponseInner {
	return v.value
}

func (v *NullableListSavedFilters200ResponseInner) Set(val *ListSavedFilters200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListSavedFilters200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListSavedFilters200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSavedFilters200ResponseInner(val *ListSavedFilters200ResponseInner) *NullableListSavedFilters200ResponseInner {
	return &NullableListSavedFilters200ResponseInner{value: val, isSet: true}
}

func (v NullableListSavedFilters200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSavedFilters200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


