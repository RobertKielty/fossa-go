/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
)

// checks if the GetPackagesPackageSummary200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPackagesPackageSummary200Response{}

// GetPackagesPackageSummary200Response struct for GetPackagesPackageSummary200Response
type GetPackagesPackageSummary200Response struct {
	Count *float32 `json:"count,omitempty"`
	LastCacheDate *time.Time `json:"lastCacheDate,omitempty"`
}

// NewGetPackagesPackageSummary200Response instantiates a new GetPackagesPackageSummary200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPackagesPackageSummary200Response() *GetPackagesPackageSummary200Response {
	this := GetPackagesPackageSummary200Response{}
	return &this
}

// NewGetPackagesPackageSummary200ResponseWithDefaults instantiates a new GetPackagesPackageSummary200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPackagesPackageSummary200ResponseWithDefaults() *GetPackagesPackageSummary200Response {
	this := GetPackagesPackageSummary200Response{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GetPackagesPackageSummary200Response) GetCount() float32 {
	if o == nil || IsNil(o.Count) {
		var ret float32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackagesPackageSummary200Response) GetCountOk() (*float32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GetPackagesPackageSummary200Response) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given float32 and assigns it to the Count field.
func (o *GetPackagesPackageSummary200Response) SetCount(v float32) {
	o.Count = &v
}

// GetLastCacheDate returns the LastCacheDate field value if set, zero value otherwise.
func (o *GetPackagesPackageSummary200Response) GetLastCacheDate() time.Time {
	if o == nil || IsNil(o.LastCacheDate) {
		var ret time.Time
		return ret
	}
	return *o.LastCacheDate
}

// GetLastCacheDateOk returns a tuple with the LastCacheDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackagesPackageSummary200Response) GetLastCacheDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCacheDate) {
		return nil, false
	}
	return o.LastCacheDate, true
}

// HasLastCacheDate returns a boolean if a field has been set.
func (o *GetPackagesPackageSummary200Response) HasLastCacheDate() bool {
	if o != nil && !IsNil(o.LastCacheDate) {
		return true
	}

	return false
}

// SetLastCacheDate gets a reference to the given time.Time and assigns it to the LastCacheDate field.
func (o *GetPackagesPackageSummary200Response) SetLastCacheDate(v time.Time) {
	o.LastCacheDate = &v
}

func (o GetPackagesPackageSummary200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPackagesPackageSummary200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.LastCacheDate) {
		toSerialize["lastCacheDate"] = o.LastCacheDate
	}
	return toSerialize, nil
}

type NullableGetPackagesPackageSummary200Response struct {
	value *GetPackagesPackageSummary200Response
	isSet bool
}

func (v NullableGetPackagesPackageSummary200Response) Get() *GetPackagesPackageSummary200Response {
	return v.value
}

func (v *NullableGetPackagesPackageSummary200Response) Set(val *GetPackagesPackageSummary200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPackagesPackageSummary200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPackagesPackageSummary200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPackagesPackageSummary200Response(val *GetPackagesPackageSummary200Response) *NullableGetPackagesPackageSummary200Response {
	return &NullableGetPackagesPackageSummary200Response{value: val, isSet: true}
}

func (v NullableGetPackagesPackageSummary200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPackagesPackageSummary200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


