/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueCounts200ResponseVulnerabilityStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueCounts200ResponseVulnerabilityStatus{}

// GetIssueCounts200ResponseVulnerabilityStatus struct for GetIssueCounts200ResponseVulnerabilityStatus
type GetIssueCounts200ResponseVulnerabilityStatus struct {
	Active *int32 `json:"active,omitempty"`
	Ignored *int32 `json:"ignored,omitempty"`
	Remediated *int32 `json:"remediated,omitempty"`
}

// NewGetIssueCounts200ResponseVulnerabilityStatus instantiates a new GetIssueCounts200ResponseVulnerabilityStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueCounts200ResponseVulnerabilityStatus() *GetIssueCounts200ResponseVulnerabilityStatus {
	this := GetIssueCounts200ResponseVulnerabilityStatus{}
	return &this
}

// NewGetIssueCounts200ResponseVulnerabilityStatusWithDefaults instantiates a new GetIssueCounts200ResponseVulnerabilityStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueCounts200ResponseVulnerabilityStatusWithDefaults() *GetIssueCounts200ResponseVulnerabilityStatus {
	this := GetIssueCounts200ResponseVulnerabilityStatus{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) GetActive() int32 {
	if o == nil || IsNil(o.Active) {
		var ret int32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) GetActiveOk() (*int32, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given int32 and assigns it to the Active field.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) SetActive(v int32) {
	o.Active = &v
}

// GetIgnored returns the Ignored field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) GetIgnored() int32 {
	if o == nil || IsNil(o.Ignored) {
		var ret int32
		return ret
	}
	return *o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) GetIgnoredOk() (*int32, bool) {
	if o == nil || IsNil(o.Ignored) {
		return nil, false
	}
	return o.Ignored, true
}

// HasIgnored returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) HasIgnored() bool {
	if o != nil && !IsNil(o.Ignored) {
		return true
	}

	return false
}

// SetIgnored gets a reference to the given int32 and assigns it to the Ignored field.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) SetIgnored(v int32) {
	o.Ignored = &v
}

// GetRemediated returns the Remediated field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) GetRemediated() int32 {
	if o == nil || IsNil(o.Remediated) {
		var ret int32
		return ret
	}
	return *o.Remediated
}

// GetRemediatedOk returns a tuple with the Remediated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) GetRemediatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Remediated) {
		return nil, false
	}
	return o.Remediated, true
}

// HasRemediated returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) HasRemediated() bool {
	if o != nil && !IsNil(o.Remediated) {
		return true
	}

	return false
}

// SetRemediated gets a reference to the given int32 and assigns it to the Remediated field.
func (o *GetIssueCounts200ResponseVulnerabilityStatus) SetRemediated(v int32) {
	o.Remediated = &v
}

func (o GetIssueCounts200ResponseVulnerabilityStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueCounts200ResponseVulnerabilityStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Ignored) {
		toSerialize["ignored"] = o.Ignored
	}
	if !IsNil(o.Remediated) {
		toSerialize["remediated"] = o.Remediated
	}
	return toSerialize, nil
}

type NullableGetIssueCounts200ResponseVulnerabilityStatus struct {
	value *GetIssueCounts200ResponseVulnerabilityStatus
	isSet bool
}

func (v NullableGetIssueCounts200ResponseVulnerabilityStatus) Get() *GetIssueCounts200ResponseVulnerabilityStatus {
	return v.value
}

func (v *NullableGetIssueCounts200ResponseVulnerabilityStatus) Set(val *GetIssueCounts200ResponseVulnerabilityStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueCounts200ResponseVulnerabilityStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueCounts200ResponseVulnerabilityStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueCounts200ResponseVulnerabilityStatus(val *GetIssueCounts200ResponseVulnerabilityStatus) *NullableGetIssueCounts200ResponseVulnerabilityStatus {
	return &NullableGetIssueCounts200ResponseVulnerabilityStatus{value: val, isSet: true}
}

func (v NullableGetIssueCounts200ResponseVulnerabilityStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueCounts200ResponseVulnerabilityStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


