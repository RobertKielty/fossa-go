/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner{}

// GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner struct for GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner
type GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner struct {
	Id string `json:"id"`
	Title string `json:"title"`
	Branch string `json:"branch"`
	Version *string `json:"version,omitempty"`
	Type string `json:"type"`
	Public bool `json:"public"`
	Url *string `json:"url,omitempty"`
	Scanned *time.Time `json:"scanned,omitempty"`
	LastAnalyzed *time.Time `json:"lastAnalyzed,omitempty"`
	Teams []GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfTeamsInner `json:"teams"`
	LatestRevision *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfLatestRevision `json:"latestRevision,omitempty"`
	LatestBuildStatus *string `json:"latestBuildStatus,omitempty"`
}

type _GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner

// NewGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner instantiates a new GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner(id string, title string, branch string, type_ string, public bool, teams []GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfTeamsInner) *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner {
	this := GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner{}
	this.Id = id
	this.Title = title
	this.Branch = branch
	this.Type = type_
	this.Public = public
	this.Teams = teams
	return &this
}

// NewGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerWithDefaults instantiates a new GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerWithDefaults() *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner {
	this := GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetTitle(v string) {
	o.Title = v
}

// GetBranch returns the Branch field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Branch, true
}

// SetBranch sets field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetBranch(v string) {
	o.Branch = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetVersion(v string) {
	o.Version = &v
}

// GetType returns the Type field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetType(v string) {
	o.Type = v
}

// GetPublic returns the Public field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetPublic(v bool) {
	o.Public = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetUrl(v string) {
	o.Url = &v
}

// GetScanned returns the Scanned field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetScanned() time.Time {
	if o == nil || IsNil(o.Scanned) {
		var ret time.Time
		return ret
	}
	return *o.Scanned
}

// GetScannedOk returns a tuple with the Scanned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetScannedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Scanned) {
		return nil, false
	}
	return o.Scanned, true
}

// HasScanned returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) HasScanned() bool {
	if o != nil && !IsNil(o.Scanned) {
		return true
	}

	return false
}

// SetScanned gets a reference to the given time.Time and assigns it to the Scanned field.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetScanned(v time.Time) {
	o.Scanned = &v
}

// GetLastAnalyzed returns the LastAnalyzed field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetLastAnalyzed() time.Time {
	if o == nil || IsNil(o.LastAnalyzed) {
		var ret time.Time
		return ret
	}
	return *o.LastAnalyzed
}

// GetLastAnalyzedOk returns a tuple with the LastAnalyzed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetLastAnalyzedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastAnalyzed) {
		return nil, false
	}
	return o.LastAnalyzed, true
}

// HasLastAnalyzed returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) HasLastAnalyzed() bool {
	if o != nil && !IsNil(o.LastAnalyzed) {
		return true
	}

	return false
}

// SetLastAnalyzed gets a reference to the given time.Time and assigns it to the LastAnalyzed field.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetLastAnalyzed(v time.Time) {
	o.LastAnalyzed = &v
}

// GetTeams returns the Teams field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetTeams() []GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfTeamsInner {
	if o == nil {
		var ret []GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfTeamsInner
		return ret
	}

	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetTeamsOk() ([]GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfTeamsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Teams, true
}

// SetTeams sets field value
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetTeams(v []GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfTeamsInner) {
	o.Teams = v
}

// GetLatestRevision returns the LatestRevision field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetLatestRevision() GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfLatestRevision {
	if o == nil || IsNil(o.LatestRevision) {
		var ret GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfLatestRevision
		return ret
	}
	return *o.LatestRevision
}

// GetLatestRevisionOk returns a tuple with the LatestRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetLatestRevisionOk() (*GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfLatestRevision, bool) {
	if o == nil || IsNil(o.LatestRevision) {
		return nil, false
	}
	return o.LatestRevision, true
}

// HasLatestRevision returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) HasLatestRevision() bool {
	if o != nil && !IsNil(o.LatestRevision) {
		return true
	}

	return false
}

// SetLatestRevision gets a reference to the given GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfLatestRevision and assigns it to the LatestRevision field.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetLatestRevision(v GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInnerAllOfLatestRevision) {
	o.LatestRevision = &v
}

// GetLatestBuildStatus returns the LatestBuildStatus field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetLatestBuildStatus() string {
	if o == nil || IsNil(o.LatestBuildStatus) {
		var ret string
		return ret
	}
	return *o.LatestBuildStatus
}

// GetLatestBuildStatusOk returns a tuple with the LatestBuildStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) GetLatestBuildStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LatestBuildStatus) {
		return nil, false
	}
	return o.LatestBuildStatus, true
}

// HasLatestBuildStatus returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) HasLatestBuildStatus() bool {
	if o != nil && !IsNil(o.LatestBuildStatus) {
		return true
	}

	return false
}

// SetLatestBuildStatus gets a reference to the given string and assigns it to the LatestBuildStatus field.
func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) SetLatestBuildStatus(v string) {
	o.LatestBuildStatus = &v
}

func (o GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["branch"] = o.Branch
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	toSerialize["type"] = o.Type
	toSerialize["public"] = o.Public
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Scanned) {
		toSerialize["scanned"] = o.Scanned
	}
	if !IsNil(o.LastAnalyzed) {
		toSerialize["lastAnalyzed"] = o.LastAnalyzed
	}
	toSerialize["teams"] = o.Teams
	if !IsNil(o.LatestRevision) {
		toSerialize["latestRevision"] = o.LatestRevision
	}
	if !IsNil(o.LatestBuildStatus) {
		toSerialize["latestBuildStatus"] = o.LatestBuildStatus
	}
	return toSerialize, nil
}

func (o *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"branch",
		"type",
		"public",
		"teams",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner := _GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner)

	if err != nil {
		return err
	}

	*o = GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner(varGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner)

	return err
}

type NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner struct {
	value *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner
	isSet bool
}

func (v NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) Get() *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner {
	return v.value
}

func (v *NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) Set(val *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner(val *GetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) *NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner {
	return &NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner{value: val, isSet: true}
}

func (v NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReleaseGroupReleaseById200ResponseInnerAllOfProjectsInnerAllOfProjectInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


