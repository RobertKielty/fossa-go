/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// BuildRequestSelectedTeamsInner - struct for BuildRequestSelectedTeamsInner
type BuildRequestSelectedTeamsInner struct {
	BuildRequestSelectedTeamsInnerOneOf *BuildRequestSelectedTeamsInnerOneOf
	BuildRequestSelectedTeamsInnerOneOf1 *BuildRequestSelectedTeamsInnerOneOf1
}

// BuildRequestSelectedTeamsInnerOneOfAsBuildRequestSelectedTeamsInner is a convenience function that returns BuildRequestSelectedTeamsInnerOneOf wrapped in BuildRequestSelectedTeamsInner
func BuildRequestSelectedTeamsInnerOneOfAsBuildRequestSelectedTeamsInner(v *BuildRequestSelectedTeamsInnerOneOf) BuildRequestSelectedTeamsInner {
	return BuildRequestSelectedTeamsInner{
		BuildRequestSelectedTeamsInnerOneOf: v,
	}
}

// BuildRequestSelectedTeamsInnerOneOf1AsBuildRequestSelectedTeamsInner is a convenience function that returns BuildRequestSelectedTeamsInnerOneOf1 wrapped in BuildRequestSelectedTeamsInner
func BuildRequestSelectedTeamsInnerOneOf1AsBuildRequestSelectedTeamsInner(v *BuildRequestSelectedTeamsInnerOneOf1) BuildRequestSelectedTeamsInner {
	return BuildRequestSelectedTeamsInner{
		BuildRequestSelectedTeamsInnerOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *BuildRequestSelectedTeamsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into BuildRequestSelectedTeamsInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.BuildRequestSelectedTeamsInnerOneOf)
	if err == nil {
		jsonBuildRequestSelectedTeamsInnerOneOf, _ := json.Marshal(dst.BuildRequestSelectedTeamsInnerOneOf)
		if string(jsonBuildRequestSelectedTeamsInnerOneOf) == "{}" { // empty struct
			dst.BuildRequestSelectedTeamsInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.BuildRequestSelectedTeamsInnerOneOf); err != nil {
				dst.BuildRequestSelectedTeamsInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.BuildRequestSelectedTeamsInnerOneOf = nil
	}

	// try to unmarshal data into BuildRequestSelectedTeamsInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.BuildRequestSelectedTeamsInnerOneOf1)
	if err == nil {
		jsonBuildRequestSelectedTeamsInnerOneOf1, _ := json.Marshal(dst.BuildRequestSelectedTeamsInnerOneOf1)
		if string(jsonBuildRequestSelectedTeamsInnerOneOf1) == "{}" { // empty struct
			dst.BuildRequestSelectedTeamsInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.BuildRequestSelectedTeamsInnerOneOf1); err != nil {
				dst.BuildRequestSelectedTeamsInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.BuildRequestSelectedTeamsInnerOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.BuildRequestSelectedTeamsInnerOneOf = nil
		dst.BuildRequestSelectedTeamsInnerOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(BuildRequestSelectedTeamsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(BuildRequestSelectedTeamsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BuildRequestSelectedTeamsInner) MarshalJSON() ([]byte, error) {
	if src.BuildRequestSelectedTeamsInnerOneOf != nil {
		return json.Marshal(&src.BuildRequestSelectedTeamsInnerOneOf)
	}

	if src.BuildRequestSelectedTeamsInnerOneOf1 != nil {
		return json.Marshal(&src.BuildRequestSelectedTeamsInnerOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *BuildRequestSelectedTeamsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.BuildRequestSelectedTeamsInnerOneOf != nil {
		return obj.BuildRequestSelectedTeamsInnerOneOf
	}

	if obj.BuildRequestSelectedTeamsInnerOneOf1 != nil {
		return obj.BuildRequestSelectedTeamsInnerOneOf1
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj BuildRequestSelectedTeamsInner) GetActualInstanceValue() (interface{}) {
	if obj.BuildRequestSelectedTeamsInnerOneOf != nil {
		return *obj.BuildRequestSelectedTeamsInnerOneOf
	}

	if obj.BuildRequestSelectedTeamsInnerOneOf1 != nil {
		return *obj.BuildRequestSelectedTeamsInnerOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableBuildRequestSelectedTeamsInner struct {
	value *BuildRequestSelectedTeamsInner
	isSet bool
}

func (v NullableBuildRequestSelectedTeamsInner) Get() *BuildRequestSelectedTeamsInner {
	return v.value
}

func (v *NullableBuildRequestSelectedTeamsInner) Set(val *BuildRequestSelectedTeamsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildRequestSelectedTeamsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildRequestSelectedTeamsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildRequestSelectedTeamsInner(val *BuildRequestSelectedTeamsInner) *NullableBuildRequestSelectedTeamsInner {
	return &NullableBuildRequestSelectedTeamsInner{value: val, isSet: true}
}

func (v NullableBuildRequestSelectedTeamsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildRequestSelectedTeamsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


