/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner{}

// UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner struct for UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner
type UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner struct {
	FieldId *string `json:"fieldId,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner instantiates a new UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner() *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner {
	this := UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner{}
	return &this
}

// NewUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInnerWithDefaults instantiates a new UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInnerWithDefaults() *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner {
	this := UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner{}
	return &this
}

// GetFieldId returns the FieldId field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) GetFieldId() string {
	if o == nil || IsNil(o.FieldId) {
		var ret string
		return ret
	}
	return *o.FieldId
}

// GetFieldIdOk returns a tuple with the FieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) GetFieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.FieldId) {
		return nil, false
	}
	return o.FieldId, true
}

// HasFieldId returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) HasFieldId() bool {
	if o != nil && !IsNil(o.FieldId) {
		return true
	}

	return false
}

// SetFieldId gets a reference to the given string and assigns it to the FieldId field.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) SetFieldId(v string) {
	o.FieldId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) SetValue(v string) {
	o.Value = &v
}

func (o UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FieldId) {
		toSerialize["fieldId"] = o.FieldId
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner struct {
	value *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner
	isSet bool
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) Get() *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner {
	return v.value
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) Set(val *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner(val *UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) *NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner {
	return &NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner{value: val, isSet: true}
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


