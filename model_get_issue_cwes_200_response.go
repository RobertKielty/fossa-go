/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueCWEs200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueCWEs200Response{}

// GetIssueCWEs200Response struct for GetIssueCWEs200Response
type GetIssueCWEs200Response struct {
	Cwes []string `json:"cwes,omitempty"`
}

// NewGetIssueCWEs200Response instantiates a new GetIssueCWEs200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueCWEs200Response() *GetIssueCWEs200Response {
	this := GetIssueCWEs200Response{}
	return &this
}

// NewGetIssueCWEs200ResponseWithDefaults instantiates a new GetIssueCWEs200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueCWEs200ResponseWithDefaults() *GetIssueCWEs200Response {
	this := GetIssueCWEs200Response{}
	return &this
}

// GetCwes returns the Cwes field value if set, zero value otherwise.
func (o *GetIssueCWEs200Response) GetCwes() []string {
	if o == nil || IsNil(o.Cwes) {
		var ret []string
		return ret
	}
	return o.Cwes
}

// GetCwesOk returns a tuple with the Cwes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCWEs200Response) GetCwesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cwes) {
		return nil, false
	}
	return o.Cwes, true
}

// HasCwes returns a boolean if a field has been set.
func (o *GetIssueCWEs200Response) HasCwes() bool {
	if o != nil && !IsNil(o.Cwes) {
		return true
	}

	return false
}

// SetCwes gets a reference to the given []string and assigns it to the Cwes field.
func (o *GetIssueCWEs200Response) SetCwes(v []string) {
	o.Cwes = v
}

func (o GetIssueCWEs200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueCWEs200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cwes) {
		toSerialize["cwes"] = o.Cwes
	}
	return toSerialize, nil
}

type NullableGetIssueCWEs200Response struct {
	value *GetIssueCWEs200Response
	isSet bool
}

func (v NullableGetIssueCWEs200Response) Get() *GetIssueCWEs200Response {
	return v.value
}

func (v *NullableGetIssueCWEs200Response) Set(val *GetIssueCWEs200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueCWEs200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueCWEs200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueCWEs200Response(val *GetIssueCWEs200Response) *NullableGetIssueCWEs200Response {
	return &NullableGetIssueCWEs200Response{value: val, isSet: true}
}

func (v NullableGetIssueCWEs200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueCWEs200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


