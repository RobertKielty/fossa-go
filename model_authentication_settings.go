/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the AuthenticationSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationSettings{}

// AuthenticationSettings struct for AuthenticationSettings
type AuthenticationSettings struct {
	Subdomain *string `json:"subdomain,omitempty"`
	LoginSubdomain *string `json:"loginSubdomain,omitempty"`
	DisableInvite *bool `json:"disableInvite,omitempty"`
	Saml *GetOrganizationAuthenticationSettings200ResponseSaml `json:"saml,omitempty"`
	Ldap *GetOrganizationAuthenticationSettings200ResponseLdap `json:"ldap,omitempty"`
	Sso *GetOrganizationAuthenticationSettings200ResponseSso `json:"sso,omitempty"`
}

// NewAuthenticationSettings instantiates a new AuthenticationSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationSettings() *AuthenticationSettings {
	this := AuthenticationSettings{}
	return &this
}

// NewAuthenticationSettingsWithDefaults instantiates a new AuthenticationSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationSettingsWithDefaults() *AuthenticationSettings {
	this := AuthenticationSettings{}
	return &this
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *AuthenticationSettings) GetSubdomain() string {
	if o == nil || IsNil(o.Subdomain) {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSettings) GetSubdomainOk() (*string, bool) {
	if o == nil || IsNil(o.Subdomain) {
		return nil, false
	}
	return o.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (o *AuthenticationSettings) HasSubdomain() bool {
	if o != nil && !IsNil(o.Subdomain) {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *AuthenticationSettings) SetSubdomain(v string) {
	o.Subdomain = &v
}

// GetLoginSubdomain returns the LoginSubdomain field value if set, zero value otherwise.
func (o *AuthenticationSettings) GetLoginSubdomain() string {
	if o == nil || IsNil(o.LoginSubdomain) {
		var ret string
		return ret
	}
	return *o.LoginSubdomain
}

// GetLoginSubdomainOk returns a tuple with the LoginSubdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSettings) GetLoginSubdomainOk() (*string, bool) {
	if o == nil || IsNil(o.LoginSubdomain) {
		return nil, false
	}
	return o.LoginSubdomain, true
}

// HasLoginSubdomain returns a boolean if a field has been set.
func (o *AuthenticationSettings) HasLoginSubdomain() bool {
	if o != nil && !IsNil(o.LoginSubdomain) {
		return true
	}

	return false
}

// SetLoginSubdomain gets a reference to the given string and assigns it to the LoginSubdomain field.
func (o *AuthenticationSettings) SetLoginSubdomain(v string) {
	o.LoginSubdomain = &v
}

// GetDisableInvite returns the DisableInvite field value if set, zero value otherwise.
func (o *AuthenticationSettings) GetDisableInvite() bool {
	if o == nil || IsNil(o.DisableInvite) {
		var ret bool
		return ret
	}
	return *o.DisableInvite
}

// GetDisableInviteOk returns a tuple with the DisableInvite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSettings) GetDisableInviteOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableInvite) {
		return nil, false
	}
	return o.DisableInvite, true
}

// HasDisableInvite returns a boolean if a field has been set.
func (o *AuthenticationSettings) HasDisableInvite() bool {
	if o != nil && !IsNil(o.DisableInvite) {
		return true
	}

	return false
}

// SetDisableInvite gets a reference to the given bool and assigns it to the DisableInvite field.
func (o *AuthenticationSettings) SetDisableInvite(v bool) {
	o.DisableInvite = &v
}

// GetSaml returns the Saml field value if set, zero value otherwise.
func (o *AuthenticationSettings) GetSaml() GetOrganizationAuthenticationSettings200ResponseSaml {
	if o == nil || IsNil(o.Saml) {
		var ret GetOrganizationAuthenticationSettings200ResponseSaml
		return ret
	}
	return *o.Saml
}

// GetSamlOk returns a tuple with the Saml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSettings) GetSamlOk() (*GetOrganizationAuthenticationSettings200ResponseSaml, bool) {
	if o == nil || IsNil(o.Saml) {
		return nil, false
	}
	return o.Saml, true
}

// HasSaml returns a boolean if a field has been set.
func (o *AuthenticationSettings) HasSaml() bool {
	if o != nil && !IsNil(o.Saml) {
		return true
	}

	return false
}

// SetSaml gets a reference to the given GetOrganizationAuthenticationSettings200ResponseSaml and assigns it to the Saml field.
func (o *AuthenticationSettings) SetSaml(v GetOrganizationAuthenticationSettings200ResponseSaml) {
	o.Saml = &v
}

// GetLdap returns the Ldap field value if set, zero value otherwise.
func (o *AuthenticationSettings) GetLdap() GetOrganizationAuthenticationSettings200ResponseLdap {
	if o == nil || IsNil(o.Ldap) {
		var ret GetOrganizationAuthenticationSettings200ResponseLdap
		return ret
	}
	return *o.Ldap
}

// GetLdapOk returns a tuple with the Ldap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSettings) GetLdapOk() (*GetOrganizationAuthenticationSettings200ResponseLdap, bool) {
	if o == nil || IsNil(o.Ldap) {
		return nil, false
	}
	return o.Ldap, true
}

// HasLdap returns a boolean if a field has been set.
func (o *AuthenticationSettings) HasLdap() bool {
	if o != nil && !IsNil(o.Ldap) {
		return true
	}

	return false
}

// SetLdap gets a reference to the given GetOrganizationAuthenticationSettings200ResponseLdap and assigns it to the Ldap field.
func (o *AuthenticationSettings) SetLdap(v GetOrganizationAuthenticationSettings200ResponseLdap) {
	o.Ldap = &v
}

// GetSso returns the Sso field value if set, zero value otherwise.
func (o *AuthenticationSettings) GetSso() GetOrganizationAuthenticationSettings200ResponseSso {
	if o == nil || IsNil(o.Sso) {
		var ret GetOrganizationAuthenticationSettings200ResponseSso
		return ret
	}
	return *o.Sso
}

// GetSsoOk returns a tuple with the Sso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSettings) GetSsoOk() (*GetOrganizationAuthenticationSettings200ResponseSso, bool) {
	if o == nil || IsNil(o.Sso) {
		return nil, false
	}
	return o.Sso, true
}

// HasSso returns a boolean if a field has been set.
func (o *AuthenticationSettings) HasSso() bool {
	if o != nil && !IsNil(o.Sso) {
		return true
	}

	return false
}

// SetSso gets a reference to the given GetOrganizationAuthenticationSettings200ResponseSso and assigns it to the Sso field.
func (o *AuthenticationSettings) SetSso(v GetOrganizationAuthenticationSettings200ResponseSso) {
	o.Sso = &v
}

func (o AuthenticationSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subdomain) {
		toSerialize["subdomain"] = o.Subdomain
	}
	if !IsNil(o.LoginSubdomain) {
		toSerialize["loginSubdomain"] = o.LoginSubdomain
	}
	if !IsNil(o.DisableInvite) {
		toSerialize["disableInvite"] = o.DisableInvite
	}
	if !IsNil(o.Saml) {
		toSerialize["saml"] = o.Saml
	}
	if !IsNil(o.Ldap) {
		toSerialize["ldap"] = o.Ldap
	}
	if !IsNil(o.Sso) {
		toSerialize["sso"] = o.Sso
	}
	return toSerialize, nil
}

type NullableAuthenticationSettings struct {
	value *AuthenticationSettings
	isSet bool
}

func (v NullableAuthenticationSettings) Get() *AuthenticationSettings {
	return v.value
}

func (v *NullableAuthenticationSettings) Set(val *AuthenticationSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationSettings(val *AuthenticationSettings) *NullableAuthenticationSettings {
	return &NullableAuthenticationSettings{value: val, isSet: true}
}

func (v NullableAuthenticationSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


