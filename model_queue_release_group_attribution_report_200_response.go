/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the QueueReleaseGroupAttributionReport200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueueReleaseGroupAttributionReport200Response{}

// QueueReleaseGroupAttributionReport200Response struct for QueueReleaseGroupAttributionReport200Response
type QueueReleaseGroupAttributionReport200Response struct {
	TaskId *int32 `json:"taskId,omitempty"`
}

// NewQueueReleaseGroupAttributionReport200Response instantiates a new QueueReleaseGroupAttributionReport200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueReleaseGroupAttributionReport200Response() *QueueReleaseGroupAttributionReport200Response {
	this := QueueReleaseGroupAttributionReport200Response{}
	return &this
}

// NewQueueReleaseGroupAttributionReport200ResponseWithDefaults instantiates a new QueueReleaseGroupAttributionReport200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueReleaseGroupAttributionReport200ResponseWithDefaults() *QueueReleaseGroupAttributionReport200Response {
	this := QueueReleaseGroupAttributionReport200Response{}
	return &this
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *QueueReleaseGroupAttributionReport200Response) GetTaskId() int32 {
	if o == nil || IsNil(o.TaskId) {
		var ret int32
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueReleaseGroupAttributionReport200Response) GetTaskIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *QueueReleaseGroupAttributionReport200Response) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given int32 and assigns it to the TaskId field.
func (o *QueueReleaseGroupAttributionReport200Response) SetTaskId(v int32) {
	o.TaskId = &v
}

func (o QueueReleaseGroupAttributionReport200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueueReleaseGroupAttributionReport200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	return toSerialize, nil
}

type NullableQueueReleaseGroupAttributionReport200Response struct {
	value *QueueReleaseGroupAttributionReport200Response
	isSet bool
}

func (v NullableQueueReleaseGroupAttributionReport200Response) Get() *QueueReleaseGroupAttributionReport200Response {
	return v.value
}

func (v *NullableQueueReleaseGroupAttributionReport200Response) Set(val *QueueReleaseGroupAttributionReport200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueReleaseGroupAttributionReport200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueReleaseGroupAttributionReport200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueReleaseGroupAttributionReport200Response(val *QueueReleaseGroupAttributionReport200Response) *NullableQueueReleaseGroupAttributionReport200Response {
	return &NullableQueueReleaseGroupAttributionReport200Response{value: val, isSet: true}
}

func (v NullableQueueReleaseGroupAttributionReport200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueReleaseGroupAttributionReport200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


