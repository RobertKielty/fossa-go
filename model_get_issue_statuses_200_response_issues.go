/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueStatuses200ResponseIssues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueStatuses200ResponseIssues{}

// GetIssueStatuses200ResponseIssues struct for GetIssueStatuses200ResponseIssues
type GetIssueStatuses200ResponseIssues struct {
	Active *int32 `json:"active,omitempty"`
	Ignored *int32 `json:"ignored,omitempty"`
}

// NewGetIssueStatuses200ResponseIssues instantiates a new GetIssueStatuses200ResponseIssues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueStatuses200ResponseIssues() *GetIssueStatuses200ResponseIssues {
	this := GetIssueStatuses200ResponseIssues{}
	return &this
}

// NewGetIssueStatuses200ResponseIssuesWithDefaults instantiates a new GetIssueStatuses200ResponseIssues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueStatuses200ResponseIssuesWithDefaults() *GetIssueStatuses200ResponseIssues {
	this := GetIssueStatuses200ResponseIssues{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetIssueStatuses200ResponseIssues) GetActive() int32 {
	if o == nil || IsNil(o.Active) {
		var ret int32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueStatuses200ResponseIssues) GetActiveOk() (*int32, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetIssueStatuses200ResponseIssues) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given int32 and assigns it to the Active field.
func (o *GetIssueStatuses200ResponseIssues) SetActive(v int32) {
	o.Active = &v
}

// GetIgnored returns the Ignored field value if set, zero value otherwise.
func (o *GetIssueStatuses200ResponseIssues) GetIgnored() int32 {
	if o == nil || IsNil(o.Ignored) {
		var ret int32
		return ret
	}
	return *o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueStatuses200ResponseIssues) GetIgnoredOk() (*int32, bool) {
	if o == nil || IsNil(o.Ignored) {
		return nil, false
	}
	return o.Ignored, true
}

// HasIgnored returns a boolean if a field has been set.
func (o *GetIssueStatuses200ResponseIssues) HasIgnored() bool {
	if o != nil && !IsNil(o.Ignored) {
		return true
	}

	return false
}

// SetIgnored gets a reference to the given int32 and assigns it to the Ignored field.
func (o *GetIssueStatuses200ResponseIssues) SetIgnored(v int32) {
	o.Ignored = &v
}

func (o GetIssueStatuses200ResponseIssues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueStatuses200ResponseIssues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Ignored) {
		toSerialize["ignored"] = o.Ignored
	}
	return toSerialize, nil
}

type NullableGetIssueStatuses200ResponseIssues struct {
	value *GetIssueStatuses200ResponseIssues
	isSet bool
}

func (v NullableGetIssueStatuses200ResponseIssues) Get() *GetIssueStatuses200ResponseIssues {
	return v.value
}

func (v *NullableGetIssueStatuses200ResponseIssues) Set(val *GetIssueStatuses200ResponseIssues) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueStatuses200ResponseIssues) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueStatuses200ResponseIssues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueStatuses200ResponseIssues(val *GetIssueStatuses200ResponseIssues) *NullableGetIssueStatuses200ResponseIssues {
	return &NullableGetIssueStatuses200ResponseIssues{value: val, isSet: true}
}

func (v NullableGetIssueStatuses200ResponseIssues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueStatuses200ResponseIssues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


