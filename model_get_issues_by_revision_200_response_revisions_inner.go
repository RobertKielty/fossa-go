/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssuesByRevision200ResponseRevisionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssuesByRevision200ResponseRevisionsInner{}

// GetIssuesByRevision200ResponseRevisionsInner struct for GetIssuesByRevision200ResponseRevisionsInner
type GetIssuesByRevision200ResponseRevisionsInner struct {
	RevisionId *string `json:"revisionId,omitempty"`
	DependencyName *string `json:"dependencyName,omitempty"`
	IssueCount *int32 `json:"issueCount,omitempty"`
	ProjectCount *int32 `json:"projectCount,omitempty"`
	JiraTicketCount *int32 `json:"jiraTicketCount,omitempty"`
	Depth *GetIssuesByRevision200ResponseRevisionsInnerDepth `json:"depth,omitempty"`
	Type *GetIssuesByRevision200ResponseRevisionsInnerType `json:"type,omitempty"`
}

// NewGetIssuesByRevision200ResponseRevisionsInner instantiates a new GetIssuesByRevision200ResponseRevisionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssuesByRevision200ResponseRevisionsInner() *GetIssuesByRevision200ResponseRevisionsInner {
	this := GetIssuesByRevision200ResponseRevisionsInner{}
	return &this
}

// NewGetIssuesByRevision200ResponseRevisionsInnerWithDefaults instantiates a new GetIssuesByRevision200ResponseRevisionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssuesByRevision200ResponseRevisionsInnerWithDefaults() *GetIssuesByRevision200ResponseRevisionsInner {
	this := GetIssuesByRevision200ResponseRevisionsInner{}
	return &this
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetRevisionId() string {
	if o == nil || IsNil(o.RevisionId) {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetRevisionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionId) {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) HasRevisionId() bool {
	if o != nil && !IsNil(o.RevisionId) {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *GetIssuesByRevision200ResponseRevisionsInner) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetDependencyName returns the DependencyName field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetDependencyName() string {
	if o == nil || IsNil(o.DependencyName) {
		var ret string
		return ret
	}
	return *o.DependencyName
}

// GetDependencyNameOk returns a tuple with the DependencyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetDependencyNameOk() (*string, bool) {
	if o == nil || IsNil(o.DependencyName) {
		return nil, false
	}
	return o.DependencyName, true
}

// HasDependencyName returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) HasDependencyName() bool {
	if o != nil && !IsNil(o.DependencyName) {
		return true
	}

	return false
}

// SetDependencyName gets a reference to the given string and assigns it to the DependencyName field.
func (o *GetIssuesByRevision200ResponseRevisionsInner) SetDependencyName(v string) {
	o.DependencyName = &v
}

// GetIssueCount returns the IssueCount field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetIssueCount() int32 {
	if o == nil || IsNil(o.IssueCount) {
		var ret int32
		return ret
	}
	return *o.IssueCount
}

// GetIssueCountOk returns a tuple with the IssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetIssueCountOk() (*int32, bool) {
	if o == nil || IsNil(o.IssueCount) {
		return nil, false
	}
	return o.IssueCount, true
}

// HasIssueCount returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) HasIssueCount() bool {
	if o != nil && !IsNil(o.IssueCount) {
		return true
	}

	return false
}

// SetIssueCount gets a reference to the given int32 and assigns it to the IssueCount field.
func (o *GetIssuesByRevision200ResponseRevisionsInner) SetIssueCount(v int32) {
	o.IssueCount = &v
}

// GetProjectCount returns the ProjectCount field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetProjectCount() int32 {
	if o == nil || IsNil(o.ProjectCount) {
		var ret int32
		return ret
	}
	return *o.ProjectCount
}

// GetProjectCountOk returns a tuple with the ProjectCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetProjectCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectCount) {
		return nil, false
	}
	return o.ProjectCount, true
}

// HasProjectCount returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) HasProjectCount() bool {
	if o != nil && !IsNil(o.ProjectCount) {
		return true
	}

	return false
}

// SetProjectCount gets a reference to the given int32 and assigns it to the ProjectCount field.
func (o *GetIssuesByRevision200ResponseRevisionsInner) SetProjectCount(v int32) {
	o.ProjectCount = &v
}

// GetJiraTicketCount returns the JiraTicketCount field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetJiraTicketCount() int32 {
	if o == nil || IsNil(o.JiraTicketCount) {
		var ret int32
		return ret
	}
	return *o.JiraTicketCount
}

// GetJiraTicketCountOk returns a tuple with the JiraTicketCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetJiraTicketCountOk() (*int32, bool) {
	if o == nil || IsNil(o.JiraTicketCount) {
		return nil, false
	}
	return o.JiraTicketCount, true
}

// HasJiraTicketCount returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) HasJiraTicketCount() bool {
	if o != nil && !IsNil(o.JiraTicketCount) {
		return true
	}

	return false
}

// SetJiraTicketCount gets a reference to the given int32 and assigns it to the JiraTicketCount field.
func (o *GetIssuesByRevision200ResponseRevisionsInner) SetJiraTicketCount(v int32) {
	o.JiraTicketCount = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetDepth() GetIssuesByRevision200ResponseRevisionsInnerDepth {
	if o == nil || IsNil(o.Depth) {
		var ret GetIssuesByRevision200ResponseRevisionsInnerDepth
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetDepthOk() (*GetIssuesByRevision200ResponseRevisionsInnerDepth, bool) {
	if o == nil || IsNil(o.Depth) {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) HasDepth() bool {
	if o != nil && !IsNil(o.Depth) {
		return true
	}

	return false
}

// SetDepth gets a reference to the given GetIssuesByRevision200ResponseRevisionsInnerDepth and assigns it to the Depth field.
func (o *GetIssuesByRevision200ResponseRevisionsInner) SetDepth(v GetIssuesByRevision200ResponseRevisionsInnerDepth) {
	o.Depth = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetType() GetIssuesByRevision200ResponseRevisionsInnerType {
	if o == nil || IsNil(o.Type) {
		var ret GetIssuesByRevision200ResponseRevisionsInnerType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) GetTypeOk() (*GetIssuesByRevision200ResponseRevisionsInnerType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GetIssuesByRevision200ResponseRevisionsInnerType and assigns it to the Type field.
func (o *GetIssuesByRevision200ResponseRevisionsInner) SetType(v GetIssuesByRevision200ResponseRevisionsInnerType) {
	o.Type = &v
}

func (o GetIssuesByRevision200ResponseRevisionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssuesByRevision200ResponseRevisionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RevisionId) {
		toSerialize["revisionId"] = o.RevisionId
	}
	if !IsNil(o.DependencyName) {
		toSerialize["dependencyName"] = o.DependencyName
	}
	if !IsNil(o.IssueCount) {
		toSerialize["issueCount"] = o.IssueCount
	}
	if !IsNil(o.ProjectCount) {
		toSerialize["projectCount"] = o.ProjectCount
	}
	if !IsNil(o.JiraTicketCount) {
		toSerialize["jiraTicketCount"] = o.JiraTicketCount
	}
	if !IsNil(o.Depth) {
		toSerialize["depth"] = o.Depth
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetIssuesByRevision200ResponseRevisionsInner struct {
	value *GetIssuesByRevision200ResponseRevisionsInner
	isSet bool
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInner) Get() *GetIssuesByRevision200ResponseRevisionsInner {
	return v.value
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInner) Set(val *GetIssuesByRevision200ResponseRevisionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssuesByRevision200ResponseRevisionsInner(val *GetIssuesByRevision200ResponseRevisionsInner) *NullableGetIssuesByRevision200ResponseRevisionsInner {
	return &NullableGetIssuesByRevision200ResponseRevisionsInner{value: val, isSet: true}
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


