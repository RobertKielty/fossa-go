/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssue200ResponseOneOfAllOfDepths type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssue200ResponseOneOfAllOfDepths{}

// GetIssue200ResponseOneOfAllOfDepths struct for GetIssue200ResponseOneOfAllOfDepths
type GetIssue200ResponseOneOfAllOfDepths struct {
	Direct *int32 `json:"direct,omitempty"`
	Deep *int32 `json:"deep,omitempty"`
}

// NewGetIssue200ResponseOneOfAllOfDepths instantiates a new GetIssue200ResponseOneOfAllOfDepths object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssue200ResponseOneOfAllOfDepths() *GetIssue200ResponseOneOfAllOfDepths {
	this := GetIssue200ResponseOneOfAllOfDepths{}
	return &this
}

// NewGetIssue200ResponseOneOfAllOfDepthsWithDefaults instantiates a new GetIssue200ResponseOneOfAllOfDepths object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssue200ResponseOneOfAllOfDepthsWithDefaults() *GetIssue200ResponseOneOfAllOfDepths {
	this := GetIssue200ResponseOneOfAllOfDepths{}
	return &this
}

// GetDirect returns the Direct field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfDepths) GetDirect() int32 {
	if o == nil || IsNil(o.Direct) {
		var ret int32
		return ret
	}
	return *o.Direct
}

// GetDirectOk returns a tuple with the Direct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfDepths) GetDirectOk() (*int32, bool) {
	if o == nil || IsNil(o.Direct) {
		return nil, false
	}
	return o.Direct, true
}

// HasDirect returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfDepths) HasDirect() bool {
	if o != nil && !IsNil(o.Direct) {
		return true
	}

	return false
}

// SetDirect gets a reference to the given int32 and assigns it to the Direct field.
func (o *GetIssue200ResponseOneOfAllOfDepths) SetDirect(v int32) {
	o.Direct = &v
}

// GetDeep returns the Deep field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfDepths) GetDeep() int32 {
	if o == nil || IsNil(o.Deep) {
		var ret int32
		return ret
	}
	return *o.Deep
}

// GetDeepOk returns a tuple with the Deep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfDepths) GetDeepOk() (*int32, bool) {
	if o == nil || IsNil(o.Deep) {
		return nil, false
	}
	return o.Deep, true
}

// HasDeep returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfDepths) HasDeep() bool {
	if o != nil && !IsNil(o.Deep) {
		return true
	}

	return false
}

// SetDeep gets a reference to the given int32 and assigns it to the Deep field.
func (o *GetIssue200ResponseOneOfAllOfDepths) SetDeep(v int32) {
	o.Deep = &v
}

func (o GetIssue200ResponseOneOfAllOfDepths) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssue200ResponseOneOfAllOfDepths) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Direct) {
		toSerialize["direct"] = o.Direct
	}
	if !IsNil(o.Deep) {
		toSerialize["deep"] = o.Deep
	}
	return toSerialize, nil
}

type NullableGetIssue200ResponseOneOfAllOfDepths struct {
	value *GetIssue200ResponseOneOfAllOfDepths
	isSet bool
}

func (v NullableGetIssue200ResponseOneOfAllOfDepths) Get() *GetIssue200ResponseOneOfAllOfDepths {
	return v.value
}

func (v *NullableGetIssue200ResponseOneOfAllOfDepths) Set(val *GetIssue200ResponseOneOfAllOfDepths) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssue200ResponseOneOfAllOfDepths) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssue200ResponseOneOfAllOfDepths) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssue200ResponseOneOfAllOfDepths(val *GetIssue200ResponseOneOfAllOfDepths) *NullableGetIssue200ResponseOneOfAllOfDepths {
	return &NullableGetIssue200ResponseOneOfAllOfDepths{value: val, isSet: true}
}

func (v NullableGetIssue200ResponseOneOfAllOfDepths) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssue200ResponseOneOfAllOfDepths) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


