/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetReleaseGroupReleases200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReleaseGroupReleases200Response{}

// GetReleaseGroupReleases200Response struct for GetReleaseGroupReleases200Response
type GetReleaseGroupReleases200Response struct {
	Releases []GetReleaseGroupById200ResponseAllOfReleasesInner `json:"releases,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewGetReleaseGroupReleases200Response instantiates a new GetReleaseGroupReleases200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReleaseGroupReleases200Response() *GetReleaseGroupReleases200Response {
	this := GetReleaseGroupReleases200Response{}
	return &this
}

// NewGetReleaseGroupReleases200ResponseWithDefaults instantiates a new GetReleaseGroupReleases200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReleaseGroupReleases200ResponseWithDefaults() *GetReleaseGroupReleases200Response {
	this := GetReleaseGroupReleases200Response{}
	return &this
}

// GetReleases returns the Releases field value if set, zero value otherwise.
func (o *GetReleaseGroupReleases200Response) GetReleases() []GetReleaseGroupById200ResponseAllOfReleasesInner {
	if o == nil || IsNil(o.Releases) {
		var ret []GetReleaseGroupById200ResponseAllOfReleasesInner
		return ret
	}
	return o.Releases
}

// GetReleasesOk returns a tuple with the Releases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleases200Response) GetReleasesOk() ([]GetReleaseGroupById200ResponseAllOfReleasesInner, bool) {
	if o == nil || IsNil(o.Releases) {
		return nil, false
	}
	return o.Releases, true
}

// HasReleases returns a boolean if a field has been set.
func (o *GetReleaseGroupReleases200Response) HasReleases() bool {
	if o != nil && !IsNil(o.Releases) {
		return true
	}

	return false
}

// SetReleases gets a reference to the given []GetReleaseGroupById200ResponseAllOfReleasesInner and assigns it to the Releases field.
func (o *GetReleaseGroupReleases200Response) SetReleases(v []GetReleaseGroupById200ResponseAllOfReleasesInner) {
	o.Releases = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetReleaseGroupReleases200Response) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleases200Response) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetReleaseGroupReleases200Response) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetReleaseGroupReleases200Response) SetTotal(v int32) {
	o.Total = &v
}

func (o GetReleaseGroupReleases200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReleaseGroupReleases200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Releases) {
		toSerialize["releases"] = o.Releases
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableGetReleaseGroupReleases200Response struct {
	value *GetReleaseGroupReleases200Response
	isSet bool
}

func (v NullableGetReleaseGroupReleases200Response) Get() *GetReleaseGroupReleases200Response {
	return v.value
}

func (v *NullableGetReleaseGroupReleases200Response) Set(val *GetReleaseGroupReleases200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReleaseGroupReleases200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReleaseGroupReleases200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReleaseGroupReleases200Response(val *GetReleaseGroupReleases200Response) *NullableGetReleaseGroupReleases200Response {
	return &NullableGetReleaseGroupReleases200Response{value: val, isSet: true}
}

func (v NullableGetReleaseGroupReleases200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReleaseGroupReleases200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


