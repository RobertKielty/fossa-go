/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueAffectedProjects200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueAffectedProjects200ResponseInner{}

// GetIssueAffectedProjects200ResponseInner struct for GetIssueAffectedProjects200ResponseInner
type GetIssueAffectedProjects200ResponseInner struct {
	// Project ID
	Id *string `json:"id,omitempty"`
	// Revision ID
	RevisionId *string `json:"revisionId,omitempty"`
	// Project title
	Title *string `json:"title,omitempty"`
	// Project status
	Status *string `json:"status,omitempty"`
	// Default or Release Group Project's revision branch
	Branch *string `json:"branch,omitempty"`
	// Jira ticket ID
	JiraTicketId *string `json:"jiraTicketId,omitempty"`
	// Jira ticket URL
	JiraTicketURL *string `json:"jiraTicketURL,omitempty"`
	// The type of ticket export
	Type *string `json:"type,omitempty"`
}

// NewGetIssueAffectedProjects200ResponseInner instantiates a new GetIssueAffectedProjects200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueAffectedProjects200ResponseInner() *GetIssueAffectedProjects200ResponseInner {
	this := GetIssueAffectedProjects200ResponseInner{}
	return &this
}

// NewGetIssueAffectedProjects200ResponseInnerWithDefaults instantiates a new GetIssueAffectedProjects200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueAffectedProjects200ResponseInnerWithDefaults() *GetIssueAffectedProjects200ResponseInner {
	this := GetIssueAffectedProjects200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetIssueAffectedProjects200ResponseInner) SetId(v string) {
	o.Id = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetRevisionId() string {
	if o == nil || IsNil(o.RevisionId) {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetRevisionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionId) {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasRevisionId() bool {
	if o != nil && !IsNil(o.RevisionId) {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *GetIssueAffectedProjects200ResponseInner) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetIssueAffectedProjects200ResponseInner) SetTitle(v string) {
	o.Title = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetIssueAffectedProjects200ResponseInner) SetStatus(v string) {
	o.Status = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *GetIssueAffectedProjects200ResponseInner) SetBranch(v string) {
	o.Branch = &v
}

// GetJiraTicketId returns the JiraTicketId field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetJiraTicketId() string {
	if o == nil || IsNil(o.JiraTicketId) {
		var ret string
		return ret
	}
	return *o.JiraTicketId
}

// GetJiraTicketIdOk returns a tuple with the JiraTicketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetJiraTicketIdOk() (*string, bool) {
	if o == nil || IsNil(o.JiraTicketId) {
		return nil, false
	}
	return o.JiraTicketId, true
}

// HasJiraTicketId returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasJiraTicketId() bool {
	if o != nil && !IsNil(o.JiraTicketId) {
		return true
	}

	return false
}

// SetJiraTicketId gets a reference to the given string and assigns it to the JiraTicketId field.
func (o *GetIssueAffectedProjects200ResponseInner) SetJiraTicketId(v string) {
	o.JiraTicketId = &v
}

// GetJiraTicketURL returns the JiraTicketURL field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetJiraTicketURL() string {
	if o == nil || IsNil(o.JiraTicketURL) {
		var ret string
		return ret
	}
	return *o.JiraTicketURL
}

// GetJiraTicketURLOk returns a tuple with the JiraTicketURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetJiraTicketURLOk() (*string, bool) {
	if o == nil || IsNil(o.JiraTicketURL) {
		return nil, false
	}
	return o.JiraTicketURL, true
}

// HasJiraTicketURL returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasJiraTicketURL() bool {
	if o != nil && !IsNil(o.JiraTicketURL) {
		return true
	}

	return false
}

// SetJiraTicketURL gets a reference to the given string and assigns it to the JiraTicketURL field.
func (o *GetIssueAffectedProjects200ResponseInner) SetJiraTicketURL(v string) {
	o.JiraTicketURL = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetIssueAffectedProjects200ResponseInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueAffectedProjects200ResponseInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetIssueAffectedProjects200ResponseInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetIssueAffectedProjects200ResponseInner) SetType(v string) {
	o.Type = &v
}

func (o GetIssueAffectedProjects200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueAffectedProjects200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RevisionId) {
		toSerialize["revisionId"] = o.RevisionId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.JiraTicketId) {
		toSerialize["jiraTicketId"] = o.JiraTicketId
	}
	if !IsNil(o.JiraTicketURL) {
		toSerialize["jiraTicketURL"] = o.JiraTicketURL
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetIssueAffectedProjects200ResponseInner struct {
	value *GetIssueAffectedProjects200ResponseInner
	isSet bool
}

func (v NullableGetIssueAffectedProjects200ResponseInner) Get() *GetIssueAffectedProjects200ResponseInner {
	return v.value
}

func (v *NullableGetIssueAffectedProjects200ResponseInner) Set(val *GetIssueAffectedProjects200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueAffectedProjects200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueAffectedProjects200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueAffectedProjects200ResponseInner(val *GetIssueAffectedProjects200ResponseInner) *NullableGetIssueAffectedProjects200ResponseInner {
	return &NullableGetIssueAffectedProjects200ResponseInner{value: val, isSet: true}
}

func (v NullableGetIssueAffectedProjects200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueAffectedProjects200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


