/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the MavenRepository type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MavenRepository{}

// MavenRepository struct for MavenRepository
type MavenRepository struct {
	// UUID of the Maven repo (For FOSSA internal usage)
	Id *float32 `json:"_id,omitempty"`
	// User configured ID (corresponds with a Maven Server if credentials are necessary)
	Id *string `json:"id,omitempty"`
	// URL of the Maven Repository
	Url *string `json:"url,omitempty"`
}

// NewMavenRepository instantiates a new MavenRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMavenRepository() *MavenRepository {
	this := MavenRepository{}
	return &this
}

// NewMavenRepositoryWithDefaults instantiates a new MavenRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMavenRepositoryWithDefaults() *MavenRepository {
	this := MavenRepository{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MavenRepository) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MavenRepository) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MavenRepository) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *MavenRepository) SetId(v float32) {
	o.Id = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MavenRepository) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MavenRepository) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MavenRepository) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MavenRepository) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MavenRepository) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MavenRepository) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MavenRepository) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MavenRepository) SetUrl(v string) {
	o.Url = &v
}

func (o MavenRepository) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MavenRepository) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["_id"] = o.Id
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableMavenRepository struct {
	value *MavenRepository
	isSet bool
}

func (v NullableMavenRepository) Get() *MavenRepository {
	return v.value
}

func (v *NullableMavenRepository) Set(val *MavenRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableMavenRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableMavenRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMavenRepository(val *MavenRepository) *NullableMavenRepository {
	return &NullableMavenRepository{value: val, isSet: true}
}

func (v NullableMavenRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMavenRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


