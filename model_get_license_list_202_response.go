/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetLicenseList202Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLicenseList202Response{}

// GetLicenseList202Response struct for GetLicenseList202Response
type GetLicenseList202Response struct {
	Message *string `json:"message,omitempty"`
	Data []string `json:"data,omitempty"`
}

// NewGetLicenseList202Response instantiates a new GetLicenseList202Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLicenseList202Response() *GetLicenseList202Response {
	this := GetLicenseList202Response{}
	return &this
}

// NewGetLicenseList202ResponseWithDefaults instantiates a new GetLicenseList202Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLicenseList202ResponseWithDefaults() *GetLicenseList202Response {
	this := GetLicenseList202Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetLicenseList202Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicenseList202Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetLicenseList202Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetLicenseList202Response) SetMessage(v string) {
	o.Message = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetLicenseList202Response) GetData() []string {
	if o == nil || IsNil(o.Data) {
		var ret []string
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicenseList202Response) GetDataOk() ([]string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetLicenseList202Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []string and assigns it to the Data field.
func (o *GetLicenseList202Response) SetData(v []string) {
	o.Data = v
}

func (o GetLicenseList202Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLicenseList202Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGetLicenseList202Response struct {
	value *GetLicenseList202Response
	isSet bool
}

func (v NullableGetLicenseList202Response) Get() *GetLicenseList202Response {
	return v.value
}

func (v *NullableGetLicenseList202Response) Set(val *GetLicenseList202Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLicenseList202Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLicenseList202Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLicenseList202Response(val *GetLicenseList202Response) *NullableGetLicenseList202Response {
	return &NullableGetLicenseList202Response{value: val, isSet: true}
}

func (v NullableGetLicenseList202Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLicenseList202Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


