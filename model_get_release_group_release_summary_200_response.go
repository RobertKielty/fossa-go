/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetReleaseGroupReleaseSummary200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReleaseGroupReleaseSummary200Response{}

// GetReleaseGroupReleaseSummary200Response struct for GetReleaseGroupReleaseSummary200Response
type GetReleaseGroupReleaseSummary200Response struct {
	LicenseCount *int32 `json:"license_count,omitempty"`
	DependencyCount *int32 `json:"dependency_count,omitempty"`
	ProjectCount *int32 `json:"project_count,omitempty"`
	UnresolvedIssueCount *int32 `json:"unresolved_issue_count,omitempty"`
	UnresolvedLicensingIssueCount *int32 `json:"unresolved_licensing_issue_count,omitempty"`
	UnresolvedSecurityIssueCount *int32 `json:"unresolved_security_issue_count,omitempty"`
	UnresolvedQualityIssueCount *int32 `json:"unresolved_quality_issue_count,omitempty"`
	IsSteady *bool `json:"isSteady,omitempty"`
}

// NewGetReleaseGroupReleaseSummary200Response instantiates a new GetReleaseGroupReleaseSummary200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReleaseGroupReleaseSummary200Response() *GetReleaseGroupReleaseSummary200Response {
	this := GetReleaseGroupReleaseSummary200Response{}
	return &this
}

// NewGetReleaseGroupReleaseSummary200ResponseWithDefaults instantiates a new GetReleaseGroupReleaseSummary200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReleaseGroupReleaseSummary200ResponseWithDefaults() *GetReleaseGroupReleaseSummary200Response {
	this := GetReleaseGroupReleaseSummary200Response{}
	return &this
}

// GetLicenseCount returns the LicenseCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetLicenseCount() int32 {
	if o == nil || IsNil(o.LicenseCount) {
		var ret int32
		return ret
	}
	return *o.LicenseCount
}

// GetLicenseCountOk returns a tuple with the LicenseCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetLicenseCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseCount) {
		return nil, false
	}
	return o.LicenseCount, true
}

// HasLicenseCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasLicenseCount() bool {
	if o != nil && !IsNil(o.LicenseCount) {
		return true
	}

	return false
}

// SetLicenseCount gets a reference to the given int32 and assigns it to the LicenseCount field.
func (o *GetReleaseGroupReleaseSummary200Response) SetLicenseCount(v int32) {
	o.LicenseCount = &v
}

// GetDependencyCount returns the DependencyCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetDependencyCount() int32 {
	if o == nil || IsNil(o.DependencyCount) {
		var ret int32
		return ret
	}
	return *o.DependencyCount
}

// GetDependencyCountOk returns a tuple with the DependencyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetDependencyCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DependencyCount) {
		return nil, false
	}
	return o.DependencyCount, true
}

// HasDependencyCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasDependencyCount() bool {
	if o != nil && !IsNil(o.DependencyCount) {
		return true
	}

	return false
}

// SetDependencyCount gets a reference to the given int32 and assigns it to the DependencyCount field.
func (o *GetReleaseGroupReleaseSummary200Response) SetDependencyCount(v int32) {
	o.DependencyCount = &v
}

// GetProjectCount returns the ProjectCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetProjectCount() int32 {
	if o == nil || IsNil(o.ProjectCount) {
		var ret int32
		return ret
	}
	return *o.ProjectCount
}

// GetProjectCountOk returns a tuple with the ProjectCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetProjectCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectCount) {
		return nil, false
	}
	return o.ProjectCount, true
}

// HasProjectCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasProjectCount() bool {
	if o != nil && !IsNil(o.ProjectCount) {
		return true
	}

	return false
}

// SetProjectCount gets a reference to the given int32 and assigns it to the ProjectCount field.
func (o *GetReleaseGroupReleaseSummary200Response) SetProjectCount(v int32) {
	o.ProjectCount = &v
}

// GetUnresolvedIssueCount returns the UnresolvedIssueCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedIssueCount() int32 {
	if o == nil || IsNil(o.UnresolvedIssueCount) {
		var ret int32
		return ret
	}
	return *o.UnresolvedIssueCount
}

// GetUnresolvedIssueCountOk returns a tuple with the UnresolvedIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedIssueCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnresolvedIssueCount) {
		return nil, false
	}
	return o.UnresolvedIssueCount, true
}

// HasUnresolvedIssueCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasUnresolvedIssueCount() bool {
	if o != nil && !IsNil(o.UnresolvedIssueCount) {
		return true
	}

	return false
}

// SetUnresolvedIssueCount gets a reference to the given int32 and assigns it to the UnresolvedIssueCount field.
func (o *GetReleaseGroupReleaseSummary200Response) SetUnresolvedIssueCount(v int32) {
	o.UnresolvedIssueCount = &v
}

// GetUnresolvedLicensingIssueCount returns the UnresolvedLicensingIssueCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedLicensingIssueCount() int32 {
	if o == nil || IsNil(o.UnresolvedLicensingIssueCount) {
		var ret int32
		return ret
	}
	return *o.UnresolvedLicensingIssueCount
}

// GetUnresolvedLicensingIssueCountOk returns a tuple with the UnresolvedLicensingIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedLicensingIssueCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnresolvedLicensingIssueCount) {
		return nil, false
	}
	return o.UnresolvedLicensingIssueCount, true
}

// HasUnresolvedLicensingIssueCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasUnresolvedLicensingIssueCount() bool {
	if o != nil && !IsNil(o.UnresolvedLicensingIssueCount) {
		return true
	}

	return false
}

// SetUnresolvedLicensingIssueCount gets a reference to the given int32 and assigns it to the UnresolvedLicensingIssueCount field.
func (o *GetReleaseGroupReleaseSummary200Response) SetUnresolvedLicensingIssueCount(v int32) {
	o.UnresolvedLicensingIssueCount = &v
}

// GetUnresolvedSecurityIssueCount returns the UnresolvedSecurityIssueCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedSecurityIssueCount() int32 {
	if o == nil || IsNil(o.UnresolvedSecurityIssueCount) {
		var ret int32
		return ret
	}
	return *o.UnresolvedSecurityIssueCount
}

// GetUnresolvedSecurityIssueCountOk returns a tuple with the UnresolvedSecurityIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedSecurityIssueCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnresolvedSecurityIssueCount) {
		return nil, false
	}
	return o.UnresolvedSecurityIssueCount, true
}

// HasUnresolvedSecurityIssueCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasUnresolvedSecurityIssueCount() bool {
	if o != nil && !IsNil(o.UnresolvedSecurityIssueCount) {
		return true
	}

	return false
}

// SetUnresolvedSecurityIssueCount gets a reference to the given int32 and assigns it to the UnresolvedSecurityIssueCount field.
func (o *GetReleaseGroupReleaseSummary200Response) SetUnresolvedSecurityIssueCount(v int32) {
	o.UnresolvedSecurityIssueCount = &v
}

// GetUnresolvedQualityIssueCount returns the UnresolvedQualityIssueCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedQualityIssueCount() int32 {
	if o == nil || IsNil(o.UnresolvedQualityIssueCount) {
		var ret int32
		return ret
	}
	return *o.UnresolvedQualityIssueCount
}

// GetUnresolvedQualityIssueCountOk returns a tuple with the UnresolvedQualityIssueCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetUnresolvedQualityIssueCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnresolvedQualityIssueCount) {
		return nil, false
	}
	return o.UnresolvedQualityIssueCount, true
}

// HasUnresolvedQualityIssueCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasUnresolvedQualityIssueCount() bool {
	if o != nil && !IsNil(o.UnresolvedQualityIssueCount) {
		return true
	}

	return false
}

// SetUnresolvedQualityIssueCount gets a reference to the given int32 and assigns it to the UnresolvedQualityIssueCount field.
func (o *GetReleaseGroupReleaseSummary200Response) SetUnresolvedQualityIssueCount(v int32) {
	o.UnresolvedQualityIssueCount = &v
}

// GetIsSteady returns the IsSteady field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseSummary200Response) GetIsSteady() bool {
	if o == nil || IsNil(o.IsSteady) {
		var ret bool
		return ret
	}
	return *o.IsSteady
}

// GetIsSteadyOk returns a tuple with the IsSteady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseSummary200Response) GetIsSteadyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSteady) {
		return nil, false
	}
	return o.IsSteady, true
}

// HasIsSteady returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseSummary200Response) HasIsSteady() bool {
	if o != nil && !IsNil(o.IsSteady) {
		return true
	}

	return false
}

// SetIsSteady gets a reference to the given bool and assigns it to the IsSteady field.
func (o *GetReleaseGroupReleaseSummary200Response) SetIsSteady(v bool) {
	o.IsSteady = &v
}

func (o GetReleaseGroupReleaseSummary200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReleaseGroupReleaseSummary200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LicenseCount) {
		toSerialize["license_count"] = o.LicenseCount
	}
	if !IsNil(o.DependencyCount) {
		toSerialize["dependency_count"] = o.DependencyCount
	}
	if !IsNil(o.ProjectCount) {
		toSerialize["project_count"] = o.ProjectCount
	}
	if !IsNil(o.UnresolvedIssueCount) {
		toSerialize["unresolved_issue_count"] = o.UnresolvedIssueCount
	}
	if !IsNil(o.UnresolvedLicensingIssueCount) {
		toSerialize["unresolved_licensing_issue_count"] = o.UnresolvedLicensingIssueCount
	}
	if !IsNil(o.UnresolvedSecurityIssueCount) {
		toSerialize["unresolved_security_issue_count"] = o.UnresolvedSecurityIssueCount
	}
	if !IsNil(o.UnresolvedQualityIssueCount) {
		toSerialize["unresolved_quality_issue_count"] = o.UnresolvedQualityIssueCount
	}
	if !IsNil(o.IsSteady) {
		toSerialize["isSteady"] = o.IsSteady
	}
	return toSerialize, nil
}

type NullableGetReleaseGroupReleaseSummary200Response struct {
	value *GetReleaseGroupReleaseSummary200Response
	isSet bool
}

func (v NullableGetReleaseGroupReleaseSummary200Response) Get() *GetReleaseGroupReleaseSummary200Response {
	return v.value
}

func (v *NullableGetReleaseGroupReleaseSummary200Response) Set(val *GetReleaseGroupReleaseSummary200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReleaseGroupReleaseSummary200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReleaseGroupReleaseSummary200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReleaseGroupReleaseSummary200Response(val *GetReleaseGroupReleaseSummary200Response) *NullableGetReleaseGroupReleaseSummary200Response {
	return &NullableGetReleaseGroupReleaseSummary200Response{value: val, isSet: true}
}

func (v NullableGetReleaseGroupReleaseSummary200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReleaseGroupReleaseSummary200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


