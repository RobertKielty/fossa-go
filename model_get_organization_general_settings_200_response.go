/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetOrganizationGeneralSettings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationGeneralSettings200Response{}

// GetOrganizationGeneralSettings200Response struct for GetOrganizationGeneralSettings200Response
type GetOrganizationGeneralSettings200Response struct {
	Labels []GetOrganizationGeneralSettings200ResponseLabelsInner `json:"labels,omitempty"`
	Title *string `json:"title,omitempty"`
	Email *string `json:"email,omitempty"`
	DefaultRoleId *int32 `json:"defaultRoleId,omitempty"`
	DependencySignatures *string `json:"dependencySignatures,omitempty"`
	DisableNonCustomTeamUserRoles *bool `json:"disableNonCustomTeamUserRoles,omitempty"`
}

// NewGetOrganizationGeneralSettings200Response instantiates a new GetOrganizationGeneralSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationGeneralSettings200Response() *GetOrganizationGeneralSettings200Response {
	this := GetOrganizationGeneralSettings200Response{}
	return &this
}

// NewGetOrganizationGeneralSettings200ResponseWithDefaults instantiates a new GetOrganizationGeneralSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationGeneralSettings200ResponseWithDefaults() *GetOrganizationGeneralSettings200Response {
	this := GetOrganizationGeneralSettings200Response{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GetOrganizationGeneralSettings200Response) GetLabels() []GetOrganizationGeneralSettings200ResponseLabelsInner {
	if o == nil || IsNil(o.Labels) {
		var ret []GetOrganizationGeneralSettings200ResponseLabelsInner
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationGeneralSettings200Response) GetLabelsOk() ([]GetOrganizationGeneralSettings200ResponseLabelsInner, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GetOrganizationGeneralSettings200Response) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []GetOrganizationGeneralSettings200ResponseLabelsInner and assigns it to the Labels field.
func (o *GetOrganizationGeneralSettings200Response) SetLabels(v []GetOrganizationGeneralSettings200ResponseLabelsInner) {
	o.Labels = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetOrganizationGeneralSettings200Response) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationGeneralSettings200Response) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetOrganizationGeneralSettings200Response) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetOrganizationGeneralSettings200Response) SetTitle(v string) {
	o.Title = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetOrganizationGeneralSettings200Response) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationGeneralSettings200Response) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetOrganizationGeneralSettings200Response) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetOrganizationGeneralSettings200Response) SetEmail(v string) {
	o.Email = &v
}

// GetDefaultRoleId returns the DefaultRoleId field value if set, zero value otherwise.
func (o *GetOrganizationGeneralSettings200Response) GetDefaultRoleId() int32 {
	if o == nil || IsNil(o.DefaultRoleId) {
		var ret int32
		return ret
	}
	return *o.DefaultRoleId
}

// GetDefaultRoleIdOk returns a tuple with the DefaultRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationGeneralSettings200Response) GetDefaultRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultRoleId) {
		return nil, false
	}
	return o.DefaultRoleId, true
}

// HasDefaultRoleId returns a boolean if a field has been set.
func (o *GetOrganizationGeneralSettings200Response) HasDefaultRoleId() bool {
	if o != nil && !IsNil(o.DefaultRoleId) {
		return true
	}

	return false
}

// SetDefaultRoleId gets a reference to the given int32 and assigns it to the DefaultRoleId field.
func (o *GetOrganizationGeneralSettings200Response) SetDefaultRoleId(v int32) {
	o.DefaultRoleId = &v
}

// GetDependencySignatures returns the DependencySignatures field value if set, zero value otherwise.
func (o *GetOrganizationGeneralSettings200Response) GetDependencySignatures() string {
	if o == nil || IsNil(o.DependencySignatures) {
		var ret string
		return ret
	}
	return *o.DependencySignatures
}

// GetDependencySignaturesOk returns a tuple with the DependencySignatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationGeneralSettings200Response) GetDependencySignaturesOk() (*string, bool) {
	if o == nil || IsNil(o.DependencySignatures) {
		return nil, false
	}
	return o.DependencySignatures, true
}

// HasDependencySignatures returns a boolean if a field has been set.
func (o *GetOrganizationGeneralSettings200Response) HasDependencySignatures() bool {
	if o != nil && !IsNil(o.DependencySignatures) {
		return true
	}

	return false
}

// SetDependencySignatures gets a reference to the given string and assigns it to the DependencySignatures field.
func (o *GetOrganizationGeneralSettings200Response) SetDependencySignatures(v string) {
	o.DependencySignatures = &v
}

// GetDisableNonCustomTeamUserRoles returns the DisableNonCustomTeamUserRoles field value if set, zero value otherwise.
func (o *GetOrganizationGeneralSettings200Response) GetDisableNonCustomTeamUserRoles() bool {
	if o == nil || IsNil(o.DisableNonCustomTeamUserRoles) {
		var ret bool
		return ret
	}
	return *o.DisableNonCustomTeamUserRoles
}

// GetDisableNonCustomTeamUserRolesOk returns a tuple with the DisableNonCustomTeamUserRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationGeneralSettings200Response) GetDisableNonCustomTeamUserRolesOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableNonCustomTeamUserRoles) {
		return nil, false
	}
	return o.DisableNonCustomTeamUserRoles, true
}

// HasDisableNonCustomTeamUserRoles returns a boolean if a field has been set.
func (o *GetOrganizationGeneralSettings200Response) HasDisableNonCustomTeamUserRoles() bool {
	if o != nil && !IsNil(o.DisableNonCustomTeamUserRoles) {
		return true
	}

	return false
}

// SetDisableNonCustomTeamUserRoles gets a reference to the given bool and assigns it to the DisableNonCustomTeamUserRoles field.
func (o *GetOrganizationGeneralSettings200Response) SetDisableNonCustomTeamUserRoles(v bool) {
	o.DisableNonCustomTeamUserRoles = &v
}

func (o GetOrganizationGeneralSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationGeneralSettings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.DefaultRoleId) {
		toSerialize["defaultRoleId"] = o.DefaultRoleId
	}
	if !IsNil(o.DependencySignatures) {
		toSerialize["dependencySignatures"] = o.DependencySignatures
	}
	if !IsNil(o.DisableNonCustomTeamUserRoles) {
		toSerialize["disableNonCustomTeamUserRoles"] = o.DisableNonCustomTeamUserRoles
	}
	return toSerialize, nil
}

type NullableGetOrganizationGeneralSettings200Response struct {
	value *GetOrganizationGeneralSettings200Response
	isSet bool
}

func (v NullableGetOrganizationGeneralSettings200Response) Get() *GetOrganizationGeneralSettings200Response {
	return v.value
}

func (v *NullableGetOrganizationGeneralSettings200Response) Set(val *GetOrganizationGeneralSettings200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationGeneralSettings200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationGeneralSettings200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationGeneralSettings200Response(val *GetOrganizationGeneralSettings200Response) *NullableGetOrganizationGeneralSettings200Response {
	return &NullableGetOrganizationGeneralSettings200Response{value: val, isSet: true}
}

func (v NullableGetOrganizationGeneralSettings200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationGeneralSettings200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


