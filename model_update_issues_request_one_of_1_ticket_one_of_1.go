/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the UpdateIssuesRequestOneOf1TicketOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIssuesRequestOneOf1TicketOneOf1{}

// UpdateIssuesRequestOneOf1TicketOneOf1 struct for UpdateIssuesRequestOneOf1TicketOneOf1
type UpdateIssuesRequestOneOf1TicketOneOf1 struct {
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

// NewUpdateIssuesRequestOneOf1TicketOneOf1 instantiates a new UpdateIssuesRequestOneOf1TicketOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIssuesRequestOneOf1TicketOneOf1() *UpdateIssuesRequestOneOf1TicketOneOf1 {
	this := UpdateIssuesRequestOneOf1TicketOneOf1{}
	return &this
}

// NewUpdateIssuesRequestOneOf1TicketOneOf1WithDefaults instantiates a new UpdateIssuesRequestOneOf1TicketOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIssuesRequestOneOf1TicketOneOf1WithDefaults() *UpdateIssuesRequestOneOf1TicketOneOf1 {
	this := UpdateIssuesRequestOneOf1TicketOneOf1{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) SetUrl(v string) {
	o.Url = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf1) SetComment(v string) {
	o.Comment = &v
}

func (o UpdateIssuesRequestOneOf1TicketOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIssuesRequestOneOf1TicketOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableUpdateIssuesRequestOneOf1TicketOneOf1 struct {
	value *UpdateIssuesRequestOneOf1TicketOneOf1
	isSet bool
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOf1) Get() *UpdateIssuesRequestOneOf1TicketOneOf1 {
	return v.value
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOf1) Set(val *UpdateIssuesRequestOneOf1TicketOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIssuesRequestOneOf1TicketOneOf1(val *UpdateIssuesRequestOneOf1TicketOneOf1) *NullableUpdateIssuesRequestOneOf1TicketOneOf1 {
	return &NullableUpdateIssuesRequestOneOf1TicketOneOf1{value: val, isSet: true}
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


