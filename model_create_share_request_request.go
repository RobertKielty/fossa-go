/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateShareRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateShareRequestRequest{}

// CreateShareRequestRequest struct for CreateShareRequestRequest
type CreateShareRequestRequest struct {
	// The locator for the revision to share
	RevisionId string `json:"revisionId"`
	// The ID of the shared organization record
	SharedOrganizationId int64 `json:"sharedOrganizationId"`
}

type _CreateShareRequestRequest CreateShareRequestRequest

// NewCreateShareRequestRequest instantiates a new CreateShareRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateShareRequestRequest(revisionId string, sharedOrganizationId int64) *CreateShareRequestRequest {
	this := CreateShareRequestRequest{}
	this.RevisionId = revisionId
	this.SharedOrganizationId = sharedOrganizationId
	return &this
}

// NewCreateShareRequestRequestWithDefaults instantiates a new CreateShareRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateShareRequestRequestWithDefaults() *CreateShareRequestRequest {
	this := CreateShareRequestRequest{}
	return &this
}

// GetRevisionId returns the RevisionId field value
func (o *CreateShareRequestRequest) GetRevisionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value
// and a boolean to check if the value has been set.
func (o *CreateShareRequestRequest) GetRevisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionId, true
}

// SetRevisionId sets field value
func (o *CreateShareRequestRequest) SetRevisionId(v string) {
	o.RevisionId = v
}

// GetSharedOrganizationId returns the SharedOrganizationId field value
func (o *CreateShareRequestRequest) GetSharedOrganizationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SharedOrganizationId
}

// GetSharedOrganizationIdOk returns a tuple with the SharedOrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateShareRequestRequest) GetSharedOrganizationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedOrganizationId, true
}

// SetSharedOrganizationId sets field value
func (o *CreateShareRequestRequest) SetSharedOrganizationId(v int64) {
	o.SharedOrganizationId = v
}

func (o CreateShareRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateShareRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revisionId"] = o.RevisionId
	toSerialize["sharedOrganizationId"] = o.SharedOrganizationId
	return toSerialize, nil
}

func (o *CreateShareRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revisionId",
		"sharedOrganizationId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateShareRequestRequest := _CreateShareRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateShareRequestRequest)

	if err != nil {
		return err
	}

	*o = CreateShareRequestRequest(varCreateShareRequestRequest)

	return err
}

type NullableCreateShareRequestRequest struct {
	value *CreateShareRequestRequest
	isSet bool
}

func (v NullableCreateShareRequestRequest) Get() *CreateShareRequestRequest {
	return v.value
}

func (v *NullableCreateShareRequestRequest) Set(val *CreateShareRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateShareRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateShareRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateShareRequestRequest(val *CreateShareRequestRequest) *NullableCreateShareRequestRequest {
	return &NullableCreateShareRequestRequest{value: val, isSet: true}
}

func (v NullableCreateShareRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateShareRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


