/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner{}

// ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner struct for ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner
type ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner struct {
	ReleaseId *float32 `json:"releaseId,omitempty"`
	ReleaseTitle *string `json:"releaseTitle,omitempty"`
}

// NewListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner instantiates a new ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner() *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner {
	this := ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner{}
	return &this
}

// NewListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInnerWithDefaults instantiates a new ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInnerWithDefaults() *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner {
	this := ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner{}
	return &this
}

// GetReleaseId returns the ReleaseId field value if set, zero value otherwise.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) GetReleaseId() float32 {
	if o == nil || IsNil(o.ReleaseId) {
		var ret float32
		return ret
	}
	return *o.ReleaseId
}

// GetReleaseIdOk returns a tuple with the ReleaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) GetReleaseIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ReleaseId) {
		return nil, false
	}
	return o.ReleaseId, true
}

// HasReleaseId returns a boolean if a field has been set.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) HasReleaseId() bool {
	if o != nil && !IsNil(o.ReleaseId) {
		return true
	}

	return false
}

// SetReleaseId gets a reference to the given float32 and assigns it to the ReleaseId field.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) SetReleaseId(v float32) {
	o.ReleaseId = &v
}

// GetReleaseTitle returns the ReleaseTitle field value if set, zero value otherwise.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) GetReleaseTitle() string {
	if o == nil || IsNil(o.ReleaseTitle) {
		var ret string
		return ret
	}
	return *o.ReleaseTitle
}

// GetReleaseTitleOk returns a tuple with the ReleaseTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) GetReleaseTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseTitle) {
		return nil, false
	}
	return o.ReleaseTitle, true
}

// HasReleaseTitle returns a boolean if a field has been set.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) HasReleaseTitle() bool {
	if o != nil && !IsNil(o.ReleaseTitle) {
		return true
	}

	return false
}

// SetReleaseTitle gets a reference to the given string and assigns it to the ReleaseTitle field.
func (o *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) SetReleaseTitle(v string) {
	o.ReleaseTitle = &v
}

func (o ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReleaseId) {
		toSerialize["releaseId"] = o.ReleaseId
	}
	if !IsNil(o.ReleaseTitle) {
		toSerialize["releaseTitle"] = o.ReleaseTitle
	}
	return toSerialize, nil
}

type NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner struct {
	value *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner
	isSet bool
}

func (v NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) Get() *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner {
	return v.value
}

func (v *NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) Set(val *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner(val *ListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) *NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner {
	return &NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner{value: val, isSet: true}
}

func (v NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListReleaseGroupsForProject200ResponseInnerRevisionsInnerReleasesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


