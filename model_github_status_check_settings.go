/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GithubStatusCheckSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubStatusCheckSettings{}

// GithubStatusCheckSettings struct for GithubStatusCheckSettings
type GithubStatusCheckSettings struct {
	ProjectDefaultAutomatedIntegrationhookTimeout *float32 `json:"projectDefaultAutomatedIntegrationhookTimeout,omitempty"`
	ProjectDefaultProvidedIntegrationhookTimeout *float32 `json:"projectDefaultProvidedIntegrationhookTimeout,omitempty"`
	ProjectDefaultIntegrationhookFailState *string `json:"projectDefaultIntegrationhookFailState,omitempty"`
}

// NewGithubStatusCheckSettings instantiates a new GithubStatusCheckSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubStatusCheckSettings() *GithubStatusCheckSettings {
	this := GithubStatusCheckSettings{}
	return &this
}

// NewGithubStatusCheckSettingsWithDefaults instantiates a new GithubStatusCheckSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubStatusCheckSettingsWithDefaults() *GithubStatusCheckSettings {
	this := GithubStatusCheckSettings{}
	return &this
}

// GetProjectDefaultAutomatedIntegrationhookTimeout returns the ProjectDefaultAutomatedIntegrationhookTimeout field value if set, zero value otherwise.
func (o *GithubStatusCheckSettings) GetProjectDefaultAutomatedIntegrationhookTimeout() float32 {
	if o == nil || IsNil(o.ProjectDefaultAutomatedIntegrationhookTimeout) {
		var ret float32
		return ret
	}
	return *o.ProjectDefaultAutomatedIntegrationhookTimeout
}

// GetProjectDefaultAutomatedIntegrationhookTimeoutOk returns a tuple with the ProjectDefaultAutomatedIntegrationhookTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubStatusCheckSettings) GetProjectDefaultAutomatedIntegrationhookTimeoutOk() (*float32, bool) {
	if o == nil || IsNil(o.ProjectDefaultAutomatedIntegrationhookTimeout) {
		return nil, false
	}
	return o.ProjectDefaultAutomatedIntegrationhookTimeout, true
}

// HasProjectDefaultAutomatedIntegrationhookTimeout returns a boolean if a field has been set.
func (o *GithubStatusCheckSettings) HasProjectDefaultAutomatedIntegrationhookTimeout() bool {
	if o != nil && !IsNil(o.ProjectDefaultAutomatedIntegrationhookTimeout) {
		return true
	}

	return false
}

// SetProjectDefaultAutomatedIntegrationhookTimeout gets a reference to the given float32 and assigns it to the ProjectDefaultAutomatedIntegrationhookTimeout field.
func (o *GithubStatusCheckSettings) SetProjectDefaultAutomatedIntegrationhookTimeout(v float32) {
	o.ProjectDefaultAutomatedIntegrationhookTimeout = &v
}

// GetProjectDefaultProvidedIntegrationhookTimeout returns the ProjectDefaultProvidedIntegrationhookTimeout field value if set, zero value otherwise.
func (o *GithubStatusCheckSettings) GetProjectDefaultProvidedIntegrationhookTimeout() float32 {
	if o == nil || IsNil(o.ProjectDefaultProvidedIntegrationhookTimeout) {
		var ret float32
		return ret
	}
	return *o.ProjectDefaultProvidedIntegrationhookTimeout
}

// GetProjectDefaultProvidedIntegrationhookTimeoutOk returns a tuple with the ProjectDefaultProvidedIntegrationhookTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubStatusCheckSettings) GetProjectDefaultProvidedIntegrationhookTimeoutOk() (*float32, bool) {
	if o == nil || IsNil(o.ProjectDefaultProvidedIntegrationhookTimeout) {
		return nil, false
	}
	return o.ProjectDefaultProvidedIntegrationhookTimeout, true
}

// HasProjectDefaultProvidedIntegrationhookTimeout returns a boolean if a field has been set.
func (o *GithubStatusCheckSettings) HasProjectDefaultProvidedIntegrationhookTimeout() bool {
	if o != nil && !IsNil(o.ProjectDefaultProvidedIntegrationhookTimeout) {
		return true
	}

	return false
}

// SetProjectDefaultProvidedIntegrationhookTimeout gets a reference to the given float32 and assigns it to the ProjectDefaultProvidedIntegrationhookTimeout field.
func (o *GithubStatusCheckSettings) SetProjectDefaultProvidedIntegrationhookTimeout(v float32) {
	o.ProjectDefaultProvidedIntegrationhookTimeout = &v
}

// GetProjectDefaultIntegrationhookFailState returns the ProjectDefaultIntegrationhookFailState field value if set, zero value otherwise.
func (o *GithubStatusCheckSettings) GetProjectDefaultIntegrationhookFailState() string {
	if o == nil || IsNil(o.ProjectDefaultIntegrationhookFailState) {
		var ret string
		return ret
	}
	return *o.ProjectDefaultIntegrationhookFailState
}

// GetProjectDefaultIntegrationhookFailStateOk returns a tuple with the ProjectDefaultIntegrationhookFailState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubStatusCheckSettings) GetProjectDefaultIntegrationhookFailStateOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectDefaultIntegrationhookFailState) {
		return nil, false
	}
	return o.ProjectDefaultIntegrationhookFailState, true
}

// HasProjectDefaultIntegrationhookFailState returns a boolean if a field has been set.
func (o *GithubStatusCheckSettings) HasProjectDefaultIntegrationhookFailState() bool {
	if o != nil && !IsNil(o.ProjectDefaultIntegrationhookFailState) {
		return true
	}

	return false
}

// SetProjectDefaultIntegrationhookFailState gets a reference to the given string and assigns it to the ProjectDefaultIntegrationhookFailState field.
func (o *GithubStatusCheckSettings) SetProjectDefaultIntegrationhookFailState(v string) {
	o.ProjectDefaultIntegrationhookFailState = &v
}

func (o GithubStatusCheckSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubStatusCheckSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectDefaultAutomatedIntegrationhookTimeout) {
		toSerialize["projectDefaultAutomatedIntegrationhookTimeout"] = o.ProjectDefaultAutomatedIntegrationhookTimeout
	}
	if !IsNil(o.ProjectDefaultProvidedIntegrationhookTimeout) {
		toSerialize["projectDefaultProvidedIntegrationhookTimeout"] = o.ProjectDefaultProvidedIntegrationhookTimeout
	}
	if !IsNil(o.ProjectDefaultIntegrationhookFailState) {
		toSerialize["projectDefaultIntegrationhookFailState"] = o.ProjectDefaultIntegrationhookFailState
	}
	return toSerialize, nil
}

type NullableGithubStatusCheckSettings struct {
	value *GithubStatusCheckSettings
	isSet bool
}

func (v NullableGithubStatusCheckSettings) Get() *GithubStatusCheckSettings {
	return v.value
}

func (v *NullableGithubStatusCheckSettings) Set(val *GithubStatusCheckSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubStatusCheckSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubStatusCheckSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubStatusCheckSettings(val *GithubStatusCheckSettings) *NullableGithubStatusCheckSettings {
	return &NullableGithubStatusCheckSettings{value: val, isSet: true}
}

func (v NullableGithubStatusCheckSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubStatusCheckSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


