/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateReleaseGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateReleaseGroupRequest{}

// CreateReleaseGroupRequest struct for CreateReleaseGroupRequest
type CreateReleaseGroupRequest struct {
	Title string `json:"title"`
	LicensingPolicyId *int32 `json:"licensingPolicyId,omitempty"`
	SecurityPolicyId *int32 `json:"securityPolicyId,omitempty"`
	QualityPolicyId *int32 `json:"qualityPolicyId,omitempty"`
	PublicOnPortal *bool `json:"publicOnPortal,omitempty"`
	IssueTrackerType *string `json:"issueTrackerType,omitempty"`
	Teams []int32 `json:"teams,omitempty"`
	Release CreateReleaseGroupRequestRelease `json:"release"`
}

type _CreateReleaseGroupRequest CreateReleaseGroupRequest

// NewCreateReleaseGroupRequest instantiates a new CreateReleaseGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateReleaseGroupRequest(title string, release CreateReleaseGroupRequestRelease) *CreateReleaseGroupRequest {
	this := CreateReleaseGroupRequest{}
	this.Title = title
	this.Release = release
	return &this
}

// NewCreateReleaseGroupRequestWithDefaults instantiates a new CreateReleaseGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateReleaseGroupRequestWithDefaults() *CreateReleaseGroupRequest {
	this := CreateReleaseGroupRequest{}
	return &this
}

// GetTitle returns the Title field value
func (o *CreateReleaseGroupRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateReleaseGroupRequest) SetTitle(v string) {
	o.Title = v
}

// GetLicensingPolicyId returns the LicensingPolicyId field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequest) GetLicensingPolicyId() int32 {
	if o == nil || IsNil(o.LicensingPolicyId) {
		var ret int32
		return ret
	}
	return *o.LicensingPolicyId
}

// GetLicensingPolicyIdOk returns a tuple with the LicensingPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetLicensingPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensingPolicyId) {
		return nil, false
	}
	return o.LicensingPolicyId, true
}

// HasLicensingPolicyId returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequest) HasLicensingPolicyId() bool {
	if o != nil && !IsNil(o.LicensingPolicyId) {
		return true
	}

	return false
}

// SetLicensingPolicyId gets a reference to the given int32 and assigns it to the LicensingPolicyId field.
func (o *CreateReleaseGroupRequest) SetLicensingPolicyId(v int32) {
	o.LicensingPolicyId = &v
}

// GetSecurityPolicyId returns the SecurityPolicyId field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequest) GetSecurityPolicyId() int32 {
	if o == nil || IsNil(o.SecurityPolicyId) {
		var ret int32
		return ret
	}
	return *o.SecurityPolicyId
}

// GetSecurityPolicyIdOk returns a tuple with the SecurityPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetSecurityPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SecurityPolicyId) {
		return nil, false
	}
	return o.SecurityPolicyId, true
}

// HasSecurityPolicyId returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequest) HasSecurityPolicyId() bool {
	if o != nil && !IsNil(o.SecurityPolicyId) {
		return true
	}

	return false
}

// SetSecurityPolicyId gets a reference to the given int32 and assigns it to the SecurityPolicyId field.
func (o *CreateReleaseGroupRequest) SetSecurityPolicyId(v int32) {
	o.SecurityPolicyId = &v
}

// GetQualityPolicyId returns the QualityPolicyId field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequest) GetQualityPolicyId() int32 {
	if o == nil || IsNil(o.QualityPolicyId) {
		var ret int32
		return ret
	}
	return *o.QualityPolicyId
}

// GetQualityPolicyIdOk returns a tuple with the QualityPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetQualityPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QualityPolicyId) {
		return nil, false
	}
	return o.QualityPolicyId, true
}

// HasQualityPolicyId returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequest) HasQualityPolicyId() bool {
	if o != nil && !IsNil(o.QualityPolicyId) {
		return true
	}

	return false
}

// SetQualityPolicyId gets a reference to the given int32 and assigns it to the QualityPolicyId field.
func (o *CreateReleaseGroupRequest) SetQualityPolicyId(v int32) {
	o.QualityPolicyId = &v
}

// GetPublicOnPortal returns the PublicOnPortal field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequest) GetPublicOnPortal() bool {
	if o == nil || IsNil(o.PublicOnPortal) {
		var ret bool
		return ret
	}
	return *o.PublicOnPortal
}

// GetPublicOnPortalOk returns a tuple with the PublicOnPortal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetPublicOnPortalOk() (*bool, bool) {
	if o == nil || IsNil(o.PublicOnPortal) {
		return nil, false
	}
	return o.PublicOnPortal, true
}

// HasPublicOnPortal returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequest) HasPublicOnPortal() bool {
	if o != nil && !IsNil(o.PublicOnPortal) {
		return true
	}

	return false
}

// SetPublicOnPortal gets a reference to the given bool and assigns it to the PublicOnPortal field.
func (o *CreateReleaseGroupRequest) SetPublicOnPortal(v bool) {
	o.PublicOnPortal = &v
}

// GetIssueTrackerType returns the IssueTrackerType field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequest) GetIssueTrackerType() string {
	if o == nil || IsNil(o.IssueTrackerType) {
		var ret string
		return ret
	}
	return *o.IssueTrackerType
}

// GetIssueTrackerTypeOk returns a tuple with the IssueTrackerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetIssueTrackerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssueTrackerType) {
		return nil, false
	}
	return o.IssueTrackerType, true
}

// HasIssueTrackerType returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequest) HasIssueTrackerType() bool {
	if o != nil && !IsNil(o.IssueTrackerType) {
		return true
	}

	return false
}

// SetIssueTrackerType gets a reference to the given string and assigns it to the IssueTrackerType field.
func (o *CreateReleaseGroupRequest) SetIssueTrackerType(v string) {
	o.IssueTrackerType = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *CreateReleaseGroupRequest) GetTeams() []int32 {
	if o == nil || IsNil(o.Teams) {
		var ret []int32
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetTeamsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Teams) {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *CreateReleaseGroupRequest) HasTeams() bool {
	if o != nil && !IsNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []int32 and assigns it to the Teams field.
func (o *CreateReleaseGroupRequest) SetTeams(v []int32) {
	o.Teams = v
}

// GetRelease returns the Release field value
func (o *CreateReleaseGroupRequest) GetRelease() CreateReleaseGroupRequestRelease {
	if o == nil {
		var ret CreateReleaseGroupRequestRelease
		return ret
	}

	return o.Release
}

// GetReleaseOk returns a tuple with the Release field value
// and a boolean to check if the value has been set.
func (o *CreateReleaseGroupRequest) GetReleaseOk() (*CreateReleaseGroupRequestRelease, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Release, true
}

// SetRelease sets field value
func (o *CreateReleaseGroupRequest) SetRelease(v CreateReleaseGroupRequestRelease) {
	o.Release = v
}

func (o CreateReleaseGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateReleaseGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.LicensingPolicyId) {
		toSerialize["licensingPolicyId"] = o.LicensingPolicyId
	}
	if !IsNil(o.SecurityPolicyId) {
		toSerialize["securityPolicyId"] = o.SecurityPolicyId
	}
	if !IsNil(o.QualityPolicyId) {
		toSerialize["qualityPolicyId"] = o.QualityPolicyId
	}
	if !IsNil(o.PublicOnPortal) {
		toSerialize["publicOnPortal"] = o.PublicOnPortal
	}
	if !IsNil(o.IssueTrackerType) {
		toSerialize["issueTrackerType"] = o.IssueTrackerType
	}
	if !IsNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	toSerialize["release"] = o.Release
	return toSerialize, nil
}

func (o *CreateReleaseGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"release",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateReleaseGroupRequest := _CreateReleaseGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateReleaseGroupRequest)

	if err != nil {
		return err
	}

	*o = CreateReleaseGroupRequest(varCreateReleaseGroupRequest)

	return err
}

type NullableCreateReleaseGroupRequest struct {
	value *CreateReleaseGroupRequest
	isSet bool
}

func (v NullableCreateReleaseGroupRequest) Get() *CreateReleaseGroupRequest {
	return v.value
}

func (v *NullableCreateReleaseGroupRequest) Set(val *CreateReleaseGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateReleaseGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateReleaseGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateReleaseGroupRequest(val *CreateReleaseGroupRequest) *NullableCreateReleaseGroupRequest {
	return &NullableCreateReleaseGroupRequest{value: val, isSet: true}
}

func (v NullableCreateReleaseGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateReleaseGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


