/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetProjectRevisions200ResponseBranchValueInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectRevisions200ResponseBranchValueInner{}

// GetProjectRevisions200ResponseBranchValueInner struct for GetProjectRevisions200ResponseBranchValueInner
type GetProjectRevisions200ResponseBranchValueInner struct {
	Loc *GetProjectRevisions200ResponseBranchValueInnerLoc `json:"loc,omitempty"`
	// Text ID that uniquely identifies a project
	Locator *string `json:"locator,omitempty"`
	// Has the Revision been fully analyzed by FOSSA
	Resolved *bool `json:"resolved,omitempty"`
	// The Project locator that the Revision belongs to
	ProjectId *string `json:"projectId,omitempty"`
	// FOSSA internal representation of the source language for the given repository/project
	SourceType NullableString `json:"source_type,omitempty"`
	// Error message during analysis (if any)
	Error NullableString `json:"error,omitempty"`
	// Message of the revision or commit
	Message NullableString `json:"message,omitempty"`
	// timestamp of when the Revision was published
	RevisionTimestamp NullableString `json:"revision_timestamp,omitempty"`
	// The Revision Scan ID of the latest policy scan
	LatestRevisionScanId NullableFloat32 `json:"latestRevisionScanId,omitempty"`
	// The Hubble Analysis ID of the latest analysis
	LatestHubbleAnalysisId NullableFloat32 `json:"latestHubbleAnalysisId,omitempty"`
	// when the Revision was added to the FOSSA Database
	CreatedAt *string `json:"createdAt,omitempty"`
	// when the Revision was last updated in the FOSSA Database
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// The author of the Revision
	Author NullableString `json:"author,omitempty"`
	// The link associated with the Revision
	Link NullableString `json:"link,omitempty"`
	// The url associated with the Revision
	Url NullableString `json:"url,omitempty"`
}

// NewGetProjectRevisions200ResponseBranchValueInner instantiates a new GetProjectRevisions200ResponseBranchValueInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectRevisions200ResponseBranchValueInner() *GetProjectRevisions200ResponseBranchValueInner {
	this := GetProjectRevisions200ResponseBranchValueInner{}
	return &this
}

// NewGetProjectRevisions200ResponseBranchValueInnerWithDefaults instantiates a new GetProjectRevisions200ResponseBranchValueInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectRevisions200ResponseBranchValueInnerWithDefaults() *GetProjectRevisions200ResponseBranchValueInner {
	this := GetProjectRevisions200ResponseBranchValueInner{}
	return &this
}

// GetLoc returns the Loc field value if set, zero value otherwise.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLoc() GetProjectRevisions200ResponseBranchValueInnerLoc {
	if o == nil || IsNil(o.Loc) {
		var ret GetProjectRevisions200ResponseBranchValueInnerLoc
		return ret
	}
	return *o.Loc
}

// GetLocOk returns a tuple with the Loc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLocOk() (*GetProjectRevisions200ResponseBranchValueInnerLoc, bool) {
	if o == nil || IsNil(o.Loc) {
		return nil, false
	}
	return o.Loc, true
}

// HasLoc returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasLoc() bool {
	if o != nil && !IsNil(o.Loc) {
		return true
	}

	return false
}

// SetLoc gets a reference to the given GetProjectRevisions200ResponseBranchValueInnerLoc and assigns it to the Loc field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLoc(v GetProjectRevisions200ResponseBranchValueInnerLoc) {
	o.Loc = &v
}

// GetLocator returns the Locator field value if set, zero value otherwise.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLocator() string {
	if o == nil || IsNil(o.Locator) {
		var ret string
		return ret
	}
	return *o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.Locator) {
		return nil, false
	}
	return o.Locator, true
}

// HasLocator returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasLocator() bool {
	if o != nil && !IsNil(o.Locator) {
		return true
	}

	return false
}

// SetLocator gets a reference to the given string and assigns it to the Locator field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLocator(v string) {
	o.Locator = &v
}

// GetResolved returns the Resolved field value if set, zero value otherwise.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetResolved() bool {
	if o == nil || IsNil(o.Resolved) {
		var ret bool
		return ret
	}
	return *o.Resolved
}

// GetResolvedOk returns a tuple with the Resolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetResolvedOk() (*bool, bool) {
	if o == nil || IsNil(o.Resolved) {
		return nil, false
	}
	return o.Resolved, true
}

// HasResolved returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasResolved() bool {
	if o != nil && !IsNil(o.Resolved) {
		return true
	}

	return false
}

// SetResolved gets a reference to the given bool and assigns it to the Resolved field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetResolved(v bool) {
	o.Resolved = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetSourceType() string {
	if o == nil || IsNil(o.SourceType.Get()) {
		var ret string
		return ret
	}
	return *o.SourceType.Get()
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetSourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceType.Get(), o.SourceType.IsSet()
}

// HasSourceType returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasSourceType() bool {
	if o != nil && o.SourceType.IsSet() {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given NullableString and assigns it to the SourceType field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetSourceType(v string) {
	o.SourceType.Set(&v)
}
// SetSourceTypeNil sets the value for SourceType to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetSourceTypeNil() {
	o.SourceType.Set(nil)
}

// UnsetSourceType ensures that no value is present for SourceType, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetSourceType() {
	o.SourceType.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetError() string {
	if o == nil || IsNil(o.Error.Get()) {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetError(v string) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetError() {
	o.Error.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetMessage() {
	o.Message.Unset()
}

// GetRevisionTimestamp returns the RevisionTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetRevisionTimestamp() string {
	if o == nil || IsNil(o.RevisionTimestamp.Get()) {
		var ret string
		return ret
	}
	return *o.RevisionTimestamp.Get()
}

// GetRevisionTimestampOk returns a tuple with the RevisionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetRevisionTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevisionTimestamp.Get(), o.RevisionTimestamp.IsSet()
}

// HasRevisionTimestamp returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasRevisionTimestamp() bool {
	if o != nil && o.RevisionTimestamp.IsSet() {
		return true
	}

	return false
}

// SetRevisionTimestamp gets a reference to the given NullableString and assigns it to the RevisionTimestamp field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetRevisionTimestamp(v string) {
	o.RevisionTimestamp.Set(&v)
}
// SetRevisionTimestampNil sets the value for RevisionTimestamp to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetRevisionTimestampNil() {
	o.RevisionTimestamp.Set(nil)
}

// UnsetRevisionTimestamp ensures that no value is present for RevisionTimestamp, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetRevisionTimestamp() {
	o.RevisionTimestamp.Unset()
}

// GetLatestRevisionScanId returns the LatestRevisionScanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLatestRevisionScanId() float32 {
	if o == nil || IsNil(o.LatestRevisionScanId.Get()) {
		var ret float32
		return ret
	}
	return *o.LatestRevisionScanId.Get()
}

// GetLatestRevisionScanIdOk returns a tuple with the LatestRevisionScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLatestRevisionScanIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestRevisionScanId.Get(), o.LatestRevisionScanId.IsSet()
}

// HasLatestRevisionScanId returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasLatestRevisionScanId() bool {
	if o != nil && o.LatestRevisionScanId.IsSet() {
		return true
	}

	return false
}

// SetLatestRevisionScanId gets a reference to the given NullableFloat32 and assigns it to the LatestRevisionScanId field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLatestRevisionScanId(v float32) {
	o.LatestRevisionScanId.Set(&v)
}
// SetLatestRevisionScanIdNil sets the value for LatestRevisionScanId to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLatestRevisionScanIdNil() {
	o.LatestRevisionScanId.Set(nil)
}

// UnsetLatestRevisionScanId ensures that no value is present for LatestRevisionScanId, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetLatestRevisionScanId() {
	o.LatestRevisionScanId.Unset()
}

// GetLatestHubbleAnalysisId returns the LatestHubbleAnalysisId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLatestHubbleAnalysisId() float32 {
	if o == nil || IsNil(o.LatestHubbleAnalysisId.Get()) {
		var ret float32
		return ret
	}
	return *o.LatestHubbleAnalysisId.Get()
}

// GetLatestHubbleAnalysisIdOk returns a tuple with the LatestHubbleAnalysisId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLatestHubbleAnalysisIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestHubbleAnalysisId.Get(), o.LatestHubbleAnalysisId.IsSet()
}

// HasLatestHubbleAnalysisId returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasLatestHubbleAnalysisId() bool {
	if o != nil && o.LatestHubbleAnalysisId.IsSet() {
		return true
	}

	return false
}

// SetLatestHubbleAnalysisId gets a reference to the given NullableFloat32 and assigns it to the LatestHubbleAnalysisId field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLatestHubbleAnalysisId(v float32) {
	o.LatestHubbleAnalysisId.Set(&v)
}
// SetLatestHubbleAnalysisIdNil sets the value for LatestHubbleAnalysisId to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLatestHubbleAnalysisIdNil() {
	o.LatestHubbleAnalysisId.Set(nil)
}

// UnsetLatestHubbleAnalysisId ensures that no value is present for LatestHubbleAnalysisId, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetLatestHubbleAnalysisId() {
	o.LatestHubbleAnalysisId.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetAuthor() string {
	if o == nil || IsNil(o.Author.Get()) {
		var ret string
		return ret
	}
	return *o.Author.Get()
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetAuthorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Author.Get(), o.Author.IsSet()
}

// HasAuthor returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasAuthor() bool {
	if o != nil && o.Author.IsSet() {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given NullableString and assigns it to the Author field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetAuthor(v string) {
	o.Author.Set(&v)
}
// SetAuthorNil sets the value for Author to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetAuthorNil() {
	o.Author.Set(nil)
}

// UnsetAuthor ensures that no value is present for Author, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetAuthor() {
	o.Author.Unset()
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLink() string {
	if o == nil || IsNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLink(v string) {
	o.Link.Set(&v)
}
// SetLinkNil sets the value for Link to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetLink() {
	o.Link.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProjectRevisions200ResponseBranchValueInner) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProjectRevisions200ResponseBranchValueInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *GetProjectRevisions200ResponseBranchValueInner) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *GetProjectRevisions200ResponseBranchValueInner) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *GetProjectRevisions200ResponseBranchValueInner) UnsetUrl() {
	o.Url.Unset()
}

func (o GetProjectRevisions200ResponseBranchValueInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjectRevisions200ResponseBranchValueInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Loc) {
		toSerialize["loc"] = o.Loc
	}
	if !IsNil(o.Locator) {
		toSerialize["locator"] = o.Locator
	}
	if !IsNil(o.Resolved) {
		toSerialize["resolved"] = o.Resolved
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.SourceType.IsSet() {
		toSerialize["source_type"] = o.SourceType.Get()
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.RevisionTimestamp.IsSet() {
		toSerialize["revision_timestamp"] = o.RevisionTimestamp.Get()
	}
	if o.LatestRevisionScanId.IsSet() {
		toSerialize["latestRevisionScanId"] = o.LatestRevisionScanId.Get()
	}
	if o.LatestHubbleAnalysisId.IsSet() {
		toSerialize["latestHubbleAnalysisId"] = o.LatestHubbleAnalysisId.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Author.IsSet() {
		toSerialize["author"] = o.Author.Get()
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return toSerialize, nil
}

type NullableGetProjectRevisions200ResponseBranchValueInner struct {
	value *GetProjectRevisions200ResponseBranchValueInner
	isSet bool
}

func (v NullableGetProjectRevisions200ResponseBranchValueInner) Get() *GetProjectRevisions200ResponseBranchValueInner {
	return v.value
}

func (v *NullableGetProjectRevisions200ResponseBranchValueInner) Set(val *GetProjectRevisions200ResponseBranchValueInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectRevisions200ResponseBranchValueInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectRevisions200ResponseBranchValueInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectRevisions200ResponseBranchValueInner(val *GetProjectRevisions200ResponseBranchValueInner) *NullableGetProjectRevisions200ResponseBranchValueInner {
	return &NullableGetProjectRevisions200ResponseBranchValueInner{value: val, isSet: true}
}

func (v NullableGetProjectRevisions200ResponseBranchValueInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectRevisions200ResponseBranchValueInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


