/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetAuditLogs200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAuditLogs200ResponseInner{}

// GetAuditLogs200ResponseInner struct for GetAuditLogs200ResponseInner
type GetAuditLogs200ResponseInner struct {
	// The unique identifier for the audit log.
	Id *int32 `json:"id,omitempty"`
	// The unique identifier for the user who performed the action.
	ActingUserId NullableInt32 `json:"actingUserId,omitempty"`
	// The email address of the user who performed the action.
	ActingUserEmail NullableString `json:"actingUserEmail,omitempty"`
	// The name of the user who performed the action.
	ActingUserName NullableString `json:"actingUserName,omitempty"`
	// The role of the user who performed the action.
	ActingUserRole NullableString `json:"actingUserRole,omitempty"`
	// The unique identifier for the organization.
	OrganizationId NullableInt32 `json:"organizationId,omitempty"`
	// The unique identifier for the user.
	UserId NullableInt32 `json:"userId,omitempty"`
	// The unique identifier for the team.
	TeamId NullableInt32 `json:"teamId,omitempty"`
	// The unique identifier for the build.
	BuildId NullableInt32 `json:"buildId,omitempty"`
	// The unique identifier for the dependency.
	DependencyId NullableString `json:"dependencyId,omitempty"`
	// The unique identifier for the license.
	LicenseId NullableString `json:"licenseId,omitempty"`
	// The unique identifier for the policy.
	PolicyId NullableInt32 `json:"policyId,omitempty"`
	// The unique identifier for the project.
	ProjectId NullableString `json:"projectId,omitempty"`
	// The unique identifier for the rule.
	RuleId NullableInt32 `json:"ruleId,omitempty"`
	// The locator for the dependency.
	Locator NullableString `json:"locator,omitempty"`
	// The unique identifier for the revision license.
	RevisionLicenseId NullableInt32 `json:"revisionLicenseId,omitempty"`
	// The unique identifier for the issue.
	IssueId NullableInt32 `json:"issueId,omitempty"`
	// The action that was performed.
	Action *string `json:"action,omitempty"`
	// The topic of the action.
	Topic *string `json:"topic,omitempty"`
	// The name of the action.
	Name NullableString `json:"name,omitempty"`
	// The old value before the change.
	OldValue NullableString `json:"old_value,omitempty"`
	// The new value after the change.
	NewValue NullableString `json:"new_value,omitempty"`
	// The description of the action.
	Description NullableString `json:"description,omitempty"`
	// The date and time the action was performed.
	CreatedAt *string `json:"createdAt,omitempty"`
}

// NewGetAuditLogs200ResponseInner instantiates a new GetAuditLogs200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAuditLogs200ResponseInner() *GetAuditLogs200ResponseInner {
	this := GetAuditLogs200ResponseInner{}
	return &this
}

// NewGetAuditLogs200ResponseInnerWithDefaults instantiates a new GetAuditLogs200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAuditLogs200ResponseInnerWithDefaults() *GetAuditLogs200ResponseInner {
	this := GetAuditLogs200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAuditLogs200ResponseInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogs200ResponseInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetAuditLogs200ResponseInner) SetId(v int32) {
	o.Id = &v
}

// GetActingUserId returns the ActingUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetActingUserId() int32 {
	if o == nil || IsNil(o.ActingUserId.Get()) {
		var ret int32
		return ret
	}
	return *o.ActingUserId.Get()
}

// GetActingUserIdOk returns a tuple with the ActingUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetActingUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActingUserId.Get(), o.ActingUserId.IsSet()
}

// HasActingUserId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasActingUserId() bool {
	if o != nil && o.ActingUserId.IsSet() {
		return true
	}

	return false
}

// SetActingUserId gets a reference to the given NullableInt32 and assigns it to the ActingUserId field.
func (o *GetAuditLogs200ResponseInner) SetActingUserId(v int32) {
	o.ActingUserId.Set(&v)
}
// SetActingUserIdNil sets the value for ActingUserId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetActingUserIdNil() {
	o.ActingUserId.Set(nil)
}

// UnsetActingUserId ensures that no value is present for ActingUserId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetActingUserId() {
	o.ActingUserId.Unset()
}

// GetActingUserEmail returns the ActingUserEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetActingUserEmail() string {
	if o == nil || IsNil(o.ActingUserEmail.Get()) {
		var ret string
		return ret
	}
	return *o.ActingUserEmail.Get()
}

// GetActingUserEmailOk returns a tuple with the ActingUserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetActingUserEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActingUserEmail.Get(), o.ActingUserEmail.IsSet()
}

// HasActingUserEmail returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasActingUserEmail() bool {
	if o != nil && o.ActingUserEmail.IsSet() {
		return true
	}

	return false
}

// SetActingUserEmail gets a reference to the given NullableString and assigns it to the ActingUserEmail field.
func (o *GetAuditLogs200ResponseInner) SetActingUserEmail(v string) {
	o.ActingUserEmail.Set(&v)
}
// SetActingUserEmailNil sets the value for ActingUserEmail to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetActingUserEmailNil() {
	o.ActingUserEmail.Set(nil)
}

// UnsetActingUserEmail ensures that no value is present for ActingUserEmail, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetActingUserEmail() {
	o.ActingUserEmail.Unset()
}

// GetActingUserName returns the ActingUserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetActingUserName() string {
	if o == nil || IsNil(o.ActingUserName.Get()) {
		var ret string
		return ret
	}
	return *o.ActingUserName.Get()
}

// GetActingUserNameOk returns a tuple with the ActingUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetActingUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActingUserName.Get(), o.ActingUserName.IsSet()
}

// HasActingUserName returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasActingUserName() bool {
	if o != nil && o.ActingUserName.IsSet() {
		return true
	}

	return false
}

// SetActingUserName gets a reference to the given NullableString and assigns it to the ActingUserName field.
func (o *GetAuditLogs200ResponseInner) SetActingUserName(v string) {
	o.ActingUserName.Set(&v)
}
// SetActingUserNameNil sets the value for ActingUserName to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetActingUserNameNil() {
	o.ActingUserName.Set(nil)
}

// UnsetActingUserName ensures that no value is present for ActingUserName, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetActingUserName() {
	o.ActingUserName.Unset()
}

// GetActingUserRole returns the ActingUserRole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetActingUserRole() string {
	if o == nil || IsNil(o.ActingUserRole.Get()) {
		var ret string
		return ret
	}
	return *o.ActingUserRole.Get()
}

// GetActingUserRoleOk returns a tuple with the ActingUserRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetActingUserRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActingUserRole.Get(), o.ActingUserRole.IsSet()
}

// HasActingUserRole returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasActingUserRole() bool {
	if o != nil && o.ActingUserRole.IsSet() {
		return true
	}

	return false
}

// SetActingUserRole gets a reference to the given NullableString and assigns it to the ActingUserRole field.
func (o *GetAuditLogs200ResponseInner) SetActingUserRole(v string) {
	o.ActingUserRole.Set(&v)
}
// SetActingUserRoleNil sets the value for ActingUserRole to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetActingUserRoleNil() {
	o.ActingUserRole.Set(nil)
}

// UnsetActingUserRole ensures that no value is present for ActingUserRole, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetActingUserRole() {
	o.ActingUserRole.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *GetAuditLogs200ResponseInner) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetUserId() int32 {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret int32
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableInt32 and assigns it to the UserId field.
func (o *GetAuditLogs200ResponseInner) SetUserId(v int32) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetUserId() {
	o.UserId.Unset()
}

// GetTeamId returns the TeamId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetTeamId() int32 {
	if o == nil || IsNil(o.TeamId.Get()) {
		var ret int32
		return ret
	}
	return *o.TeamId.Get()
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetTeamIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TeamId.Get(), o.TeamId.IsSet()
}

// HasTeamId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasTeamId() bool {
	if o != nil && o.TeamId.IsSet() {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given NullableInt32 and assigns it to the TeamId field.
func (o *GetAuditLogs200ResponseInner) SetTeamId(v int32) {
	o.TeamId.Set(&v)
}
// SetTeamIdNil sets the value for TeamId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetTeamIdNil() {
	o.TeamId.Set(nil)
}

// UnsetTeamId ensures that no value is present for TeamId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetTeamId() {
	o.TeamId.Unset()
}

// GetBuildId returns the BuildId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetBuildId() int32 {
	if o == nil || IsNil(o.BuildId.Get()) {
		var ret int32
		return ret
	}
	return *o.BuildId.Get()
}

// GetBuildIdOk returns a tuple with the BuildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetBuildIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BuildId.Get(), o.BuildId.IsSet()
}

// HasBuildId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasBuildId() bool {
	if o != nil && o.BuildId.IsSet() {
		return true
	}

	return false
}

// SetBuildId gets a reference to the given NullableInt32 and assigns it to the BuildId field.
func (o *GetAuditLogs200ResponseInner) SetBuildId(v int32) {
	o.BuildId.Set(&v)
}
// SetBuildIdNil sets the value for BuildId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetBuildIdNil() {
	o.BuildId.Set(nil)
}

// UnsetBuildId ensures that no value is present for BuildId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetBuildId() {
	o.BuildId.Unset()
}

// GetDependencyId returns the DependencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetDependencyId() string {
	if o == nil || IsNil(o.DependencyId.Get()) {
		var ret string
		return ret
	}
	return *o.DependencyId.Get()
}

// GetDependencyIdOk returns a tuple with the DependencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetDependencyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DependencyId.Get(), o.DependencyId.IsSet()
}

// HasDependencyId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasDependencyId() bool {
	if o != nil && o.DependencyId.IsSet() {
		return true
	}

	return false
}

// SetDependencyId gets a reference to the given NullableString and assigns it to the DependencyId field.
func (o *GetAuditLogs200ResponseInner) SetDependencyId(v string) {
	o.DependencyId.Set(&v)
}
// SetDependencyIdNil sets the value for DependencyId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetDependencyIdNil() {
	o.DependencyId.Set(nil)
}

// UnsetDependencyId ensures that no value is present for DependencyId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetDependencyId() {
	o.DependencyId.Unset()
}

// GetLicenseId returns the LicenseId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetLicenseId() string {
	if o == nil || IsNil(o.LicenseId.Get()) {
		var ret string
		return ret
	}
	return *o.LicenseId.Get()
}

// GetLicenseIdOk returns a tuple with the LicenseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetLicenseIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseId.Get(), o.LicenseId.IsSet()
}

// HasLicenseId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasLicenseId() bool {
	if o != nil && o.LicenseId.IsSet() {
		return true
	}

	return false
}

// SetLicenseId gets a reference to the given NullableString and assigns it to the LicenseId field.
func (o *GetAuditLogs200ResponseInner) SetLicenseId(v string) {
	o.LicenseId.Set(&v)
}
// SetLicenseIdNil sets the value for LicenseId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetLicenseIdNil() {
	o.LicenseId.Set(nil)
}

// UnsetLicenseId ensures that no value is present for LicenseId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetLicenseId() {
	o.LicenseId.Unset()
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetPolicyId() int32 {
	if o == nil || IsNil(o.PolicyId.Get()) {
		var ret int32
		return ret
	}
	return *o.PolicyId.Get()
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetPolicyIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyId.Get(), o.PolicyId.IsSet()
}

// HasPolicyId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasPolicyId() bool {
	if o != nil && o.PolicyId.IsSet() {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given NullableInt32 and assigns it to the PolicyId field.
func (o *GetAuditLogs200ResponseInner) SetPolicyId(v int32) {
	o.PolicyId.Set(&v)
}
// SetPolicyIdNil sets the value for PolicyId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetPolicyIdNil() {
	o.PolicyId.Set(nil)
}

// UnsetPolicyId ensures that no value is present for PolicyId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetPolicyId() {
	o.PolicyId.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *GetAuditLogs200ResponseInner) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}
// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetRuleId returns the RuleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetRuleId() int32 {
	if o == nil || IsNil(o.RuleId.Get()) {
		var ret int32
		return ret
	}
	return *o.RuleId.Get()
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetRuleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RuleId.Get(), o.RuleId.IsSet()
}

// HasRuleId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasRuleId() bool {
	if o != nil && o.RuleId.IsSet() {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given NullableInt32 and assigns it to the RuleId field.
func (o *GetAuditLogs200ResponseInner) SetRuleId(v int32) {
	o.RuleId.Set(&v)
}
// SetRuleIdNil sets the value for RuleId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetRuleIdNil() {
	o.RuleId.Set(nil)
}

// UnsetRuleId ensures that no value is present for RuleId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetRuleId() {
	o.RuleId.Unset()
}

// GetLocator returns the Locator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetLocator() string {
	if o == nil || IsNil(o.Locator.Get()) {
		var ret string
		return ret
	}
	return *o.Locator.Get()
}

// GetLocatorOk returns a tuple with the Locator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locator.Get(), o.Locator.IsSet()
}

// HasLocator returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasLocator() bool {
	if o != nil && o.Locator.IsSet() {
		return true
	}

	return false
}

// SetLocator gets a reference to the given NullableString and assigns it to the Locator field.
func (o *GetAuditLogs200ResponseInner) SetLocator(v string) {
	o.Locator.Set(&v)
}
// SetLocatorNil sets the value for Locator to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetLocatorNil() {
	o.Locator.Set(nil)
}

// UnsetLocator ensures that no value is present for Locator, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetLocator() {
	o.Locator.Unset()
}

// GetRevisionLicenseId returns the RevisionLicenseId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetRevisionLicenseId() int32 {
	if o == nil || IsNil(o.RevisionLicenseId.Get()) {
		var ret int32
		return ret
	}
	return *o.RevisionLicenseId.Get()
}

// GetRevisionLicenseIdOk returns a tuple with the RevisionLicenseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetRevisionLicenseIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevisionLicenseId.Get(), o.RevisionLicenseId.IsSet()
}

// HasRevisionLicenseId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasRevisionLicenseId() bool {
	if o != nil && o.RevisionLicenseId.IsSet() {
		return true
	}

	return false
}

// SetRevisionLicenseId gets a reference to the given NullableInt32 and assigns it to the RevisionLicenseId field.
func (o *GetAuditLogs200ResponseInner) SetRevisionLicenseId(v int32) {
	o.RevisionLicenseId.Set(&v)
}
// SetRevisionLicenseIdNil sets the value for RevisionLicenseId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetRevisionLicenseIdNil() {
	o.RevisionLicenseId.Set(nil)
}

// UnsetRevisionLicenseId ensures that no value is present for RevisionLicenseId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetRevisionLicenseId() {
	o.RevisionLicenseId.Unset()
}

// GetIssueId returns the IssueId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetIssueId() int32 {
	if o == nil || IsNil(o.IssueId.Get()) {
		var ret int32
		return ret
	}
	return *o.IssueId.Get()
}

// GetIssueIdOk returns a tuple with the IssueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetIssueIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssueId.Get(), o.IssueId.IsSet()
}

// HasIssueId returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasIssueId() bool {
	if o != nil && o.IssueId.IsSet() {
		return true
	}

	return false
}

// SetIssueId gets a reference to the given NullableInt32 and assigns it to the IssueId field.
func (o *GetAuditLogs200ResponseInner) SetIssueId(v int32) {
	o.IssueId.Set(&v)
}
// SetIssueIdNil sets the value for IssueId to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetIssueIdNil() {
	o.IssueId.Set(nil)
}

// UnsetIssueId ensures that no value is present for IssueId, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetIssueId() {
	o.IssueId.Unset()
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *GetAuditLogs200ResponseInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogs200ResponseInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *GetAuditLogs200ResponseInner) SetAction(v string) {
	o.Action = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *GetAuditLogs200ResponseInner) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogs200ResponseInner) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *GetAuditLogs200ResponseInner) SetTopic(v string) {
	o.Topic = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *GetAuditLogs200ResponseInner) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetName() {
	o.Name.Unset()
}

// GetOldValue returns the OldValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetOldValue() string {
	if o == nil || IsNil(o.OldValue.Get()) {
		var ret string
		return ret
	}
	return *o.OldValue.Get()
}

// GetOldValueOk returns a tuple with the OldValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetOldValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OldValue.Get(), o.OldValue.IsSet()
}

// HasOldValue returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasOldValue() bool {
	if o != nil && o.OldValue.IsSet() {
		return true
	}

	return false
}

// SetOldValue gets a reference to the given NullableString and assigns it to the OldValue field.
func (o *GetAuditLogs200ResponseInner) SetOldValue(v string) {
	o.OldValue.Set(&v)
}
// SetOldValueNil sets the value for OldValue to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetOldValueNil() {
	o.OldValue.Set(nil)
}

// UnsetOldValue ensures that no value is present for OldValue, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetOldValue() {
	o.OldValue.Unset()
}

// GetNewValue returns the NewValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetNewValue() string {
	if o == nil || IsNil(o.NewValue.Get()) {
		var ret string
		return ret
	}
	return *o.NewValue.Get()
}

// GetNewValueOk returns a tuple with the NewValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetNewValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewValue.Get(), o.NewValue.IsSet()
}

// HasNewValue returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasNewValue() bool {
	if o != nil && o.NewValue.IsSet() {
		return true
	}

	return false
}

// SetNewValue gets a reference to the given NullableString and assigns it to the NewValue field.
func (o *GetAuditLogs200ResponseInner) SetNewValue(v string) {
	o.NewValue.Set(&v)
}
// SetNewValueNil sets the value for NewValue to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetNewValueNil() {
	o.NewValue.Set(nil)
}

// UnsetNewValue ensures that no value is present for NewValue, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetNewValue() {
	o.NewValue.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAuditLogs200ResponseInner) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAuditLogs200ResponseInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *GetAuditLogs200ResponseInner) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *GetAuditLogs200ResponseInner) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *GetAuditLogs200ResponseInner) UnsetDescription() {
	o.Description.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetAuditLogs200ResponseInner) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuditLogs200ResponseInner) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetAuditLogs200ResponseInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GetAuditLogs200ResponseInner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

func (o GetAuditLogs200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAuditLogs200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ActingUserId.IsSet() {
		toSerialize["actingUserId"] = o.ActingUserId.Get()
	}
	if o.ActingUserEmail.IsSet() {
		toSerialize["actingUserEmail"] = o.ActingUserEmail.Get()
	}
	if o.ActingUserName.IsSet() {
		toSerialize["actingUserName"] = o.ActingUserName.Get()
	}
	if o.ActingUserRole.IsSet() {
		toSerialize["actingUserRole"] = o.ActingUserRole.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.TeamId.IsSet() {
		toSerialize["teamId"] = o.TeamId.Get()
	}
	if o.BuildId.IsSet() {
		toSerialize["buildId"] = o.BuildId.Get()
	}
	if o.DependencyId.IsSet() {
		toSerialize["dependencyId"] = o.DependencyId.Get()
	}
	if o.LicenseId.IsSet() {
		toSerialize["licenseId"] = o.LicenseId.Get()
	}
	if o.PolicyId.IsSet() {
		toSerialize["policyId"] = o.PolicyId.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["projectId"] = o.ProjectId.Get()
	}
	if o.RuleId.IsSet() {
		toSerialize["ruleId"] = o.RuleId.Get()
	}
	if o.Locator.IsSet() {
		toSerialize["locator"] = o.Locator.Get()
	}
	if o.RevisionLicenseId.IsSet() {
		toSerialize["revisionLicenseId"] = o.RevisionLicenseId.Get()
	}
	if o.IssueId.IsSet() {
		toSerialize["issueId"] = o.IssueId.Get()
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.OldValue.IsSet() {
		toSerialize["old_value"] = o.OldValue.Get()
	}
	if o.NewValue.IsSet() {
		toSerialize["new_value"] = o.NewValue.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableGetAuditLogs200ResponseInner struct {
	value *GetAuditLogs200ResponseInner
	isSet bool
}

func (v NullableGetAuditLogs200ResponseInner) Get() *GetAuditLogs200ResponseInner {
	return v.value
}

func (v *NullableGetAuditLogs200ResponseInner) Set(val *GetAuditLogs200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAuditLogs200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAuditLogs200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAuditLogs200ResponseInner(val *GetAuditLogs200ResponseInner) *NullableGetAuditLogs200ResponseInner {
	return &NullableGetAuditLogs200ResponseInner{value: val, isSet: true}
}

func (v NullableGetAuditLogs200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAuditLogs200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


