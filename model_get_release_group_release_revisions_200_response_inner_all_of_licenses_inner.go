/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
)

// checks if the GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner{}

// GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner struct for GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner
type GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner struct {
	Title *string `json:"title,omitempty"`
	Id *int32 `json:"id,omitempty"`
	LicenseId *string `json:"licenseId,omitempty"`
	RevisionId *string `json:"revisionId,omitempty"`
	LicenseGroupId *int32 `json:"licenseGroupId,omitempty"`
	ProjectCorrectionId *string `json:"projectCorrectionId,omitempty"`
	Ignored *bool `json:"ignored,omitempty"`
	Url *string `json:"url,omitempty"`
	Text *string `json:"text,omitempty"`
	Copyright *string `json:"copyright,omitempty"`
	FileCount *int32 `json:"file_count,omitempty"`
	Manual *bool `json:"manual,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner instantiates a new GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner() *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner {
	this := GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner{}
	return &this
}

// NewGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInnerWithDefaults instantiates a new GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInnerWithDefaults() *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner {
	this := GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetTitle(v string) {
	o.Title = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetId(v int32) {
	o.Id = &v
}

// GetLicenseId returns the LicenseId field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetLicenseId() string {
	if o == nil || IsNil(o.LicenseId) {
		var ret string
		return ret
	}
	return *o.LicenseId
}

// GetLicenseIdOk returns a tuple with the LicenseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetLicenseIdOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseId) {
		return nil, false
	}
	return o.LicenseId, true
}

// HasLicenseId returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasLicenseId() bool {
	if o != nil && !IsNil(o.LicenseId) {
		return true
	}

	return false
}

// SetLicenseId gets a reference to the given string and assigns it to the LicenseId field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetLicenseId(v string) {
	o.LicenseId = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetRevisionId() string {
	if o == nil || IsNil(o.RevisionId) {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetRevisionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionId) {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasRevisionId() bool {
	if o != nil && !IsNil(o.RevisionId) {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetLicenseGroupId returns the LicenseGroupId field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetLicenseGroupId() int32 {
	if o == nil || IsNil(o.LicenseGroupId) {
		var ret int32
		return ret
	}
	return *o.LicenseGroupId
}

// GetLicenseGroupIdOk returns a tuple with the LicenseGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetLicenseGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseGroupId) {
		return nil, false
	}
	return o.LicenseGroupId, true
}

// HasLicenseGroupId returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasLicenseGroupId() bool {
	if o != nil && !IsNil(o.LicenseGroupId) {
		return true
	}

	return false
}

// SetLicenseGroupId gets a reference to the given int32 and assigns it to the LicenseGroupId field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetLicenseGroupId(v int32) {
	o.LicenseGroupId = &v
}

// GetProjectCorrectionId returns the ProjectCorrectionId field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetProjectCorrectionId() string {
	if o == nil || IsNil(o.ProjectCorrectionId) {
		var ret string
		return ret
	}
	return *o.ProjectCorrectionId
}

// GetProjectCorrectionIdOk returns a tuple with the ProjectCorrectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetProjectCorrectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectCorrectionId) {
		return nil, false
	}
	return o.ProjectCorrectionId, true
}

// HasProjectCorrectionId returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasProjectCorrectionId() bool {
	if o != nil && !IsNil(o.ProjectCorrectionId) {
		return true
	}

	return false
}

// SetProjectCorrectionId gets a reference to the given string and assigns it to the ProjectCorrectionId field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetProjectCorrectionId(v string) {
	o.ProjectCorrectionId = &v
}

// GetIgnored returns the Ignored field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetIgnored() bool {
	if o == nil || IsNil(o.Ignored) {
		var ret bool
		return ret
	}
	return *o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetIgnoredOk() (*bool, bool) {
	if o == nil || IsNil(o.Ignored) {
		return nil, false
	}
	return o.Ignored, true
}

// HasIgnored returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasIgnored() bool {
	if o != nil && !IsNil(o.Ignored) {
		return true
	}

	return false
}

// SetIgnored gets a reference to the given bool and assigns it to the Ignored field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetIgnored(v bool) {
	o.Ignored = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetUrl(v string) {
	o.Url = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetText(v string) {
	o.Text = &v
}

// GetCopyright returns the Copyright field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetCopyright() string {
	if o == nil || IsNil(o.Copyright) {
		var ret string
		return ret
	}
	return *o.Copyright
}

// GetCopyrightOk returns a tuple with the Copyright field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetCopyrightOk() (*string, bool) {
	if o == nil || IsNil(o.Copyright) {
		return nil, false
	}
	return o.Copyright, true
}

// HasCopyright returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasCopyright() bool {
	if o != nil && !IsNil(o.Copyright) {
		return true
	}

	return false
}

// SetCopyright gets a reference to the given string and assigns it to the Copyright field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetCopyright(v string) {
	o.Copyright = &v
}

// GetFileCount returns the FileCount field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetFileCount() int32 {
	if o == nil || IsNil(o.FileCount) {
		var ret int32
		return ret
	}
	return *o.FileCount
}

// GetFileCountOk returns a tuple with the FileCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetFileCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FileCount) {
		return nil, false
	}
	return o.FileCount, true
}

// HasFileCount returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasFileCount() bool {
	if o != nil && !IsNil(o.FileCount) {
		return true
	}

	return false
}

// SetFileCount gets a reference to the given int32 and assigns it to the FileCount field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetFileCount(v int32) {
	o.FileCount = &v
}

// GetManual returns the Manual field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetManual() bool {
	if o == nil || IsNil(o.Manual) {
		var ret bool
		return ret
	}
	return *o.Manual
}

// GetManualOk returns a tuple with the Manual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetManualOk() (*bool, bool) {
	if o == nil || IsNil(o.Manual) {
		return nil, false
	}
	return o.Manual, true
}

// HasManual returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasManual() bool {
	if o != nil && !IsNil(o.Manual) {
		return true
	}

	return false
}

// SetManual gets a reference to the given bool and assigns it to the Manual field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetManual(v bool) {
	o.Manual = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LicenseId) {
		toSerialize["licenseId"] = o.LicenseId
	}
	if !IsNil(o.RevisionId) {
		toSerialize["revisionId"] = o.RevisionId
	}
	if !IsNil(o.LicenseGroupId) {
		toSerialize["licenseGroupId"] = o.LicenseGroupId
	}
	if !IsNil(o.ProjectCorrectionId) {
		toSerialize["projectCorrectionId"] = o.ProjectCorrectionId
	}
	if !IsNil(o.Ignored) {
		toSerialize["ignored"] = o.Ignored
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Copyright) {
		toSerialize["copyright"] = o.Copyright
	}
	if !IsNil(o.FileCount) {
		toSerialize["file_count"] = o.FileCount
	}
	if !IsNil(o.Manual) {
		toSerialize["manual"] = o.Manual
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner struct {
	value *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner
	isSet bool
}

func (v NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) Get() *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner {
	return v.value
}

func (v *NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) Set(val *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner(val *GetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) *NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner {
	return &NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner{value: val, isSet: true}
}

func (v NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReleaseGroupReleaseRevisions200ResponseInnerAllOfLicensesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


