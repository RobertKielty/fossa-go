/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
)

// checks if the GetIssue200ResponseOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssue200ResponseOneOf{}

// GetIssue200ResponseOneOf struct for GetIssue200ResponseOneOf
type GetIssue200ResponseOneOf struct {
	Id *int32 `json:"id,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Source *GetIssue200ResponseOneOfAllOfSource1 `json:"source,omitempty"`
	Depths *GetIssue200ResponseOneOfAllOfDepths `json:"depths,omitempty"`
	ContainerLayers *GetIssue200ResponseOneOfAllOfContainerLayers `json:"containerLayers,omitempty"`
	Statuses *GetIssueStatuses200ResponseIssues `json:"statuses,omitempty"`
	Projects []GetIssue200ResponseOneOfAllOfProjectsInner `json:"projects,omitempty"`
	Type *string `json:"type,omitempty"`
	VulnId *string `json:"vulnId,omitempty"`
	Title *string `json:"title,omitempty"`
	Cve *string `json:"cve,omitempty"`
	Cvss *float32 `json:"cvss,omitempty"`
	// The CVSS Vector for the vuln. Prefers the V3 vector if it exists, and falls back to the V2 vector. Is null if neither vector exists.
	CvssVector *string `json:"cvssVector,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Details *string `json:"details,omitempty"`
	Remediation *GetIssue200ResponseOneOfAllOfRemediation `json:"remediation,omitempty"`
	Metrics []GetIssue200ResponseOneOfAllOfMetricsInner `json:"metrics,omitempty"`
	CveStatus *string `json:"cveStatus,omitempty"`
	Cwes []string `json:"cwes,omitempty"`
	Cpes []string `json:"cpes,omitempty"`
	Published *time.Time `json:"published,omitempty"`
	AffectedVersionRanges []string `json:"affectedVersionRanges,omitempty"`
	PatchedVersionRanges []string `json:"patchedVersionRanges,omitempty"`
	References []string `json:"references,omitempty"`
	Exploitability *string `json:"exploitability,omitempty"`
	Epss *GetIssue200ResponseOneOfAllOfEpss `json:"epss,omitempty"`
}

// NewGetIssue200ResponseOneOf instantiates a new GetIssue200ResponseOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssue200ResponseOneOf() *GetIssue200ResponseOneOf {
	this := GetIssue200ResponseOneOf{}
	return &this
}

// NewGetIssue200ResponseOneOfWithDefaults instantiates a new GetIssue200ResponseOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssue200ResponseOneOfWithDefaults() *GetIssue200ResponseOneOf {
	this := GetIssue200ResponseOneOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetIssue200ResponseOneOf) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetIssue200ResponseOneOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetSource() GetIssue200ResponseOneOfAllOfSource1 {
	if o == nil || IsNil(o.Source) {
		var ret GetIssue200ResponseOneOfAllOfSource1
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetSourceOk() (*GetIssue200ResponseOneOfAllOfSource1, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given GetIssue200ResponseOneOfAllOfSource1 and assigns it to the Source field.
func (o *GetIssue200ResponseOneOf) SetSource(v GetIssue200ResponseOneOfAllOfSource1) {
	o.Source = &v
}

// GetDepths returns the Depths field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetDepths() GetIssue200ResponseOneOfAllOfDepths {
	if o == nil || IsNil(o.Depths) {
		var ret GetIssue200ResponseOneOfAllOfDepths
		return ret
	}
	return *o.Depths
}

// GetDepthsOk returns a tuple with the Depths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetDepthsOk() (*GetIssue200ResponseOneOfAllOfDepths, bool) {
	if o == nil || IsNil(o.Depths) {
		return nil, false
	}
	return o.Depths, true
}

// HasDepths returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasDepths() bool {
	if o != nil && !IsNil(o.Depths) {
		return true
	}

	return false
}

// SetDepths gets a reference to the given GetIssue200ResponseOneOfAllOfDepths and assigns it to the Depths field.
func (o *GetIssue200ResponseOneOf) SetDepths(v GetIssue200ResponseOneOfAllOfDepths) {
	o.Depths = &v
}

// GetContainerLayers returns the ContainerLayers field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetContainerLayers() GetIssue200ResponseOneOfAllOfContainerLayers {
	if o == nil || IsNil(o.ContainerLayers) {
		var ret GetIssue200ResponseOneOfAllOfContainerLayers
		return ret
	}
	return *o.ContainerLayers
}

// GetContainerLayersOk returns a tuple with the ContainerLayers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetContainerLayersOk() (*GetIssue200ResponseOneOfAllOfContainerLayers, bool) {
	if o == nil || IsNil(o.ContainerLayers) {
		return nil, false
	}
	return o.ContainerLayers, true
}

// HasContainerLayers returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasContainerLayers() bool {
	if o != nil && !IsNil(o.ContainerLayers) {
		return true
	}

	return false
}

// SetContainerLayers gets a reference to the given GetIssue200ResponseOneOfAllOfContainerLayers and assigns it to the ContainerLayers field.
func (o *GetIssue200ResponseOneOf) SetContainerLayers(v GetIssue200ResponseOneOfAllOfContainerLayers) {
	o.ContainerLayers = &v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetStatuses() GetIssueStatuses200ResponseIssues {
	if o == nil || IsNil(o.Statuses) {
		var ret GetIssueStatuses200ResponseIssues
		return ret
	}
	return *o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetStatusesOk() (*GetIssueStatuses200ResponseIssues, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasStatuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given GetIssueStatuses200ResponseIssues and assigns it to the Statuses field.
func (o *GetIssue200ResponseOneOf) SetStatuses(v GetIssueStatuses200ResponseIssues) {
	o.Statuses = &v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetProjects() []GetIssue200ResponseOneOfAllOfProjectsInner {
	if o == nil || IsNil(o.Projects) {
		var ret []GetIssue200ResponseOneOfAllOfProjectsInner
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetProjectsOk() ([]GetIssue200ResponseOneOfAllOfProjectsInner, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []GetIssue200ResponseOneOfAllOfProjectsInner and assigns it to the Projects field.
func (o *GetIssue200ResponseOneOf) SetProjects(v []GetIssue200ResponseOneOfAllOfProjectsInner) {
	o.Projects = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetIssue200ResponseOneOf) SetType(v string) {
	o.Type = &v
}

// GetVulnId returns the VulnId field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetVulnId() string {
	if o == nil || IsNil(o.VulnId) {
		var ret string
		return ret
	}
	return *o.VulnId
}

// GetVulnIdOk returns a tuple with the VulnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetVulnIdOk() (*string, bool) {
	if o == nil || IsNil(o.VulnId) {
		return nil, false
	}
	return o.VulnId, true
}

// HasVulnId returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasVulnId() bool {
	if o != nil && !IsNil(o.VulnId) {
		return true
	}

	return false
}

// SetVulnId gets a reference to the given string and assigns it to the VulnId field.
func (o *GetIssue200ResponseOneOf) SetVulnId(v string) {
	o.VulnId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetIssue200ResponseOneOf) SetTitle(v string) {
	o.Title = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *GetIssue200ResponseOneOf) SetCve(v string) {
	o.Cve = &v
}

// GetCvss returns the Cvss field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetCvss() float32 {
	if o == nil || IsNil(o.Cvss) {
		var ret float32
		return ret
	}
	return *o.Cvss
}

// GetCvssOk returns a tuple with the Cvss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetCvssOk() (*float32, bool) {
	if o == nil || IsNil(o.Cvss) {
		return nil, false
	}
	return o.Cvss, true
}

// HasCvss returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasCvss() bool {
	if o != nil && !IsNil(o.Cvss) {
		return true
	}

	return false
}

// SetCvss gets a reference to the given float32 and assigns it to the Cvss field.
func (o *GetIssue200ResponseOneOf) SetCvss(v float32) {
	o.Cvss = &v
}

// GetCvssVector returns the CvssVector field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetCvssVector() string {
	if o == nil || IsNil(o.CvssVector) {
		var ret string
		return ret
	}
	return *o.CvssVector
}

// GetCvssVectorOk returns a tuple with the CvssVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetCvssVectorOk() (*string, bool) {
	if o == nil || IsNil(o.CvssVector) {
		return nil, false
	}
	return o.CvssVector, true
}

// HasCvssVector returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasCvssVector() bool {
	if o != nil && !IsNil(o.CvssVector) {
		return true
	}

	return false
}

// SetCvssVector gets a reference to the given string and assigns it to the CvssVector field.
func (o *GetIssue200ResponseOneOf) SetCvssVector(v string) {
	o.CvssVector = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *GetIssue200ResponseOneOf) SetSeverity(v string) {
	o.Severity = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *GetIssue200ResponseOneOf) SetDetails(v string) {
	o.Details = &v
}

// GetRemediation returns the Remediation field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetRemediation() GetIssue200ResponseOneOfAllOfRemediation {
	if o == nil || IsNil(o.Remediation) {
		var ret GetIssue200ResponseOneOfAllOfRemediation
		return ret
	}
	return *o.Remediation
}

// GetRemediationOk returns a tuple with the Remediation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetRemediationOk() (*GetIssue200ResponseOneOfAllOfRemediation, bool) {
	if o == nil || IsNil(o.Remediation) {
		return nil, false
	}
	return o.Remediation, true
}

// HasRemediation returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasRemediation() bool {
	if o != nil && !IsNil(o.Remediation) {
		return true
	}

	return false
}

// SetRemediation gets a reference to the given GetIssue200ResponseOneOfAllOfRemediation and assigns it to the Remediation field.
func (o *GetIssue200ResponseOneOf) SetRemediation(v GetIssue200ResponseOneOfAllOfRemediation) {
	o.Remediation = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetMetrics() []GetIssue200ResponseOneOfAllOfMetricsInner {
	if o == nil || IsNil(o.Metrics) {
		var ret []GetIssue200ResponseOneOfAllOfMetricsInner
		return ret
	}
	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetMetricsOk() ([]GetIssue200ResponseOneOfAllOfMetricsInner, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []GetIssue200ResponseOneOfAllOfMetricsInner and assigns it to the Metrics field.
func (o *GetIssue200ResponseOneOf) SetMetrics(v []GetIssue200ResponseOneOfAllOfMetricsInner) {
	o.Metrics = v
}

// GetCveStatus returns the CveStatus field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetCveStatus() string {
	if o == nil || IsNil(o.CveStatus) {
		var ret string
		return ret
	}
	return *o.CveStatus
}

// GetCveStatusOk returns a tuple with the CveStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetCveStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CveStatus) {
		return nil, false
	}
	return o.CveStatus, true
}

// HasCveStatus returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasCveStatus() bool {
	if o != nil && !IsNil(o.CveStatus) {
		return true
	}

	return false
}

// SetCveStatus gets a reference to the given string and assigns it to the CveStatus field.
func (o *GetIssue200ResponseOneOf) SetCveStatus(v string) {
	o.CveStatus = &v
}

// GetCwes returns the Cwes field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetCwes() []string {
	if o == nil || IsNil(o.Cwes) {
		var ret []string
		return ret
	}
	return o.Cwes
}

// GetCwesOk returns a tuple with the Cwes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetCwesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cwes) {
		return nil, false
	}
	return o.Cwes, true
}

// HasCwes returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasCwes() bool {
	if o != nil && !IsNil(o.Cwes) {
		return true
	}

	return false
}

// SetCwes gets a reference to the given []string and assigns it to the Cwes field.
func (o *GetIssue200ResponseOneOf) SetCwes(v []string) {
	o.Cwes = v
}

// GetCpes returns the Cpes field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetCpes() []string {
	if o == nil || IsNil(o.Cpes) {
		var ret []string
		return ret
	}
	return o.Cpes
}

// GetCpesOk returns a tuple with the Cpes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetCpesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cpes) {
		return nil, false
	}
	return o.Cpes, true
}

// HasCpes returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasCpes() bool {
	if o != nil && !IsNil(o.Cpes) {
		return true
	}

	return false
}

// SetCpes gets a reference to the given []string and assigns it to the Cpes field.
func (o *GetIssue200ResponseOneOf) SetCpes(v []string) {
	o.Cpes = v
}

// GetPublished returns the Published field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetPublished() time.Time {
	if o == nil || IsNil(o.Published) {
		var ret time.Time
		return ret
	}
	return *o.Published
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetPublishedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Published) {
		return nil, false
	}
	return o.Published, true
}

// HasPublished returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasPublished() bool {
	if o != nil && !IsNil(o.Published) {
		return true
	}

	return false
}

// SetPublished gets a reference to the given time.Time and assigns it to the Published field.
func (o *GetIssue200ResponseOneOf) SetPublished(v time.Time) {
	o.Published = &v
}

// GetAffectedVersionRanges returns the AffectedVersionRanges field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetAffectedVersionRanges() []string {
	if o == nil || IsNil(o.AffectedVersionRanges) {
		var ret []string
		return ret
	}
	return o.AffectedVersionRanges
}

// GetAffectedVersionRangesOk returns a tuple with the AffectedVersionRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetAffectedVersionRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedVersionRanges) {
		return nil, false
	}
	return o.AffectedVersionRanges, true
}

// HasAffectedVersionRanges returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasAffectedVersionRanges() bool {
	if o != nil && !IsNil(o.AffectedVersionRanges) {
		return true
	}

	return false
}

// SetAffectedVersionRanges gets a reference to the given []string and assigns it to the AffectedVersionRanges field.
func (o *GetIssue200ResponseOneOf) SetAffectedVersionRanges(v []string) {
	o.AffectedVersionRanges = v
}

// GetPatchedVersionRanges returns the PatchedVersionRanges field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetPatchedVersionRanges() []string {
	if o == nil || IsNil(o.PatchedVersionRanges) {
		var ret []string
		return ret
	}
	return o.PatchedVersionRanges
}

// GetPatchedVersionRangesOk returns a tuple with the PatchedVersionRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetPatchedVersionRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.PatchedVersionRanges) {
		return nil, false
	}
	return o.PatchedVersionRanges, true
}

// HasPatchedVersionRanges returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasPatchedVersionRanges() bool {
	if o != nil && !IsNil(o.PatchedVersionRanges) {
		return true
	}

	return false
}

// SetPatchedVersionRanges gets a reference to the given []string and assigns it to the PatchedVersionRanges field.
func (o *GetIssue200ResponseOneOf) SetPatchedVersionRanges(v []string) {
	o.PatchedVersionRanges = v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *GetIssue200ResponseOneOf) SetReferences(v []string) {
	o.References = v
}

// GetExploitability returns the Exploitability field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetExploitability() string {
	if o == nil || IsNil(o.Exploitability) {
		var ret string
		return ret
	}
	return *o.Exploitability
}

// GetExploitabilityOk returns a tuple with the Exploitability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetExploitabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Exploitability) {
		return nil, false
	}
	return o.Exploitability, true
}

// HasExploitability returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasExploitability() bool {
	if o != nil && !IsNil(o.Exploitability) {
		return true
	}

	return false
}

// SetExploitability gets a reference to the given string and assigns it to the Exploitability field.
func (o *GetIssue200ResponseOneOf) SetExploitability(v string) {
	o.Exploitability = &v
}

// GetEpss returns the Epss field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOf) GetEpss() GetIssue200ResponseOneOfAllOfEpss {
	if o == nil || IsNil(o.Epss) {
		var ret GetIssue200ResponseOneOfAllOfEpss
		return ret
	}
	return *o.Epss
}

// GetEpssOk returns a tuple with the Epss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOf) GetEpssOk() (*GetIssue200ResponseOneOfAllOfEpss, bool) {
	if o == nil || IsNil(o.Epss) {
		return nil, false
	}
	return o.Epss, true
}

// HasEpss returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOf) HasEpss() bool {
	if o != nil && !IsNil(o.Epss) {
		return true
	}

	return false
}

// SetEpss gets a reference to the given GetIssue200ResponseOneOfAllOfEpss and assigns it to the Epss field.
func (o *GetIssue200ResponseOneOf) SetEpss(v GetIssue200ResponseOneOfAllOfEpss) {
	o.Epss = &v
}

func (o GetIssue200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssue200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Depths) {
		toSerialize["depths"] = o.Depths
	}
	if !IsNil(o.ContainerLayers) {
		toSerialize["containerLayers"] = o.ContainerLayers
	}
	if !IsNil(o.Statuses) {
		toSerialize["statuses"] = o.Statuses
	}
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VulnId) {
		toSerialize["vulnId"] = o.VulnId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cvss) {
		toSerialize["cvss"] = o.Cvss
	}
	if !IsNil(o.CvssVector) {
		toSerialize["cvssVector"] = o.CvssVector
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Remediation) {
		toSerialize["remediation"] = o.Remediation
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.CveStatus) {
		toSerialize["cveStatus"] = o.CveStatus
	}
	if !IsNil(o.Cwes) {
		toSerialize["cwes"] = o.Cwes
	}
	if !IsNil(o.Cpes) {
		toSerialize["cpes"] = o.Cpes
	}
	if !IsNil(o.Published) {
		toSerialize["published"] = o.Published
	}
	if !IsNil(o.AffectedVersionRanges) {
		toSerialize["affectedVersionRanges"] = o.AffectedVersionRanges
	}
	if !IsNil(o.PatchedVersionRanges) {
		toSerialize["patchedVersionRanges"] = o.PatchedVersionRanges
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Exploitability) {
		toSerialize["exploitability"] = o.Exploitability
	}
	if !IsNil(o.Epss) {
		toSerialize["epss"] = o.Epss
	}
	return toSerialize, nil
}

type NullableGetIssue200ResponseOneOf struct {
	value *GetIssue200ResponseOneOf
	isSet bool
}

func (v NullableGetIssue200ResponseOneOf) Get() *GetIssue200ResponseOneOf {
	return v.value
}

func (v *NullableGetIssue200ResponseOneOf) Set(val *GetIssue200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssue200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssue200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssue200ResponseOneOf(val *GetIssue200ResponseOneOf) *NullableGetIssue200ResponseOneOf {
	return &NullableGetIssue200ResponseOneOf{value: val, isSet: true}
}

func (v NullableGetIssue200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssue200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


