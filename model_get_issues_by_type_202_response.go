/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssuesByType202Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssuesByType202Response{}

// GetIssuesByType202Response struct for GetIssuesByType202Response
type GetIssuesByType202Response struct {
	Message *string `json:"message,omitempty"`
	PolicyConflict *int32 `json:"policy_conflict,omitempty"`
	PolicyFlag *int32 `json:"policy_flag,omitempty"`
	UnlicensedDependency *int32 `json:"unlicensed_dependency,omitempty"`
	OutdatedDependency *int32 `json:"outdated_dependency,omitempty"`
	Vulnerability *int32 `json:"vulnerability,omitempty"`
}

// NewGetIssuesByType202Response instantiates a new GetIssuesByType202Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssuesByType202Response() *GetIssuesByType202Response {
	this := GetIssuesByType202Response{}
	return &this
}

// NewGetIssuesByType202ResponseWithDefaults instantiates a new GetIssuesByType202Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssuesByType202ResponseWithDefaults() *GetIssuesByType202Response {
	this := GetIssuesByType202Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetIssuesByType202Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByType202Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetIssuesByType202Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetIssuesByType202Response) SetMessage(v string) {
	o.Message = &v
}

// GetPolicyConflict returns the PolicyConflict field value if set, zero value otherwise.
func (o *GetIssuesByType202Response) GetPolicyConflict() int32 {
	if o == nil || IsNil(o.PolicyConflict) {
		var ret int32
		return ret
	}
	return *o.PolicyConflict
}

// GetPolicyConflictOk returns a tuple with the PolicyConflict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByType202Response) GetPolicyConflictOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyConflict) {
		return nil, false
	}
	return o.PolicyConflict, true
}

// HasPolicyConflict returns a boolean if a field has been set.
func (o *GetIssuesByType202Response) HasPolicyConflict() bool {
	if o != nil && !IsNil(o.PolicyConflict) {
		return true
	}

	return false
}

// SetPolicyConflict gets a reference to the given int32 and assigns it to the PolicyConflict field.
func (o *GetIssuesByType202Response) SetPolicyConflict(v int32) {
	o.PolicyConflict = &v
}

// GetPolicyFlag returns the PolicyFlag field value if set, zero value otherwise.
func (o *GetIssuesByType202Response) GetPolicyFlag() int32 {
	if o == nil || IsNil(o.PolicyFlag) {
		var ret int32
		return ret
	}
	return *o.PolicyFlag
}

// GetPolicyFlagOk returns a tuple with the PolicyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByType202Response) GetPolicyFlagOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyFlag) {
		return nil, false
	}
	return o.PolicyFlag, true
}

// HasPolicyFlag returns a boolean if a field has been set.
func (o *GetIssuesByType202Response) HasPolicyFlag() bool {
	if o != nil && !IsNil(o.PolicyFlag) {
		return true
	}

	return false
}

// SetPolicyFlag gets a reference to the given int32 and assigns it to the PolicyFlag field.
func (o *GetIssuesByType202Response) SetPolicyFlag(v int32) {
	o.PolicyFlag = &v
}

// GetUnlicensedDependency returns the UnlicensedDependency field value if set, zero value otherwise.
func (o *GetIssuesByType202Response) GetUnlicensedDependency() int32 {
	if o == nil || IsNil(o.UnlicensedDependency) {
		var ret int32
		return ret
	}
	return *o.UnlicensedDependency
}

// GetUnlicensedDependencyOk returns a tuple with the UnlicensedDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByType202Response) GetUnlicensedDependencyOk() (*int32, bool) {
	if o == nil || IsNil(o.UnlicensedDependency) {
		return nil, false
	}
	return o.UnlicensedDependency, true
}

// HasUnlicensedDependency returns a boolean if a field has been set.
func (o *GetIssuesByType202Response) HasUnlicensedDependency() bool {
	if o != nil && !IsNil(o.UnlicensedDependency) {
		return true
	}

	return false
}

// SetUnlicensedDependency gets a reference to the given int32 and assigns it to the UnlicensedDependency field.
func (o *GetIssuesByType202Response) SetUnlicensedDependency(v int32) {
	o.UnlicensedDependency = &v
}

// GetOutdatedDependency returns the OutdatedDependency field value if set, zero value otherwise.
func (o *GetIssuesByType202Response) GetOutdatedDependency() int32 {
	if o == nil || IsNil(o.OutdatedDependency) {
		var ret int32
		return ret
	}
	return *o.OutdatedDependency
}

// GetOutdatedDependencyOk returns a tuple with the OutdatedDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByType202Response) GetOutdatedDependencyOk() (*int32, bool) {
	if o == nil || IsNil(o.OutdatedDependency) {
		return nil, false
	}
	return o.OutdatedDependency, true
}

// HasOutdatedDependency returns a boolean if a field has been set.
func (o *GetIssuesByType202Response) HasOutdatedDependency() bool {
	if o != nil && !IsNil(o.OutdatedDependency) {
		return true
	}

	return false
}

// SetOutdatedDependency gets a reference to the given int32 and assigns it to the OutdatedDependency field.
func (o *GetIssuesByType202Response) SetOutdatedDependency(v int32) {
	o.OutdatedDependency = &v
}

// GetVulnerability returns the Vulnerability field value if set, zero value otherwise.
func (o *GetIssuesByType202Response) GetVulnerability() int32 {
	if o == nil || IsNil(o.Vulnerability) {
		var ret int32
		return ret
	}
	return *o.Vulnerability
}

// GetVulnerabilityOk returns a tuple with the Vulnerability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByType202Response) GetVulnerabilityOk() (*int32, bool) {
	if o == nil || IsNil(o.Vulnerability) {
		return nil, false
	}
	return o.Vulnerability, true
}

// HasVulnerability returns a boolean if a field has been set.
func (o *GetIssuesByType202Response) HasVulnerability() bool {
	if o != nil && !IsNil(o.Vulnerability) {
		return true
	}

	return false
}

// SetVulnerability gets a reference to the given int32 and assigns it to the Vulnerability field.
func (o *GetIssuesByType202Response) SetVulnerability(v int32) {
	o.Vulnerability = &v
}

func (o GetIssuesByType202Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssuesByType202Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.PolicyConflict) {
		toSerialize["policy_conflict"] = o.PolicyConflict
	}
	if !IsNil(o.PolicyFlag) {
		toSerialize["policy_flag"] = o.PolicyFlag
	}
	if !IsNil(o.UnlicensedDependency) {
		toSerialize["unlicensed_dependency"] = o.UnlicensedDependency
	}
	if !IsNil(o.OutdatedDependency) {
		toSerialize["outdated_dependency"] = o.OutdatedDependency
	}
	if !IsNil(o.Vulnerability) {
		toSerialize["vulnerability"] = o.Vulnerability
	}
	return toSerialize, nil
}

type NullableGetIssuesByType202Response struct {
	value *GetIssuesByType202Response
	isSet bool
}

func (v NullableGetIssuesByType202Response) Get() *GetIssuesByType202Response {
	return v.value
}

func (v *NullableGetIssuesByType202Response) Set(val *GetIssuesByType202Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssuesByType202Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssuesByType202Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssuesByType202Response(val *GetIssuesByType202Response) *NullableGetIssuesByType202Response {
	return &NullableGetIssuesByType202Response{value: val, isSet: true}
}

func (v NullableGetIssuesByType202Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssuesByType202Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


