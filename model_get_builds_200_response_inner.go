/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
)

// checks if the GetBuilds200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBuilds200ResponseInner{}

// GetBuilds200ResponseInner struct for GetBuilds200ResponseInner
type GetBuilds200ResponseInner struct {
	// The ID for the build
	Id *int32 `json:"id,omitempty"`
	// The revision locator for the build
	Locator *string `json:"locator,omitempty"`
	// The ID of the user who owns the build
	OwnerId NullableInt32 `json:"ownerId,omitempty"`
	// The error message for the build
	Error NullableString `json:"error,omitempty"`
	// The warning messages for the build
	Warnings []string `json:"warnings,omitempty"`
	// Is the build from a CLI upload
	Provided *bool `json:"provided,omitempty"`
	// The ID of the task for the build
	TaskId NullableInt32 `json:"taskId,omitempty"`
	// The date and time the build was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The date and time the build was last updated
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// The ID of the CLI version for the build
	CliVersionId *int32 `json:"cliVersionId,omitempty"`
	Revision *GetBuilds200ResponseInnerRevision `json:"revision,omitempty"`
	Task *GetBuilds200ResponseInnerTask `json:"task,omitempty"`
}

// NewGetBuilds200ResponseInner instantiates a new GetBuilds200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBuilds200ResponseInner() *GetBuilds200ResponseInner {
	this := GetBuilds200ResponseInner{}
	return &this
}

// NewGetBuilds200ResponseInnerWithDefaults instantiates a new GetBuilds200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBuilds200ResponseInnerWithDefaults() *GetBuilds200ResponseInner {
	this := GetBuilds200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetBuilds200ResponseInner) SetId(v int32) {
	o.Id = &v
}

// GetLocator returns the Locator field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetLocator() string {
	if o == nil || IsNil(o.Locator) {
		var ret string
		return ret
	}
	return *o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.Locator) {
		return nil, false
	}
	return o.Locator, true
}

// HasLocator returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasLocator() bool {
	if o != nil && !IsNil(o.Locator) {
		return true
	}

	return false
}

// SetLocator gets a reference to the given string and assigns it to the Locator field.
func (o *GetBuilds200ResponseInner) SetLocator(v string) {
	o.Locator = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetBuilds200ResponseInner) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId.Get()) {
		var ret int32
		return ret
	}
	return *o.OwnerId.Get()
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBuilds200ResponseInner) GetOwnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerId.Get(), o.OwnerId.IsSet()
}

// HasOwnerId returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasOwnerId() bool {
	if o != nil && o.OwnerId.IsSet() {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given NullableInt32 and assigns it to the OwnerId field.
func (o *GetBuilds200ResponseInner) SetOwnerId(v int32) {
	o.OwnerId.Set(&v)
}
// SetOwnerIdNil sets the value for OwnerId to be an explicit nil
func (o *GetBuilds200ResponseInner) SetOwnerIdNil() {
	o.OwnerId.Set(nil)
}

// UnsetOwnerId ensures that no value is present for OwnerId, not even an explicit nil
func (o *GetBuilds200ResponseInner) UnsetOwnerId() {
	o.OwnerId.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetBuilds200ResponseInner) GetError() string {
	if o == nil || IsNil(o.Error.Get()) {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBuilds200ResponseInner) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *GetBuilds200ResponseInner) SetError(v string) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *GetBuilds200ResponseInner) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *GetBuilds200ResponseInner) UnsetError() {
	o.Error.Unset()
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *GetBuilds200ResponseInner) SetWarnings(v []string) {
	o.Warnings = v
}

// GetProvided returns the Provided field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetProvided() bool {
	if o == nil || IsNil(o.Provided) {
		var ret bool
		return ret
	}
	return *o.Provided
}

// GetProvidedOk returns a tuple with the Provided field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetProvidedOk() (*bool, bool) {
	if o == nil || IsNil(o.Provided) {
		return nil, false
	}
	return o.Provided, true
}

// HasProvided returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasProvided() bool {
	if o != nil && !IsNil(o.Provided) {
		return true
	}

	return false
}

// SetProvided gets a reference to the given bool and assigns it to the Provided field.
func (o *GetBuilds200ResponseInner) SetProvided(v bool) {
	o.Provided = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetBuilds200ResponseInner) GetTaskId() int32 {
	if o == nil || IsNil(o.TaskId.Get()) {
		var ret int32
		return ret
	}
	return *o.TaskId.Get()
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBuilds200ResponseInner) GetTaskIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskId.Get(), o.TaskId.IsSet()
}

// HasTaskId returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasTaskId() bool {
	if o != nil && o.TaskId.IsSet() {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given NullableInt32 and assigns it to the TaskId field.
func (o *GetBuilds200ResponseInner) SetTaskId(v int32) {
	o.TaskId.Set(&v)
}
// SetTaskIdNil sets the value for TaskId to be an explicit nil
func (o *GetBuilds200ResponseInner) SetTaskIdNil() {
	o.TaskId.Set(nil)
}

// UnsetTaskId ensures that no value is present for TaskId, not even an explicit nil
func (o *GetBuilds200ResponseInner) UnsetTaskId() {
	o.TaskId.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetBuilds200ResponseInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetBuilds200ResponseInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCliVersionId returns the CliVersionId field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetCliVersionId() int32 {
	if o == nil || IsNil(o.CliVersionId) {
		var ret int32
		return ret
	}
	return *o.CliVersionId
}

// GetCliVersionIdOk returns a tuple with the CliVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetCliVersionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CliVersionId) {
		return nil, false
	}
	return o.CliVersionId, true
}

// HasCliVersionId returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasCliVersionId() bool {
	if o != nil && !IsNil(o.CliVersionId) {
		return true
	}

	return false
}

// SetCliVersionId gets a reference to the given int32 and assigns it to the CliVersionId field.
func (o *GetBuilds200ResponseInner) SetCliVersionId(v int32) {
	o.CliVersionId = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetRevision() GetBuilds200ResponseInnerRevision {
	if o == nil || IsNil(o.Revision) {
		var ret GetBuilds200ResponseInnerRevision
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetRevisionOk() (*GetBuilds200ResponseInnerRevision, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given GetBuilds200ResponseInnerRevision and assigns it to the Revision field.
func (o *GetBuilds200ResponseInner) SetRevision(v GetBuilds200ResponseInnerRevision) {
	o.Revision = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *GetBuilds200ResponseInner) GetTask() GetBuilds200ResponseInnerTask {
	if o == nil || IsNil(o.Task) {
		var ret GetBuilds200ResponseInnerTask
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBuilds200ResponseInner) GetTaskOk() (*GetBuilds200ResponseInnerTask, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *GetBuilds200ResponseInner) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given GetBuilds200ResponseInnerTask and assigns it to the Task field.
func (o *GetBuilds200ResponseInner) SetTask(v GetBuilds200ResponseInnerTask) {
	o.Task = &v
}

func (o GetBuilds200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBuilds200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Locator) {
		toSerialize["locator"] = o.Locator
	}
	if o.OwnerId.IsSet() {
		toSerialize["ownerId"] = o.OwnerId.Get()
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.Provided) {
		toSerialize["provided"] = o.Provided
	}
	if o.TaskId.IsSet() {
		toSerialize["taskId"] = o.TaskId.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.CliVersionId) {
		toSerialize["cliVersionId"] = o.CliVersionId
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	return toSerialize, nil
}

type NullableGetBuilds200ResponseInner struct {
	value *GetBuilds200ResponseInner
	isSet bool
}

func (v NullableGetBuilds200ResponseInner) Get() *GetBuilds200ResponseInner {
	return v.value
}

func (v *NullableGetBuilds200ResponseInner) Set(val *GetBuilds200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBuilds200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBuilds200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBuilds200ResponseInner(val *GetBuilds200ResponseInner) *NullableGetBuilds200ResponseInner {
	return &NullableGetBuilds200ResponseInner{value: val, isSet: true}
}

func (v NullableGetBuilds200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBuilds200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


