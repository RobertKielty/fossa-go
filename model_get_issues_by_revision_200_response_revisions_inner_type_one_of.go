/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf{}

// GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf struct for GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf
type GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf struct {
	PolicyConflict *int32 `json:"policy_conflict,omitempty"`
	PolicyFlag *int32 `json:"policy_flag,omitempty"`
	UnlicensedDependency *int32 `json:"unlicensed_dependency,omitempty"`
}

// NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf instantiates a new GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf() *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf {
	this := GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf{}
	return &this
}

// NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOfWithDefaults instantiates a new GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOfWithDefaults() *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf {
	this := GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf{}
	return &this
}

// GetPolicyConflict returns the PolicyConflict field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) GetPolicyConflict() int32 {
	if o == nil || IsNil(o.PolicyConflict) {
		var ret int32
		return ret
	}
	return *o.PolicyConflict
}

// GetPolicyConflictOk returns a tuple with the PolicyConflict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) GetPolicyConflictOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyConflict) {
		return nil, false
	}
	return o.PolicyConflict, true
}

// HasPolicyConflict returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) HasPolicyConflict() bool {
	if o != nil && !IsNil(o.PolicyConflict) {
		return true
	}

	return false
}

// SetPolicyConflict gets a reference to the given int32 and assigns it to the PolicyConflict field.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) SetPolicyConflict(v int32) {
	o.PolicyConflict = &v
}

// GetPolicyFlag returns the PolicyFlag field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) GetPolicyFlag() int32 {
	if o == nil || IsNil(o.PolicyFlag) {
		var ret int32
		return ret
	}
	return *o.PolicyFlag
}

// GetPolicyFlagOk returns a tuple with the PolicyFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) GetPolicyFlagOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyFlag) {
		return nil, false
	}
	return o.PolicyFlag, true
}

// HasPolicyFlag returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) HasPolicyFlag() bool {
	if o != nil && !IsNil(o.PolicyFlag) {
		return true
	}

	return false
}

// SetPolicyFlag gets a reference to the given int32 and assigns it to the PolicyFlag field.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) SetPolicyFlag(v int32) {
	o.PolicyFlag = &v
}

// GetUnlicensedDependency returns the UnlicensedDependency field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) GetUnlicensedDependency() int32 {
	if o == nil || IsNil(o.UnlicensedDependency) {
		var ret int32
		return ret
	}
	return *o.UnlicensedDependency
}

// GetUnlicensedDependencyOk returns a tuple with the UnlicensedDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) GetUnlicensedDependencyOk() (*int32, bool) {
	if o == nil || IsNil(o.UnlicensedDependency) {
		return nil, false
	}
	return o.UnlicensedDependency, true
}

// HasUnlicensedDependency returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) HasUnlicensedDependency() bool {
	if o != nil && !IsNil(o.UnlicensedDependency) {
		return true
	}

	return false
}

// SetUnlicensedDependency gets a reference to the given int32 and assigns it to the UnlicensedDependency field.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) SetUnlicensedDependency(v int32) {
	o.UnlicensedDependency = &v
}

func (o GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyConflict) {
		toSerialize["policy_conflict"] = o.PolicyConflict
	}
	if !IsNil(o.PolicyFlag) {
		toSerialize["policy_flag"] = o.PolicyFlag
	}
	if !IsNil(o.UnlicensedDependency) {
		toSerialize["unlicensed_dependency"] = o.UnlicensedDependency
	}
	return toSerialize, nil
}

type NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf struct {
	value *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf
	isSet bool
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) Get() *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf {
	return v.value
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) Set(val *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf(val *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf {
	return &NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf{value: val, isSet: true}
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


