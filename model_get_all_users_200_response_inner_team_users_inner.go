/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetAllUsers200ResponseInnerTeamUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllUsers200ResponseInnerTeamUsersInner{}

// GetAllUsers200ResponseInnerTeamUsersInner struct for GetAllUsers200ResponseInnerTeamUsersInner
type GetAllUsers200ResponseInnerTeamUsersInner struct {
	// The user's role ID
	RoleId *int32 `json:"roleId,omitempty"`
	Team *GetAllUsers200ResponseInnerTeamUsersInnerTeam `json:"team,omitempty"`
}

// NewGetAllUsers200ResponseInnerTeamUsersInner instantiates a new GetAllUsers200ResponseInnerTeamUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllUsers200ResponseInnerTeamUsersInner() *GetAllUsers200ResponseInnerTeamUsersInner {
	this := GetAllUsers200ResponseInnerTeamUsersInner{}
	return &this
}

// NewGetAllUsers200ResponseInnerTeamUsersInnerWithDefaults instantiates a new GetAllUsers200ResponseInnerTeamUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllUsers200ResponseInnerTeamUsersInnerWithDefaults() *GetAllUsers200ResponseInnerTeamUsersInner {
	this := GetAllUsers200ResponseInnerTeamUsersInner{}
	return &this
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) GetRoleId() int32 {
	if o == nil || IsNil(o.RoleId) {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) GetRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) SetRoleId(v int32) {
	o.RoleId = &v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) GetTeam() GetAllUsers200ResponseInnerTeamUsersInnerTeam {
	if o == nil || IsNil(o.Team) {
		var ret GetAllUsers200ResponseInnerTeamUsersInnerTeam
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) GetTeamOk() (*GetAllUsers200ResponseInnerTeamUsersInnerTeam, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given GetAllUsers200ResponseInnerTeamUsersInnerTeam and assigns it to the Team field.
func (o *GetAllUsers200ResponseInnerTeamUsersInner) SetTeam(v GetAllUsers200ResponseInnerTeamUsersInnerTeam) {
	o.Team = &v
}

func (o GetAllUsers200ResponseInnerTeamUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllUsers200ResponseInnerTeamUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	return toSerialize, nil
}

type NullableGetAllUsers200ResponseInnerTeamUsersInner struct {
	value *GetAllUsers200ResponseInnerTeamUsersInner
	isSet bool
}

func (v NullableGetAllUsers200ResponseInnerTeamUsersInner) Get() *GetAllUsers200ResponseInnerTeamUsersInner {
	return v.value
}

func (v *NullableGetAllUsers200ResponseInnerTeamUsersInner) Set(val *GetAllUsers200ResponseInnerTeamUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllUsers200ResponseInnerTeamUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllUsers200ResponseInnerTeamUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllUsers200ResponseInnerTeamUsersInner(val *GetAllUsers200ResponseInnerTeamUsersInner) *NullableGetAllUsers200ResponseInnerTeamUsersInner {
	return &NullableGetAllUsers200ResponseInnerTeamUsersInner{value: val, isSet: true}
}

func (v NullableGetAllUsers200ResponseInnerTeamUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllUsers200ResponseInnerTeamUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


