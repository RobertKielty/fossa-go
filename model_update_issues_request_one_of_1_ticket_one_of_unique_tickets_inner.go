/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner{}

// UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner struct for UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner
type UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner struct {
	Title *string `json:"title,omitempty"`
	Content *string `json:"content,omitempty"`
	IssueId *float32 `json:"issueId,omitempty"`
}

// NewUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner instantiates a new UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner() *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner {
	this := UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner{}
	return &this
}

// NewUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInnerWithDefaults instantiates a new UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInnerWithDefaults() *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner {
	this := UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) SetTitle(v string) {
	o.Title = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) SetContent(v string) {
	o.Content = &v
}

// GetIssueId returns the IssueId field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) GetIssueId() float32 {
	if o == nil || IsNil(o.IssueId) {
		var ret float32
		return ret
	}
	return *o.IssueId
}

// GetIssueIdOk returns a tuple with the IssueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) GetIssueIdOk() (*float32, bool) {
	if o == nil || IsNil(o.IssueId) {
		return nil, false
	}
	return o.IssueId, true
}

// HasIssueId returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) HasIssueId() bool {
	if o != nil && !IsNil(o.IssueId) {
		return true
	}

	return false
}

// SetIssueId gets a reference to the given float32 and assigns it to the IssueId field.
func (o *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) SetIssueId(v float32) {
	o.IssueId = &v
}

func (o UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.IssueId) {
		toSerialize["issueId"] = o.IssueId
	}
	return toSerialize, nil
}

type NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner struct {
	value *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner
	isSet bool
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) Get() *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner {
	return v.value
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) Set(val *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner(val *UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) *NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner {
	return &NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner{value: val, isSet: true}
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


