/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
)

// checks if the GetPackageLabels200ResponsePackageLabelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPackageLabels200ResponsePackageLabelsInner{}

// GetPackageLabels200ResponsePackageLabelsInner struct for GetPackageLabels200ResponsePackageLabelsInner
type GetPackageLabels200ResponsePackageLabelsInner struct {
	Id *int32 `json:"id,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	Name *string `json:"name,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewGetPackageLabels200ResponsePackageLabelsInner instantiates a new GetPackageLabels200ResponsePackageLabelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPackageLabels200ResponsePackageLabelsInner() *GetPackageLabels200ResponsePackageLabelsInner {
	this := GetPackageLabels200ResponsePackageLabelsInner{}
	return &this
}

// NewGetPackageLabels200ResponsePackageLabelsInnerWithDefaults instantiates a new GetPackageLabels200ResponsePackageLabelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPackageLabels200ResponsePackageLabelsInnerWithDefaults() *GetPackageLabels200ResponsePackageLabelsInner {
	this := GetPackageLabels200ResponsePackageLabelsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetPackageLabels200ResponsePackageLabelsInner) SetId(v int32) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *GetPackageLabels200ResponsePackageLabelsInner) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetPackageLabels200ResponsePackageLabelsInner) SetName(v string) {
	o.Name = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetPackageLabels200ResponsePackageLabelsInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetPackageLabels200ResponsePackageLabelsInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetPackageLabels200ResponsePackageLabelsInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o GetPackageLabels200ResponsePackageLabelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPackageLabels200ResponsePackageLabelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableGetPackageLabels200ResponsePackageLabelsInner struct {
	value *GetPackageLabels200ResponsePackageLabelsInner
	isSet bool
}

func (v NullableGetPackageLabels200ResponsePackageLabelsInner) Get() *GetPackageLabels200ResponsePackageLabelsInner {
	return v.value
}

func (v *NullableGetPackageLabels200ResponsePackageLabelsInner) Set(val *GetPackageLabels200ResponsePackageLabelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPackageLabels200ResponsePackageLabelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPackageLabels200ResponsePackageLabelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPackageLabels200ResponsePackageLabelsInner(val *GetPackageLabels200ResponsePackageLabelsInner) *NullableGetPackageLabels200ResponsePackageLabelsInner {
	return &NullableGetPackageLabels200ResponsePackageLabelsInner{value: val, isSet: true}
}

func (v NullableGetPackageLabels200ResponsePackageLabelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPackageLabels200ResponsePackageLabelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


