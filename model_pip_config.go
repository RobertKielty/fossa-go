/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the PipConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipConfig{}

// PipConfig struct for PipConfig
type PipConfig struct {
	// List of configured Pip Repositories
	Repositories []GetOrganizationPipSettings200ResponseRepositoriesInner `json:"repositories,omitempty"`
}

// NewPipConfig instantiates a new PipConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipConfig() *PipConfig {
	this := PipConfig{}
	return &this
}

// NewPipConfigWithDefaults instantiates a new PipConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipConfigWithDefaults() *PipConfig {
	this := PipConfig{}
	return &this
}

// GetRepositories returns the Repositories field value if set, zero value otherwise.
func (o *PipConfig) GetRepositories() []GetOrganizationPipSettings200ResponseRepositoriesInner {
	if o == nil || IsNil(o.Repositories) {
		var ret []GetOrganizationPipSettings200ResponseRepositoriesInner
		return ret
	}
	return o.Repositories
}

// GetRepositoriesOk returns a tuple with the Repositories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipConfig) GetRepositoriesOk() ([]GetOrganizationPipSettings200ResponseRepositoriesInner, bool) {
	if o == nil || IsNil(o.Repositories) {
		return nil, false
	}
	return o.Repositories, true
}

// HasRepositories returns a boolean if a field has been set.
func (o *PipConfig) HasRepositories() bool {
	if o != nil && !IsNil(o.Repositories) {
		return true
	}

	return false
}

// SetRepositories gets a reference to the given []GetOrganizationPipSettings200ResponseRepositoriesInner and assigns it to the Repositories field.
func (o *PipConfig) SetRepositories(v []GetOrganizationPipSettings200ResponseRepositoriesInner) {
	o.Repositories = v
}

func (o PipConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Repositories) {
		toSerialize["repositories"] = o.Repositories
	}
	return toSerialize, nil
}

type NullablePipConfig struct {
	value *PipConfig
	isSet bool
}

func (v NullablePipConfig) Get() *PipConfig {
	return v.value
}

func (v *NullablePipConfig) Set(val *PipConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePipConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePipConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipConfig(val *PipConfig) *NullablePipConfig {
	return &NullablePipConfig{value: val, isSet: true}
}

func (v NullablePipConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


