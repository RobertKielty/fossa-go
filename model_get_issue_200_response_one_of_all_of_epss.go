/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssue200ResponseOneOfAllOfEpss type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssue200ResponseOneOfAllOfEpss{}

// GetIssue200ResponseOneOfAllOfEpss struct for GetIssue200ResponseOneOfAllOfEpss
type GetIssue200ResponseOneOfAllOfEpss struct {
	Score *float32 `json:"score,omitempty"`
	Percentile *float32 `json:"percentile,omitempty"`
}

// NewGetIssue200ResponseOneOfAllOfEpss instantiates a new GetIssue200ResponseOneOfAllOfEpss object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssue200ResponseOneOfAllOfEpss() *GetIssue200ResponseOneOfAllOfEpss {
	this := GetIssue200ResponseOneOfAllOfEpss{}
	return &this
}

// NewGetIssue200ResponseOneOfAllOfEpssWithDefaults instantiates a new GetIssue200ResponseOneOfAllOfEpss object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssue200ResponseOneOfAllOfEpssWithDefaults() *GetIssue200ResponseOneOfAllOfEpss {
	this := GetIssue200ResponseOneOfAllOfEpss{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfEpss) GetScore() float32 {
	if o == nil || IsNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfEpss) GetScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfEpss) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *GetIssue200ResponseOneOfAllOfEpss) SetScore(v float32) {
	o.Score = &v
}

// GetPercentile returns the Percentile field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfEpss) GetPercentile() float32 {
	if o == nil || IsNil(o.Percentile) {
		var ret float32
		return ret
	}
	return *o.Percentile
}

// GetPercentileOk returns a tuple with the Percentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfEpss) GetPercentileOk() (*float32, bool) {
	if o == nil || IsNil(o.Percentile) {
		return nil, false
	}
	return o.Percentile, true
}

// HasPercentile returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfEpss) HasPercentile() bool {
	if o != nil && !IsNil(o.Percentile) {
		return true
	}

	return false
}

// SetPercentile gets a reference to the given float32 and assigns it to the Percentile field.
func (o *GetIssue200ResponseOneOfAllOfEpss) SetPercentile(v float32) {
	o.Percentile = &v
}

func (o GetIssue200ResponseOneOfAllOfEpss) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssue200ResponseOneOfAllOfEpss) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Percentile) {
		toSerialize["percentile"] = o.Percentile
	}
	return toSerialize, nil
}

type NullableGetIssue200ResponseOneOfAllOfEpss struct {
	value *GetIssue200ResponseOneOfAllOfEpss
	isSet bool
}

func (v NullableGetIssue200ResponseOneOfAllOfEpss) Get() *GetIssue200ResponseOneOfAllOfEpss {
	return v.value
}

func (v *NullableGetIssue200ResponseOneOfAllOfEpss) Set(val *GetIssue200ResponseOneOfAllOfEpss) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssue200ResponseOneOfAllOfEpss) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssue200ResponseOneOfAllOfEpss) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssue200ResponseOneOfAllOfEpss(val *GetIssue200ResponseOneOfAllOfEpss) *NullableGetIssue200ResponseOneOfAllOfEpss {
	return &NullableGetIssue200ResponseOneOfAllOfEpss{value: val, isSet: true}
}

func (v NullableGetIssue200ResponseOneOfAllOfEpss) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssue200ResponseOneOfAllOfEpss) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


