/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueDiffComparisonSummaries200ResponseIssues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueDiffComparisonSummaries200ResponseIssues{}

// GetIssueDiffComparisonSummaries200ResponseIssues struct for GetIssueDiffComparisonSummaries200ResponseIssues
type GetIssueDiffComparisonSummaries200ResponseIssues struct {
	New *int32 `json:"new,omitempty"`
	Remediated *int32 `json:"remediated,omitempty"`
	Unchanged *int32 `json:"unchanged,omitempty"`
}

// NewGetIssueDiffComparisonSummaries200ResponseIssues instantiates a new GetIssueDiffComparisonSummaries200ResponseIssues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueDiffComparisonSummaries200ResponseIssues() *GetIssueDiffComparisonSummaries200ResponseIssues {
	this := GetIssueDiffComparisonSummaries200ResponseIssues{}
	return &this
}

// NewGetIssueDiffComparisonSummaries200ResponseIssuesWithDefaults instantiates a new GetIssueDiffComparisonSummaries200ResponseIssues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueDiffComparisonSummaries200ResponseIssuesWithDefaults() *GetIssueDiffComparisonSummaries200ResponseIssues {
	this := GetIssueDiffComparisonSummaries200ResponseIssues{}
	return &this
}

// GetNew returns the New field value if set, zero value otherwise.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) GetNew() int32 {
	if o == nil || IsNil(o.New) {
		var ret int32
		return ret
	}
	return *o.New
}

// GetNewOk returns a tuple with the New field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) GetNewOk() (*int32, bool) {
	if o == nil || IsNil(o.New) {
		return nil, false
	}
	return o.New, true
}

// HasNew returns a boolean if a field has been set.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) HasNew() bool {
	if o != nil && !IsNil(o.New) {
		return true
	}

	return false
}

// SetNew gets a reference to the given int32 and assigns it to the New field.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) SetNew(v int32) {
	o.New = &v
}

// GetRemediated returns the Remediated field value if set, zero value otherwise.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) GetRemediated() int32 {
	if o == nil || IsNil(o.Remediated) {
		var ret int32
		return ret
	}
	return *o.Remediated
}

// GetRemediatedOk returns a tuple with the Remediated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) GetRemediatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Remediated) {
		return nil, false
	}
	return o.Remediated, true
}

// HasRemediated returns a boolean if a field has been set.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) HasRemediated() bool {
	if o != nil && !IsNil(o.Remediated) {
		return true
	}

	return false
}

// SetRemediated gets a reference to the given int32 and assigns it to the Remediated field.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) SetRemediated(v int32) {
	o.Remediated = &v
}

// GetUnchanged returns the Unchanged field value if set, zero value otherwise.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) GetUnchanged() int32 {
	if o == nil || IsNil(o.Unchanged) {
		var ret int32
		return ret
	}
	return *o.Unchanged
}

// GetUnchangedOk returns a tuple with the Unchanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) GetUnchangedOk() (*int32, bool) {
	if o == nil || IsNil(o.Unchanged) {
		return nil, false
	}
	return o.Unchanged, true
}

// HasUnchanged returns a boolean if a field has been set.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) HasUnchanged() bool {
	if o != nil && !IsNil(o.Unchanged) {
		return true
	}

	return false
}

// SetUnchanged gets a reference to the given int32 and assigns it to the Unchanged field.
func (o *GetIssueDiffComparisonSummaries200ResponseIssues) SetUnchanged(v int32) {
	o.Unchanged = &v
}

func (o GetIssueDiffComparisonSummaries200ResponseIssues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueDiffComparisonSummaries200ResponseIssues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.New) {
		toSerialize["new"] = o.New
	}
	if !IsNil(o.Remediated) {
		toSerialize["remediated"] = o.Remediated
	}
	if !IsNil(o.Unchanged) {
		toSerialize["unchanged"] = o.Unchanged
	}
	return toSerialize, nil
}

type NullableGetIssueDiffComparisonSummaries200ResponseIssues struct {
	value *GetIssueDiffComparisonSummaries200ResponseIssues
	isSet bool
}

func (v NullableGetIssueDiffComparisonSummaries200ResponseIssues) Get() *GetIssueDiffComparisonSummaries200ResponseIssues {
	return v.value
}

func (v *NullableGetIssueDiffComparisonSummaries200ResponseIssues) Set(val *GetIssueDiffComparisonSummaries200ResponseIssues) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueDiffComparisonSummaries200ResponseIssues) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueDiffComparisonSummaries200ResponseIssues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueDiffComparisonSummaries200ResponseIssues(val *GetIssueDiffComparisonSummaries200ResponseIssues) *NullableGetIssueDiffComparisonSummaries200ResponseIssues {
	return &NullableGetIssueDiffComparisonSummaries200ResponseIssues{value: val, isSet: true}
}

func (v NullableGetIssueDiffComparisonSummaries200ResponseIssues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueDiffComparisonSummaries200ResponseIssues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


