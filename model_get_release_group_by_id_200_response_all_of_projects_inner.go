/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
)

// checks if the GetReleaseGroupById200ResponseAllOfProjectsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReleaseGroupById200ResponseAllOfProjectsInner{}

// GetReleaseGroupById200ResponseAllOfProjectsInner struct for GetReleaseGroupById200ResponseAllOfProjectsInner
type GetReleaseGroupById200ResponseAllOfProjectsInner struct {
	ProjectId *string `json:"projectId,omitempty"`
	ProjectGroupReleaseId *int32 `json:"projectGroupReleaseId,omitempty"`
	Branch *string `json:"branch,omitempty"`
	RevisionId *string `json:"revisionId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewGetReleaseGroupById200ResponseAllOfProjectsInner instantiates a new GetReleaseGroupById200ResponseAllOfProjectsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReleaseGroupById200ResponseAllOfProjectsInner() *GetReleaseGroupById200ResponseAllOfProjectsInner {
	this := GetReleaseGroupById200ResponseAllOfProjectsInner{}
	return &this
}

// NewGetReleaseGroupById200ResponseAllOfProjectsInnerWithDefaults instantiates a new GetReleaseGroupById200ResponseAllOfProjectsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReleaseGroupById200ResponseAllOfProjectsInnerWithDefaults() *GetReleaseGroupById200ResponseAllOfProjectsInner {
	this := GetReleaseGroupById200ResponseAllOfProjectsInner{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectGroupReleaseId returns the ProjectGroupReleaseId field value if set, zero value otherwise.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetProjectGroupReleaseId() int32 {
	if o == nil || IsNil(o.ProjectGroupReleaseId) {
		var ret int32
		return ret
	}
	return *o.ProjectGroupReleaseId
}

// GetProjectGroupReleaseIdOk returns a tuple with the ProjectGroupReleaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetProjectGroupReleaseIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectGroupReleaseId) {
		return nil, false
	}
	return o.ProjectGroupReleaseId, true
}

// HasProjectGroupReleaseId returns a boolean if a field has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) HasProjectGroupReleaseId() bool {
	if o != nil && !IsNil(o.ProjectGroupReleaseId) {
		return true
	}

	return false
}

// SetProjectGroupReleaseId gets a reference to the given int32 and assigns it to the ProjectGroupReleaseId field.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) SetProjectGroupReleaseId(v int32) {
	o.ProjectGroupReleaseId = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) SetBranch(v string) {
	o.Branch = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetRevisionId() string {
	if o == nil || IsNil(o.RevisionId) {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetRevisionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionId) {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) HasRevisionId() bool {
	if o != nil && !IsNil(o.RevisionId) {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetReleaseGroupById200ResponseAllOfProjectsInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o GetReleaseGroupById200ResponseAllOfProjectsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReleaseGroupById200ResponseAllOfProjectsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ProjectGroupReleaseId) {
		toSerialize["projectGroupReleaseId"] = o.ProjectGroupReleaseId
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.RevisionId) {
		toSerialize["revisionId"] = o.RevisionId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableGetReleaseGroupById200ResponseAllOfProjectsInner struct {
	value *GetReleaseGroupById200ResponseAllOfProjectsInner
	isSet bool
}

func (v NullableGetReleaseGroupById200ResponseAllOfProjectsInner) Get() *GetReleaseGroupById200ResponseAllOfProjectsInner {
	return v.value
}

func (v *NullableGetReleaseGroupById200ResponseAllOfProjectsInner) Set(val *GetReleaseGroupById200ResponseAllOfProjectsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReleaseGroupById200ResponseAllOfProjectsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReleaseGroupById200ResponseAllOfProjectsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReleaseGroupById200ResponseAllOfProjectsInner(val *GetReleaseGroupById200ResponseAllOfProjectsInner) *NullableGetReleaseGroupById200ResponseAllOfProjectsInner {
	return &NullableGetReleaseGroupById200ResponseAllOfProjectsInner{value: val, isSet: true}
}

func (v NullableGetReleaseGroupById200ResponseAllOfProjectsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReleaseGroupById200ResponseAllOfProjectsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


