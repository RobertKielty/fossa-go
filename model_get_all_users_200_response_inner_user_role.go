/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetAllUsers200ResponseInnerUserRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllUsers200ResponseInnerUserRole{}

// GetAllUsers200ResponseInnerUserRole struct for GetAllUsers200ResponseInnerUserRole
type GetAllUsers200ResponseInnerUserRole struct {
	// The user's Organization role ID
	RoleId *int32 `json:"roleId,omitempty"`
	Role *GetAllUsers200ResponseInnerUserRoleRole `json:"role,omitempty"`
}

// NewGetAllUsers200ResponseInnerUserRole instantiates a new GetAllUsers200ResponseInnerUserRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllUsers200ResponseInnerUserRole() *GetAllUsers200ResponseInnerUserRole {
	this := GetAllUsers200ResponseInnerUserRole{}
	return &this
}

// NewGetAllUsers200ResponseInnerUserRoleWithDefaults instantiates a new GetAllUsers200ResponseInnerUserRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllUsers200ResponseInnerUserRoleWithDefaults() *GetAllUsers200ResponseInnerUserRole {
	this := GetAllUsers200ResponseInnerUserRole{}
	return &this
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerUserRole) GetRoleId() int32 {
	if o == nil || IsNil(o.RoleId) {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerUserRole) GetRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerUserRole) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *GetAllUsers200ResponseInnerUserRole) SetRoleId(v int32) {
	o.RoleId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerUserRole) GetRole() GetAllUsers200ResponseInnerUserRoleRole {
	if o == nil || IsNil(o.Role) {
		var ret GetAllUsers200ResponseInnerUserRoleRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerUserRole) GetRoleOk() (*GetAllUsers200ResponseInnerUserRoleRole, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerUserRole) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given GetAllUsers200ResponseInnerUserRoleRole and assigns it to the Role field.
func (o *GetAllUsers200ResponseInnerUserRole) SetRole(v GetAllUsers200ResponseInnerUserRoleRole) {
	o.Role = &v
}

func (o GetAllUsers200ResponseInnerUserRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllUsers200ResponseInnerUserRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableGetAllUsers200ResponseInnerUserRole struct {
	value *GetAllUsers200ResponseInnerUserRole
	isSet bool
}

func (v NullableGetAllUsers200ResponseInnerUserRole) Get() *GetAllUsers200ResponseInnerUserRole {
	return v.value
}

func (v *NullableGetAllUsers200ResponseInnerUserRole) Set(val *GetAllUsers200ResponseInnerUserRole) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllUsers200ResponseInnerUserRole) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllUsers200ResponseInnerUserRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllUsers200ResponseInnerUserRole(val *GetAllUsers200ResponseInnerUserRole) *NullableGetAllUsers200ResponseInnerUserRole {
	return &NullableGetAllUsers200ResponseInnerUserRole{value: val, isSet: true}
}

func (v NullableGetAllUsers200ResponseInnerUserRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllUsers200ResponseInnerUserRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


