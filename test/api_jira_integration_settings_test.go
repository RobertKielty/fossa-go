/*
FOSSA API

Testing JiraIntegrationSettingsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package fossa

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/RobertKielty/fossa-go"
)

func Test_fossa_JiraIntegrationSettingsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test JiraIntegrationSettingsAPIService CreateJiraConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.JiraIntegrationSettingsAPI.CreateJiraConfiguration(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JiraIntegrationSettingsAPIService DeleteJiraConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.JiraIntegrationSettingsAPI.DeleteJiraConfiguration(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JiraIntegrationSettingsAPIService GetJiraConfigurations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.JiraIntegrationSettingsAPI.GetJiraConfigurations(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JiraIntegrationSettingsAPIService PatchJiraConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		httpRes, err := apiClient.JiraIntegrationSettingsAPI.PatchJiraConfiguration(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
