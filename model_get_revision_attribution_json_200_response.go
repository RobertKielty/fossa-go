/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetRevisionAttributionJSON200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRevisionAttributionJSON200Response{}

// GetRevisionAttributionJSON200Response struct for GetRevisionAttributionJSON200Response
type GetRevisionAttributionJSON200Response struct {
	Project *GetRevisionAttributionJSON200ResponseProject `json:"project,omitempty"`
	DirectDependencies []GetRevisionAttributionJSON200ResponseDirectDependenciesInner `json:"directDependencies,omitempty"`
	DeepDependencies []GetRevisionAttributionJSON200ResponseDirectDependenciesInner `json:"deepDependencies,omitempty"`
	// A record of license names to their text
	Licenses map[string]interface{} `json:"licenses,omitempty"`
	// A record of license names to their copyrights
	CopyrightsByLicense map[string]interface{} `json:"copyrightsByLicense,omitempty"`
	// A list of notice file matches
	NoticeFiles []GetRevisionAttributionJSON200ResponseDirectDependenciesInnerNoticeFilesInner `json:"noticeFiles,omitempty"`
}

// NewGetRevisionAttributionJSON200Response instantiates a new GetRevisionAttributionJSON200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRevisionAttributionJSON200Response() *GetRevisionAttributionJSON200Response {
	this := GetRevisionAttributionJSON200Response{}
	return &this
}

// NewGetRevisionAttributionJSON200ResponseWithDefaults instantiates a new GetRevisionAttributionJSON200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRevisionAttributionJSON200ResponseWithDefaults() *GetRevisionAttributionJSON200Response {
	this := GetRevisionAttributionJSON200Response{}
	return &this
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200Response) GetProject() GetRevisionAttributionJSON200ResponseProject {
	if o == nil || IsNil(o.Project) {
		var ret GetRevisionAttributionJSON200ResponseProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200Response) GetProjectOk() (*GetRevisionAttributionJSON200ResponseProject, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200Response) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given GetRevisionAttributionJSON200ResponseProject and assigns it to the Project field.
func (o *GetRevisionAttributionJSON200Response) SetProject(v GetRevisionAttributionJSON200ResponseProject) {
	o.Project = &v
}

// GetDirectDependencies returns the DirectDependencies field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200Response) GetDirectDependencies() []GetRevisionAttributionJSON200ResponseDirectDependenciesInner {
	if o == nil || IsNil(o.DirectDependencies) {
		var ret []GetRevisionAttributionJSON200ResponseDirectDependenciesInner
		return ret
	}
	return o.DirectDependencies
}

// GetDirectDependenciesOk returns a tuple with the DirectDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200Response) GetDirectDependenciesOk() ([]GetRevisionAttributionJSON200ResponseDirectDependenciesInner, bool) {
	if o == nil || IsNil(o.DirectDependencies) {
		return nil, false
	}
	return o.DirectDependencies, true
}

// HasDirectDependencies returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200Response) HasDirectDependencies() bool {
	if o != nil && !IsNil(o.DirectDependencies) {
		return true
	}

	return false
}

// SetDirectDependencies gets a reference to the given []GetRevisionAttributionJSON200ResponseDirectDependenciesInner and assigns it to the DirectDependencies field.
func (o *GetRevisionAttributionJSON200Response) SetDirectDependencies(v []GetRevisionAttributionJSON200ResponseDirectDependenciesInner) {
	o.DirectDependencies = v
}

// GetDeepDependencies returns the DeepDependencies field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200Response) GetDeepDependencies() []GetRevisionAttributionJSON200ResponseDirectDependenciesInner {
	if o == nil || IsNil(o.DeepDependencies) {
		var ret []GetRevisionAttributionJSON200ResponseDirectDependenciesInner
		return ret
	}
	return o.DeepDependencies
}

// GetDeepDependenciesOk returns a tuple with the DeepDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200Response) GetDeepDependenciesOk() ([]GetRevisionAttributionJSON200ResponseDirectDependenciesInner, bool) {
	if o == nil || IsNil(o.DeepDependencies) {
		return nil, false
	}
	return o.DeepDependencies, true
}

// HasDeepDependencies returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200Response) HasDeepDependencies() bool {
	if o != nil && !IsNil(o.DeepDependencies) {
		return true
	}

	return false
}

// SetDeepDependencies gets a reference to the given []GetRevisionAttributionJSON200ResponseDirectDependenciesInner and assigns it to the DeepDependencies field.
func (o *GetRevisionAttributionJSON200Response) SetDeepDependencies(v []GetRevisionAttributionJSON200ResponseDirectDependenciesInner) {
	o.DeepDependencies = v
}

// GetLicenses returns the Licenses field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200Response) GetLicenses() map[string]interface{} {
	if o == nil || IsNil(o.Licenses) {
		var ret map[string]interface{}
		return ret
	}
	return o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200Response) GetLicensesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Licenses) {
		return map[string]interface{}{}, false
	}
	return o.Licenses, true
}

// HasLicenses returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200Response) HasLicenses() bool {
	if o != nil && !IsNil(o.Licenses) {
		return true
	}

	return false
}

// SetLicenses gets a reference to the given map[string]interface{} and assigns it to the Licenses field.
func (o *GetRevisionAttributionJSON200Response) SetLicenses(v map[string]interface{}) {
	o.Licenses = v
}

// GetCopyrightsByLicense returns the CopyrightsByLicense field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200Response) GetCopyrightsByLicense() map[string]interface{} {
	if o == nil || IsNil(o.CopyrightsByLicense) {
		var ret map[string]interface{}
		return ret
	}
	return o.CopyrightsByLicense
}

// GetCopyrightsByLicenseOk returns a tuple with the CopyrightsByLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200Response) GetCopyrightsByLicenseOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CopyrightsByLicense) {
		return map[string]interface{}{}, false
	}
	return o.CopyrightsByLicense, true
}

// HasCopyrightsByLicense returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200Response) HasCopyrightsByLicense() bool {
	if o != nil && !IsNil(o.CopyrightsByLicense) {
		return true
	}

	return false
}

// SetCopyrightsByLicense gets a reference to the given map[string]interface{} and assigns it to the CopyrightsByLicense field.
func (o *GetRevisionAttributionJSON200Response) SetCopyrightsByLicense(v map[string]interface{}) {
	o.CopyrightsByLicense = v
}

// GetNoticeFiles returns the NoticeFiles field value if set, zero value otherwise.
func (o *GetRevisionAttributionJSON200Response) GetNoticeFiles() []GetRevisionAttributionJSON200ResponseDirectDependenciesInnerNoticeFilesInner {
	if o == nil || IsNil(o.NoticeFiles) {
		var ret []GetRevisionAttributionJSON200ResponseDirectDependenciesInnerNoticeFilesInner
		return ret
	}
	return o.NoticeFiles
}

// GetNoticeFilesOk returns a tuple with the NoticeFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRevisionAttributionJSON200Response) GetNoticeFilesOk() ([]GetRevisionAttributionJSON200ResponseDirectDependenciesInnerNoticeFilesInner, bool) {
	if o == nil || IsNil(o.NoticeFiles) {
		return nil, false
	}
	return o.NoticeFiles, true
}

// HasNoticeFiles returns a boolean if a field has been set.
func (o *GetRevisionAttributionJSON200Response) HasNoticeFiles() bool {
	if o != nil && !IsNil(o.NoticeFiles) {
		return true
	}

	return false
}

// SetNoticeFiles gets a reference to the given []GetRevisionAttributionJSON200ResponseDirectDependenciesInnerNoticeFilesInner and assigns it to the NoticeFiles field.
func (o *GetRevisionAttributionJSON200Response) SetNoticeFiles(v []GetRevisionAttributionJSON200ResponseDirectDependenciesInnerNoticeFilesInner) {
	o.NoticeFiles = v
}

func (o GetRevisionAttributionJSON200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRevisionAttributionJSON200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.DirectDependencies) {
		toSerialize["directDependencies"] = o.DirectDependencies
	}
	if !IsNil(o.DeepDependencies) {
		toSerialize["deepDependencies"] = o.DeepDependencies
	}
	if !IsNil(o.Licenses) {
		toSerialize["licenses"] = o.Licenses
	}
	if !IsNil(o.CopyrightsByLicense) {
		toSerialize["copyrightsByLicense"] = o.CopyrightsByLicense
	}
	if !IsNil(o.NoticeFiles) {
		toSerialize["noticeFiles"] = o.NoticeFiles
	}
	return toSerialize, nil
}

type NullableGetRevisionAttributionJSON200Response struct {
	value *GetRevisionAttributionJSON200Response
	isSet bool
}

func (v NullableGetRevisionAttributionJSON200Response) Get() *GetRevisionAttributionJSON200Response {
	return v.value
}

func (v *NullableGetRevisionAttributionJSON200Response) Set(val *GetRevisionAttributionJSON200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRevisionAttributionJSON200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRevisionAttributionJSON200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRevisionAttributionJSON200Response(val *GetRevisionAttributionJSON200Response) *NullableGetRevisionAttributionJSON200Response {
	return &NullableGetRevisionAttributionJSON200Response{value: val, isSet: true}
}

func (v NullableGetRevisionAttributionJSON200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRevisionAttributionJSON200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


