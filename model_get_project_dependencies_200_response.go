/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetProjectDependencies200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectDependencies200Response{}

// GetProjectDependencies200Response struct for GetProjectDependencies200Response
type GetProjectDependencies200Response struct {
	Dependencies []GetProjectDependencies200ResponseDependenciesInner `json:"dependencies,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// NewGetProjectDependencies200Response instantiates a new GetProjectDependencies200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectDependencies200Response() *GetProjectDependencies200Response {
	this := GetProjectDependencies200Response{}
	return &this
}

// NewGetProjectDependencies200ResponseWithDefaults instantiates a new GetProjectDependencies200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectDependencies200ResponseWithDefaults() *GetProjectDependencies200Response {
	this := GetProjectDependencies200Response{}
	return &this
}

// GetDependencies returns the Dependencies field value if set, zero value otherwise.
func (o *GetProjectDependencies200Response) GetDependencies() []GetProjectDependencies200ResponseDependenciesInner {
	if o == nil || IsNil(o.Dependencies) {
		var ret []GetProjectDependencies200ResponseDependenciesInner
		return ret
	}
	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectDependencies200Response) GetDependenciesOk() ([]GetProjectDependencies200ResponseDependenciesInner, bool) {
	if o == nil || IsNil(o.Dependencies) {
		return nil, false
	}
	return o.Dependencies, true
}

// HasDependencies returns a boolean if a field has been set.
func (o *GetProjectDependencies200Response) HasDependencies() bool {
	if o != nil && !IsNil(o.Dependencies) {
		return true
	}

	return false
}

// SetDependencies gets a reference to the given []GetProjectDependencies200ResponseDependenciesInner and assigns it to the Dependencies field.
func (o *GetProjectDependencies200Response) SetDependencies(v []GetProjectDependencies200ResponseDependenciesInner) {
	o.Dependencies = v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GetProjectDependencies200Response) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectDependencies200Response) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GetProjectDependencies200Response) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GetProjectDependencies200Response) SetCount(v int32) {
	o.Count = &v
}

func (o GetProjectDependencies200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjectDependencies200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dependencies) {
		toSerialize["dependencies"] = o.Dependencies
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableGetProjectDependencies200Response struct {
	value *GetProjectDependencies200Response
	isSet bool
}

func (v NullableGetProjectDependencies200Response) Get() *GetProjectDependencies200Response {
	return v.value
}

func (v *NullableGetProjectDependencies200Response) Set(val *GetProjectDependencies200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectDependencies200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectDependencies200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectDependencies200Response(val *GetProjectDependencies200Response) *NullableGetProjectDependencies200Response {
	return &NullableGetProjectDependencies200Response{value: val, isSet: true}
}

func (v NullableGetProjectDependencies200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectDependencies200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


