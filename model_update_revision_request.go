/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the UpdateRevisionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRevisionRequest{}

// UpdateRevisionRequest struct for UpdateRevisionRequest
type UpdateRevisionRequest struct {
	// New link for Revision
	Link *string `json:"link,omitempty"`
	// New url for Revision
	Url *string `json:"url,omitempty"`
	// New author for Revision
	Author *string `json:"author,omitempty"`
}

// NewUpdateRevisionRequest instantiates a new UpdateRevisionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRevisionRequest() *UpdateRevisionRequest {
	this := UpdateRevisionRequest{}
	return &this
}

// NewUpdateRevisionRequestWithDefaults instantiates a new UpdateRevisionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRevisionRequestWithDefaults() *UpdateRevisionRequest {
	this := UpdateRevisionRequest{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *UpdateRevisionRequest) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRevisionRequest) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *UpdateRevisionRequest) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *UpdateRevisionRequest) SetLink(v string) {
	o.Link = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateRevisionRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRevisionRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UpdateRevisionRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateRevisionRequest) SetUrl(v string) {
	o.Url = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *UpdateRevisionRequest) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRevisionRequest) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *UpdateRevisionRequest) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *UpdateRevisionRequest) SetAuthor(v string) {
	o.Author = &v
}

func (o UpdateRevisionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRevisionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	return toSerialize, nil
}

type NullableUpdateRevisionRequest struct {
	value *UpdateRevisionRequest
	isSet bool
}

func (v NullableUpdateRevisionRequest) Get() *UpdateRevisionRequest {
	return v.value
}

func (v *NullableUpdateRevisionRequest) Set(val *UpdateRevisionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRevisionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRevisionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRevisionRequest(val *UpdateRevisionRequest) *NullableUpdateRevisionRequest {
	return &NullableUpdateRevisionRequest{value: val, isSet: true}
}

func (v NullableUpdateRevisionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRevisionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


