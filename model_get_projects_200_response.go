/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetProjects200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjects200Response{}

// GetProjects200Response struct for GetProjects200Response
type GetProjects200Response struct {
	Total *int32 `json:"total,omitempty"`
	Projects []interface{} `json:"projects,omitempty"`
}

// NewGetProjects200Response instantiates a new GetProjects200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjects200Response() *GetProjects200Response {
	this := GetProjects200Response{}
	return &this
}

// NewGetProjects200ResponseWithDefaults instantiates a new GetProjects200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjects200ResponseWithDefaults() *GetProjects200Response {
	this := GetProjects200Response{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetProjects200Response) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjects200Response) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetProjects200Response) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetProjects200Response) SetTotal(v int32) {
	o.Total = &v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *GetProjects200Response) GetProjects() []interface{} {
	if o == nil || IsNil(o.Projects) {
		var ret []interface{}
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjects200Response) GetProjectsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *GetProjects200Response) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []interface{} and assigns it to the Projects field.
func (o *GetProjects200Response) SetProjects(v []interface{}) {
	o.Projects = v
}

func (o GetProjects200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjects200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	return toSerialize, nil
}

type NullableGetProjects200Response struct {
	value *GetProjects200Response
	isSet bool
}

func (v NullableGetProjects200Response) Get() *GetProjects200Response {
	return v.value
}

func (v *NullableGetProjects200Response) Set(val *GetProjects200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjects200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjects200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjects200Response(val *GetProjects200Response) *NullableGetProjects200Response {
	return &NullableGetProjects200Response{value: val, isSet: true}
}

func (v NullableGetProjects200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjects200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


