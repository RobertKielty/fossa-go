/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1{}

// GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 struct for GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1
type GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 struct {
	OutdatedDependency *int32 `json:"outdated_dependency,omitempty"`
	BlacklistedDependency *int32 `json:"blacklisted_dependency,omitempty"`
}

// NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 instantiates a new GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1() *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 {
	this := GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1{}
	return &this
}

// NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1WithDefaults instantiates a new GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1WithDefaults() *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 {
	this := GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1{}
	return &this
}

// GetOutdatedDependency returns the OutdatedDependency field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) GetOutdatedDependency() int32 {
	if o == nil || IsNil(o.OutdatedDependency) {
		var ret int32
		return ret
	}
	return *o.OutdatedDependency
}

// GetOutdatedDependencyOk returns a tuple with the OutdatedDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) GetOutdatedDependencyOk() (*int32, bool) {
	if o == nil || IsNil(o.OutdatedDependency) {
		return nil, false
	}
	return o.OutdatedDependency, true
}

// HasOutdatedDependency returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) HasOutdatedDependency() bool {
	if o != nil && !IsNil(o.OutdatedDependency) {
		return true
	}

	return false
}

// SetOutdatedDependency gets a reference to the given int32 and assigns it to the OutdatedDependency field.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) SetOutdatedDependency(v int32) {
	o.OutdatedDependency = &v
}

// GetBlacklistedDependency returns the BlacklistedDependency field value if set, zero value otherwise.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) GetBlacklistedDependency() int32 {
	if o == nil || IsNil(o.BlacklistedDependency) {
		var ret int32
		return ret
	}
	return *o.BlacklistedDependency
}

// GetBlacklistedDependencyOk returns a tuple with the BlacklistedDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) GetBlacklistedDependencyOk() (*int32, bool) {
	if o == nil || IsNil(o.BlacklistedDependency) {
		return nil, false
	}
	return o.BlacklistedDependency, true
}

// HasBlacklistedDependency returns a boolean if a field has been set.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) HasBlacklistedDependency() bool {
	if o != nil && !IsNil(o.BlacklistedDependency) {
		return true
	}

	return false
}

// SetBlacklistedDependency gets a reference to the given int32 and assigns it to the BlacklistedDependency field.
func (o *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) SetBlacklistedDependency(v int32) {
	o.BlacklistedDependency = &v
}

func (o GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OutdatedDependency) {
		toSerialize["outdated_dependency"] = o.OutdatedDependency
	}
	if !IsNil(o.BlacklistedDependency) {
		toSerialize["blacklisted_dependency"] = o.BlacklistedDependency
	}
	return toSerialize, nil
}

type NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 struct {
	value *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1
	isSet bool
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) Get() *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 {
	return v.value
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) Set(val *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1(val *GetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1 {
	return &NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1{value: val, isSet: true}
}

func (v NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssuesByRevision200ResponseRevisionsInnerTypeOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


