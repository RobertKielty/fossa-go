/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssues200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssues200Response{}

// GetIssues200Response struct for GetIssues200Response
type GetIssues200Response struct {
	Issues *GetIssues200ResponseIssues `json:"issues,omitempty"`
}

// NewGetIssues200Response instantiates a new GetIssues200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssues200Response() *GetIssues200Response {
	this := GetIssues200Response{}
	return &this
}

// NewGetIssues200ResponseWithDefaults instantiates a new GetIssues200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssues200ResponseWithDefaults() *GetIssues200Response {
	this := GetIssues200Response{}
	return &this
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *GetIssues200Response) GetIssues() GetIssues200ResponseIssues {
	if o == nil || IsNil(o.Issues) {
		var ret GetIssues200ResponseIssues
		return ret
	}
	return *o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssues200Response) GetIssuesOk() (*GetIssues200ResponseIssues, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *GetIssues200Response) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given GetIssues200ResponseIssues and assigns it to the Issues field.
func (o *GetIssues200Response) SetIssues(v GetIssues200ResponseIssues) {
	o.Issues = &v
}

func (o GetIssues200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssues200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	return toSerialize, nil
}

type NullableGetIssues200Response struct {
	value *GetIssues200Response
	isSet bool
}

func (v NullableGetIssues200Response) Get() *GetIssues200Response {
	return v.value
}

func (v *NullableGetIssues200Response) Set(val *GetIssues200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssues200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssues200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssues200Response(val *GetIssues200Response) *NullableGetIssues200Response {
	return &NullableGetIssues200Response{value: val, isSet: true}
}

func (v NullableGetIssues200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssues200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


