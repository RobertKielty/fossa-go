/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetPackageLabels200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPackageLabels200Response{}

// GetPackageLabels200Response struct for GetPackageLabels200Response
type GetPackageLabels200Response struct {
	PackageLabels []GetPackageLabels200ResponsePackageLabelsInner `json:"packageLabels,omitempty"`
}

// NewGetPackageLabels200Response instantiates a new GetPackageLabels200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPackageLabels200Response() *GetPackageLabels200Response {
	this := GetPackageLabels200Response{}
	return &this
}

// NewGetPackageLabels200ResponseWithDefaults instantiates a new GetPackageLabels200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPackageLabels200ResponseWithDefaults() *GetPackageLabels200Response {
	this := GetPackageLabels200Response{}
	return &this
}

// GetPackageLabels returns the PackageLabels field value if set, zero value otherwise.
func (o *GetPackageLabels200Response) GetPackageLabels() []GetPackageLabels200ResponsePackageLabelsInner {
	if o == nil || IsNil(o.PackageLabels) {
		var ret []GetPackageLabels200ResponsePackageLabelsInner
		return ret
	}
	return o.PackageLabels
}

// GetPackageLabelsOk returns a tuple with the PackageLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPackageLabels200Response) GetPackageLabelsOk() ([]GetPackageLabels200ResponsePackageLabelsInner, bool) {
	if o == nil || IsNil(o.PackageLabels) {
		return nil, false
	}
	return o.PackageLabels, true
}

// HasPackageLabels returns a boolean if a field has been set.
func (o *GetPackageLabels200Response) HasPackageLabels() bool {
	if o != nil && !IsNil(o.PackageLabels) {
		return true
	}

	return false
}

// SetPackageLabels gets a reference to the given []GetPackageLabels200ResponsePackageLabelsInner and assigns it to the PackageLabels field.
func (o *GetPackageLabels200Response) SetPackageLabels(v []GetPackageLabels200ResponsePackageLabelsInner) {
	o.PackageLabels = v
}

func (o GetPackageLabels200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPackageLabels200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PackageLabels) {
		toSerialize["packageLabels"] = o.PackageLabels
	}
	return toSerialize, nil
}

type NullableGetPackageLabels200Response struct {
	value *GetPackageLabels200Response
	isSet bool
}

func (v NullableGetPackageLabels200Response) Get() *GetPackageLabels200Response {
	return v.value
}

func (v *NullableGetPackageLabels200Response) Set(val *GetPackageLabels200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPackageLabels200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPackageLabels200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPackageLabels200Response(val *GetPackageLabels200Response) *NullableGetPackageLabels200Response {
	return &NullableGetPackageLabels200Response{value: val, isSet: true}
}

func (v NullableGetPackageLabels200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPackageLabels200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


