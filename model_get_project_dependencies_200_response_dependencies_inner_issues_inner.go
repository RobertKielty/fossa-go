/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetProjectDependencies200ResponseDependenciesInnerIssuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProjectDependencies200ResponseDependenciesInnerIssuesInner{}

// GetProjectDependencies200ResponseDependenciesInnerIssuesInner struct for GetProjectDependencies200ResponseDependenciesInnerIssuesInner
type GetProjectDependencies200ResponseDependenciesInnerIssuesInner struct {
	Id *int32 `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Status *string `json:"status,omitempty"`
	License *string `json:"license,omitempty"`
	CvssScore *float32 `json:"cvssScore,omitempty"`
}

// NewGetProjectDependencies200ResponseDependenciesInnerIssuesInner instantiates a new GetProjectDependencies200ResponseDependenciesInnerIssuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProjectDependencies200ResponseDependenciesInnerIssuesInner() *GetProjectDependencies200ResponseDependenciesInnerIssuesInner {
	this := GetProjectDependencies200ResponseDependenciesInnerIssuesInner{}
	return &this
}

// NewGetProjectDependencies200ResponseDependenciesInnerIssuesInnerWithDefaults instantiates a new GetProjectDependencies200ResponseDependenciesInnerIssuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProjectDependencies200ResponseDependenciesInnerIssuesInnerWithDefaults() *GetProjectDependencies200ResponseDependenciesInnerIssuesInner {
	this := GetProjectDependencies200ResponseDependenciesInnerIssuesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) SetStatus(v string) {
	o.Status = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) SetLicense(v string) {
	o.License = &v
}

// GetCvssScore returns the CvssScore field value if set, zero value otherwise.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetCvssScore() float32 {
	if o == nil || IsNil(o.CvssScore) {
		var ret float32
		return ret
	}
	return *o.CvssScore
}

// GetCvssScoreOk returns a tuple with the CvssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) GetCvssScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.CvssScore) {
		return nil, false
	}
	return o.CvssScore, true
}

// HasCvssScore returns a boolean if a field has been set.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) HasCvssScore() bool {
	if o != nil && !IsNil(o.CvssScore) {
		return true
	}

	return false
}

// SetCvssScore gets a reference to the given float32 and assigns it to the CvssScore field.
func (o *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) SetCvssScore(v float32) {
	o.CvssScore = &v
}

func (o GetProjectDependencies200ResponseDependenciesInnerIssuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProjectDependencies200ResponseDependenciesInnerIssuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if !IsNil(o.CvssScore) {
		toSerialize["cvssScore"] = o.CvssScore
	}
	return toSerialize, nil
}

type NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner struct {
	value *GetProjectDependencies200ResponseDependenciesInnerIssuesInner
	isSet bool
}

func (v NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner) Get() *GetProjectDependencies200ResponseDependenciesInnerIssuesInner {
	return v.value
}

func (v *NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner) Set(val *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner(val *GetProjectDependencies200ResponseDependenciesInnerIssuesInner) *NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner {
	return &NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner{value: val, isSet: true}
}

func (v NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProjectDependencies200ResponseDependenciesInnerIssuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


