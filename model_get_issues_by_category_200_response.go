/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssuesByCategory200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssuesByCategory200Response{}

// GetIssuesByCategory200Response struct for GetIssuesByCategory200Response
type GetIssuesByCategory200Response struct {
	Licensing *int32 `json:"licensing,omitempty"`
	Quality *int32 `json:"quality,omitempty"`
	Vulnerability *int32 `json:"vulnerability,omitempty"`
}

// NewGetIssuesByCategory200Response instantiates a new GetIssuesByCategory200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssuesByCategory200Response() *GetIssuesByCategory200Response {
	this := GetIssuesByCategory200Response{}
	return &this
}

// NewGetIssuesByCategory200ResponseWithDefaults instantiates a new GetIssuesByCategory200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssuesByCategory200ResponseWithDefaults() *GetIssuesByCategory200Response {
	this := GetIssuesByCategory200Response{}
	return &this
}

// GetLicensing returns the Licensing field value if set, zero value otherwise.
func (o *GetIssuesByCategory200Response) GetLicensing() int32 {
	if o == nil || IsNil(o.Licensing) {
		var ret int32
		return ret
	}
	return *o.Licensing
}

// GetLicensingOk returns a tuple with the Licensing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByCategory200Response) GetLicensingOk() (*int32, bool) {
	if o == nil || IsNil(o.Licensing) {
		return nil, false
	}
	return o.Licensing, true
}

// HasLicensing returns a boolean if a field has been set.
func (o *GetIssuesByCategory200Response) HasLicensing() bool {
	if o != nil && !IsNil(o.Licensing) {
		return true
	}

	return false
}

// SetLicensing gets a reference to the given int32 and assigns it to the Licensing field.
func (o *GetIssuesByCategory200Response) SetLicensing(v int32) {
	o.Licensing = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *GetIssuesByCategory200Response) GetQuality() int32 {
	if o == nil || IsNil(o.Quality) {
		var ret int32
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByCategory200Response) GetQualityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *GetIssuesByCategory200Response) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given int32 and assigns it to the Quality field.
func (o *GetIssuesByCategory200Response) SetQuality(v int32) {
	o.Quality = &v
}

// GetVulnerability returns the Vulnerability field value if set, zero value otherwise.
func (o *GetIssuesByCategory200Response) GetVulnerability() int32 {
	if o == nil || IsNil(o.Vulnerability) {
		var ret int32
		return ret
	}
	return *o.Vulnerability
}

// GetVulnerabilityOk returns a tuple with the Vulnerability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssuesByCategory200Response) GetVulnerabilityOk() (*int32, bool) {
	if o == nil || IsNil(o.Vulnerability) {
		return nil, false
	}
	return o.Vulnerability, true
}

// HasVulnerability returns a boolean if a field has been set.
func (o *GetIssuesByCategory200Response) HasVulnerability() bool {
	if o != nil && !IsNil(o.Vulnerability) {
		return true
	}

	return false
}

// SetVulnerability gets a reference to the given int32 and assigns it to the Vulnerability field.
func (o *GetIssuesByCategory200Response) SetVulnerability(v int32) {
	o.Vulnerability = &v
}

func (o GetIssuesByCategory200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssuesByCategory200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Licensing) {
		toSerialize["licensing"] = o.Licensing
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if !IsNil(o.Vulnerability) {
		toSerialize["vulnerability"] = o.Vulnerability
	}
	return toSerialize, nil
}

type NullableGetIssuesByCategory200Response struct {
	value *GetIssuesByCategory200Response
	isSet bool
}

func (v NullableGetIssuesByCategory200Response) Get() *GetIssuesByCategory200Response {
	return v.value
}

func (v *NullableGetIssuesByCategory200Response) Set(val *GetIssuesByCategory200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssuesByCategory200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssuesByCategory200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssuesByCategory200Response(val *GetIssuesByCategory200Response) *NullableGetIssuesByCategory200Response {
	return &NullableGetIssuesByCategory200Response{value: val, isSet: true}
}

func (v NullableGetIssuesByCategory200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssuesByCategory200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


