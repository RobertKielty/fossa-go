/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetAllUsers200ResponseInnerTokensInnerMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllUsers200ResponseInnerTokensInnerMeta{}

// GetAllUsers200ResponseInnerTokensInnerMeta struct for GetAllUsers200ResponseInnerTokensInnerMeta
type GetAllUsers200ResponseInnerTokensInnerMeta struct {
	// Whether the token is push only
	PushOnly *bool `json:"pushOnly,omitempty"`
}

// NewGetAllUsers200ResponseInnerTokensInnerMeta instantiates a new GetAllUsers200ResponseInnerTokensInnerMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllUsers200ResponseInnerTokensInnerMeta() *GetAllUsers200ResponseInnerTokensInnerMeta {
	this := GetAllUsers200ResponseInnerTokensInnerMeta{}
	return &this
}

// NewGetAllUsers200ResponseInnerTokensInnerMetaWithDefaults instantiates a new GetAllUsers200ResponseInnerTokensInnerMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllUsers200ResponseInnerTokensInnerMetaWithDefaults() *GetAllUsers200ResponseInnerTokensInnerMeta {
	this := GetAllUsers200ResponseInnerTokensInnerMeta{}
	return &this
}

// GetPushOnly returns the PushOnly field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerTokensInnerMeta) GetPushOnly() bool {
	if o == nil || IsNil(o.PushOnly) {
		var ret bool
		return ret
	}
	return *o.PushOnly
}

// GetPushOnlyOk returns a tuple with the PushOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerTokensInnerMeta) GetPushOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.PushOnly) {
		return nil, false
	}
	return o.PushOnly, true
}

// HasPushOnly returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerTokensInnerMeta) HasPushOnly() bool {
	if o != nil && !IsNil(o.PushOnly) {
		return true
	}

	return false
}

// SetPushOnly gets a reference to the given bool and assigns it to the PushOnly field.
func (o *GetAllUsers200ResponseInnerTokensInnerMeta) SetPushOnly(v bool) {
	o.PushOnly = &v
}

func (o GetAllUsers200ResponseInnerTokensInnerMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllUsers200ResponseInnerTokensInnerMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PushOnly) {
		toSerialize["pushOnly"] = o.PushOnly
	}
	return toSerialize, nil
}

type NullableGetAllUsers200ResponseInnerTokensInnerMeta struct {
	value *GetAllUsers200ResponseInnerTokensInnerMeta
	isSet bool
}

func (v NullableGetAllUsers200ResponseInnerTokensInnerMeta) Get() *GetAllUsers200ResponseInnerTokensInnerMeta {
	return v.value
}

func (v *NullableGetAllUsers200ResponseInnerTokensInnerMeta) Set(val *GetAllUsers200ResponseInnerTokensInnerMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllUsers200ResponseInnerTokensInnerMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllUsers200ResponseInnerTokensInnerMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllUsers200ResponseInnerTokensInnerMeta(val *GetAllUsers200ResponseInnerTokensInnerMeta) *NullableGetAllUsers200ResponseInnerTokensInnerMeta {
	return &NullableGetAllUsers200ResponseInnerTokensInnerMeta{value: val, isSet: true}
}

func (v NullableGetAllUsers200ResponseInnerTokensInnerMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllUsers200ResponseInnerTokensInnerMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


