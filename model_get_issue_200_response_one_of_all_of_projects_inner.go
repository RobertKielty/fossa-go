/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
	"time"
)

// checks if the GetIssue200ResponseOneOfAllOfProjectsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssue200ResponseOneOfAllOfProjectsInner{}

// GetIssue200ResponseOneOfAllOfProjectsInner struct for GetIssue200ResponseOneOfAllOfProjectsInner
type GetIssue200ResponseOneOfAllOfProjectsInner struct {
	Id *string `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	Depth *int32 `json:"depth,omitempty"`
	Title *string `json:"title,omitempty"`
	ScannedAt *time.Time `json:"scannedAt,omitempty"`
	AnalyzedAt *time.Time `json:"analyzedAt,omitempty"`
	// A link to the project the issue is from.
	Url *string `json:"url,omitempty"`
	// Optional array of direct dependency origin paths, only present when includeDirectDependencyOriginPaths=true is supplied as a URL param. 
	OriginPaths []string `json:"originPaths,omitempty"`
	// The date when the issue was first found for this project or release group.
	FirstFoundAt *time.Time `json:"firstFoundAt,omitempty"`
	// The default branch of the project.
	DefaultBranch *string `json:"defaultBranch,omitempty"`
	// Whether this issue is present in the most recent scan of the project. If false, the issue may be considered remediated.
	Latest *bool `json:"latest,omitempty"`
	// The ID of the revision that is affected by this issue.
	RevisionId *string `json:"revisionId,omitempty"`
	// The ID of the revision scan associated with this issue.
	RevisionScanId *float32 `json:"revisionScanId,omitempty"`
}

// NewGetIssue200ResponseOneOfAllOfProjectsInner instantiates a new GetIssue200ResponseOneOfAllOfProjectsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssue200ResponseOneOfAllOfProjectsInner() *GetIssue200ResponseOneOfAllOfProjectsInner {
	this := GetIssue200ResponseOneOfAllOfProjectsInner{}
	return &this
}

// NewGetIssue200ResponseOneOfAllOfProjectsInnerWithDefaults instantiates a new GetIssue200ResponseOneOfAllOfProjectsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssue200ResponseOneOfAllOfProjectsInnerWithDefaults() *GetIssue200ResponseOneOfAllOfProjectsInner {
	this := GetIssue200ResponseOneOfAllOfProjectsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetStatus(v string) {
	o.Status = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetDepth() int32 {
	if o == nil || IsNil(o.Depth) {
		var ret int32
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetDepthOk() (*int32, bool) {
	if o == nil || IsNil(o.Depth) {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasDepth() bool {
	if o != nil && !IsNil(o.Depth) {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int32 and assigns it to the Depth field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetDepth(v int32) {
	o.Depth = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetTitle(v string) {
	o.Title = &v
}

// GetScannedAt returns the ScannedAt field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetScannedAt() time.Time {
	if o == nil || IsNil(o.ScannedAt) {
		var ret time.Time
		return ret
	}
	return *o.ScannedAt
}

// GetScannedAtOk returns a tuple with the ScannedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetScannedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ScannedAt) {
		return nil, false
	}
	return o.ScannedAt, true
}

// HasScannedAt returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasScannedAt() bool {
	if o != nil && !IsNil(o.ScannedAt) {
		return true
	}

	return false
}

// SetScannedAt gets a reference to the given time.Time and assigns it to the ScannedAt field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetScannedAt(v time.Time) {
	o.ScannedAt = &v
}

// GetAnalyzedAt returns the AnalyzedAt field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetAnalyzedAt() time.Time {
	if o == nil || IsNil(o.AnalyzedAt) {
		var ret time.Time
		return ret
	}
	return *o.AnalyzedAt
}

// GetAnalyzedAtOk returns a tuple with the AnalyzedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetAnalyzedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AnalyzedAt) {
		return nil, false
	}
	return o.AnalyzedAt, true
}

// HasAnalyzedAt returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasAnalyzedAt() bool {
	if o != nil && !IsNil(o.AnalyzedAt) {
		return true
	}

	return false
}

// SetAnalyzedAt gets a reference to the given time.Time and assigns it to the AnalyzedAt field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetAnalyzedAt(v time.Time) {
	o.AnalyzedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetUrl(v string) {
	o.Url = &v
}

// GetOriginPaths returns the OriginPaths field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetOriginPaths() []string {
	if o == nil || IsNil(o.OriginPaths) {
		var ret []string
		return ret
	}
	return o.OriginPaths
}

// GetOriginPathsOk returns a tuple with the OriginPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetOriginPathsOk() ([]string, bool) {
	if o == nil || IsNil(o.OriginPaths) {
		return nil, false
	}
	return o.OriginPaths, true
}

// HasOriginPaths returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasOriginPaths() bool {
	if o != nil && !IsNil(o.OriginPaths) {
		return true
	}

	return false
}

// SetOriginPaths gets a reference to the given []string and assigns it to the OriginPaths field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetOriginPaths(v []string) {
	o.OriginPaths = v
}

// GetFirstFoundAt returns the FirstFoundAt field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetFirstFoundAt() time.Time {
	if o == nil || IsNil(o.FirstFoundAt) {
		var ret time.Time
		return ret
	}
	return *o.FirstFoundAt
}

// GetFirstFoundAtOk returns a tuple with the FirstFoundAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetFirstFoundAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FirstFoundAt) {
		return nil, false
	}
	return o.FirstFoundAt, true
}

// HasFirstFoundAt returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasFirstFoundAt() bool {
	if o != nil && !IsNil(o.FirstFoundAt) {
		return true
	}

	return false
}

// SetFirstFoundAt gets a reference to the given time.Time and assigns it to the FirstFoundAt field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetFirstFoundAt(v time.Time) {
	o.FirstFoundAt = &v
}

// GetDefaultBranch returns the DefaultBranch field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetDefaultBranch() string {
	if o == nil || IsNil(o.DefaultBranch) {
		var ret string
		return ret
	}
	return *o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetDefaultBranchOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultBranch) {
		return nil, false
	}
	return o.DefaultBranch, true
}

// HasDefaultBranch returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasDefaultBranch() bool {
	if o != nil && !IsNil(o.DefaultBranch) {
		return true
	}

	return false
}

// SetDefaultBranch gets a reference to the given string and assigns it to the DefaultBranch field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetDefaultBranch(v string) {
	o.DefaultBranch = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetLatest() bool {
	if o == nil || IsNil(o.Latest) {
		var ret bool
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetLatestOk() (*bool, bool) {
	if o == nil || IsNil(o.Latest) {
		return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasLatest() bool {
	if o != nil && !IsNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given bool and assigns it to the Latest field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetLatest(v bool) {
	o.Latest = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetRevisionId() string {
	if o == nil || IsNil(o.RevisionId) {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetRevisionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionId) {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasRevisionId() bool {
	if o != nil && !IsNil(o.RevisionId) {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetRevisionScanId returns the RevisionScanId field value if set, zero value otherwise.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetRevisionScanId() float32 {
	if o == nil || IsNil(o.RevisionScanId) {
		var ret float32
		return ret
	}
	return *o.RevisionScanId
}

// GetRevisionScanIdOk returns a tuple with the RevisionScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) GetRevisionScanIdOk() (*float32, bool) {
	if o == nil || IsNil(o.RevisionScanId) {
		return nil, false
	}
	return o.RevisionScanId, true
}

// HasRevisionScanId returns a boolean if a field has been set.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) HasRevisionScanId() bool {
	if o != nil && !IsNil(o.RevisionScanId) {
		return true
	}

	return false
}

// SetRevisionScanId gets a reference to the given float32 and assigns it to the RevisionScanId field.
func (o *GetIssue200ResponseOneOfAllOfProjectsInner) SetRevisionScanId(v float32) {
	o.RevisionScanId = &v
}

func (o GetIssue200ResponseOneOfAllOfProjectsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssue200ResponseOneOfAllOfProjectsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Depth) {
		toSerialize["depth"] = o.Depth
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ScannedAt) {
		toSerialize["scannedAt"] = o.ScannedAt
	}
	if !IsNil(o.AnalyzedAt) {
		toSerialize["analyzedAt"] = o.AnalyzedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.OriginPaths) {
		toSerialize["originPaths"] = o.OriginPaths
	}
	if !IsNil(o.FirstFoundAt) {
		toSerialize["firstFoundAt"] = o.FirstFoundAt
	}
	if !IsNil(o.DefaultBranch) {
		toSerialize["defaultBranch"] = o.DefaultBranch
	}
	if !IsNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	if !IsNil(o.RevisionId) {
		toSerialize["revisionId"] = o.RevisionId
	}
	if !IsNil(o.RevisionScanId) {
		toSerialize["revisionScanId"] = o.RevisionScanId
	}
	return toSerialize, nil
}

type NullableGetIssue200ResponseOneOfAllOfProjectsInner struct {
	value *GetIssue200ResponseOneOfAllOfProjectsInner
	isSet bool
}

func (v NullableGetIssue200ResponseOneOfAllOfProjectsInner) Get() *GetIssue200ResponseOneOfAllOfProjectsInner {
	return v.value
}

func (v *NullableGetIssue200ResponseOneOfAllOfProjectsInner) Set(val *GetIssue200ResponseOneOfAllOfProjectsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssue200ResponseOneOfAllOfProjectsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssue200ResponseOneOfAllOfProjectsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssue200ResponseOneOfAllOfProjectsInner(val *GetIssue200ResponseOneOfAllOfProjectsInner) *NullableGetIssue200ResponseOneOfAllOfProjectsInner {
	return &NullableGetIssue200ResponseOneOfAllOfProjectsInner{value: val, isSet: true}
}

func (v NullableGetIssue200ResponseOneOfAllOfProjectsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssue200ResponseOneOfAllOfProjectsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


