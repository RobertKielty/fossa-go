/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the CreateSavedFilterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSavedFilterRequest{}

// CreateSavedFilterRequest struct for CreateSavedFilterRequest
type CreateSavedFilterRequest struct {
	Category *string `json:"category,omitempty"`
	Name *string `json:"name,omitempty"`
	Filter *CreateSavedFilterRequestFilter `json:"filter,omitempty"`
	// Can be any of the sort options related to issue or revision.
	Sort *string `json:"sort,omitempty"`
	Group *string `json:"group,omitempty"`
}

// NewCreateSavedFilterRequest instantiates a new CreateSavedFilterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSavedFilterRequest() *CreateSavedFilterRequest {
	this := CreateSavedFilterRequest{}
	return &this
}

// NewCreateSavedFilterRequestWithDefaults instantiates a new CreateSavedFilterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSavedFilterRequestWithDefaults() *CreateSavedFilterRequest {
	this := CreateSavedFilterRequest{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CreateSavedFilterRequest) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSavedFilterRequest) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CreateSavedFilterRequest) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CreateSavedFilterRequest) SetCategory(v string) {
	o.Category = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSavedFilterRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSavedFilterRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSavedFilterRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSavedFilterRequest) SetName(v string) {
	o.Name = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *CreateSavedFilterRequest) GetFilter() CreateSavedFilterRequestFilter {
	if o == nil || IsNil(o.Filter) {
		var ret CreateSavedFilterRequestFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSavedFilterRequest) GetFilterOk() (*CreateSavedFilterRequestFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *CreateSavedFilterRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given CreateSavedFilterRequestFilter and assigns it to the Filter field.
func (o *CreateSavedFilterRequest) SetFilter(v CreateSavedFilterRequestFilter) {
	o.Filter = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *CreateSavedFilterRequest) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSavedFilterRequest) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *CreateSavedFilterRequest) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *CreateSavedFilterRequest) SetSort(v string) {
	o.Sort = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *CreateSavedFilterRequest) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSavedFilterRequest) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *CreateSavedFilterRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *CreateSavedFilterRequest) SetGroup(v string) {
	o.Group = &v
}

func (o CreateSavedFilterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSavedFilterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return toSerialize, nil
}

type NullableCreateSavedFilterRequest struct {
	value *CreateSavedFilterRequest
	isSet bool
}

func (v NullableCreateSavedFilterRequest) Get() *CreateSavedFilterRequest {
	return v.value
}

func (v *NullableCreateSavedFilterRequest) Set(val *CreateSavedFilterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSavedFilterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSavedFilterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSavedFilterRequest(val *CreateSavedFilterRequest) *NullableCreateSavedFilterRequest {
	return &NullableCreateSavedFilterRequest{value: val, isSet: true}
}

func (v NullableCreateSavedFilterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSavedFilterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


