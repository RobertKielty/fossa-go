/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetIssueCounts200ResponseLicensing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIssueCounts200ResponseLicensing{}

// GetIssueCounts200ResponseLicensing struct for GetIssueCounts200ResponseLicensing
type GetIssueCounts200ResponseLicensing struct {
	Type *GetIssueCounts200ResponseLicensingType `json:"type,omitempty"`
	Status *GetIssueCounts200ResponseLicensingStatus `json:"status,omitempty"`
}

// NewGetIssueCounts200ResponseLicensing instantiates a new GetIssueCounts200ResponseLicensing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIssueCounts200ResponseLicensing() *GetIssueCounts200ResponseLicensing {
	this := GetIssueCounts200ResponseLicensing{}
	return &this
}

// NewGetIssueCounts200ResponseLicensingWithDefaults instantiates a new GetIssueCounts200ResponseLicensing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIssueCounts200ResponseLicensingWithDefaults() *GetIssueCounts200ResponseLicensing {
	this := GetIssueCounts200ResponseLicensing{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseLicensing) GetType() GetIssueCounts200ResponseLicensingType {
	if o == nil || IsNil(o.Type) {
		var ret GetIssueCounts200ResponseLicensingType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseLicensing) GetTypeOk() (*GetIssueCounts200ResponseLicensingType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseLicensing) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GetIssueCounts200ResponseLicensingType and assigns it to the Type field.
func (o *GetIssueCounts200ResponseLicensing) SetType(v GetIssueCounts200ResponseLicensingType) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetIssueCounts200ResponseLicensing) GetStatus() GetIssueCounts200ResponseLicensingStatus {
	if o == nil || IsNil(o.Status) {
		var ret GetIssueCounts200ResponseLicensingStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIssueCounts200ResponseLicensing) GetStatusOk() (*GetIssueCounts200ResponseLicensingStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetIssueCounts200ResponseLicensing) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given GetIssueCounts200ResponseLicensingStatus and assigns it to the Status field.
func (o *GetIssueCounts200ResponseLicensing) SetStatus(v GetIssueCounts200ResponseLicensingStatus) {
	o.Status = &v
}

func (o GetIssueCounts200ResponseLicensing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIssueCounts200ResponseLicensing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableGetIssueCounts200ResponseLicensing struct {
	value *GetIssueCounts200ResponseLicensing
	isSet bool
}

func (v NullableGetIssueCounts200ResponseLicensing) Get() *GetIssueCounts200ResponseLicensing {
	return v.value
}

func (v *NullableGetIssueCounts200ResponseLicensing) Set(val *GetIssueCounts200ResponseLicensing) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIssueCounts200ResponseLicensing) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIssueCounts200ResponseLicensing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIssueCounts200ResponseLicensing(val *GetIssueCounts200ResponseLicensing) *NullableGetIssueCounts200ResponseLicensing {
	return &NullableGetIssueCounts200ResponseLicensing{value: val, isSet: true}
}

func (v NullableGetIssueCounts200ResponseLicensing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIssueCounts200ResponseLicensing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


