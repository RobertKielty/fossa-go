/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the BuildRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildRequest{}

// BuildRequest struct for BuildRequest
type BuildRequest struct {
	Archives *BuildRequestArchives `json:"archives,omitempty"`
	SelectedTeams []BuildRequestSelectedTeamsInner `json:"selectedTeams,omitempty"`
	// Force a rebuild no matter what
	ForceRebuild *bool `json:"forceRebuild,omitempty"`
}

// NewBuildRequest instantiates a new BuildRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildRequest() *BuildRequest {
	this := BuildRequest{}
	return &this
}

// NewBuildRequestWithDefaults instantiates a new BuildRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildRequestWithDefaults() *BuildRequest {
	this := BuildRequest{}
	return &this
}

// GetArchives returns the Archives field value if set, zero value otherwise.
func (o *BuildRequest) GetArchives() BuildRequestArchives {
	if o == nil || IsNil(o.Archives) {
		var ret BuildRequestArchives
		return ret
	}
	return *o.Archives
}

// GetArchivesOk returns a tuple with the Archives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildRequest) GetArchivesOk() (*BuildRequestArchives, bool) {
	if o == nil || IsNil(o.Archives) {
		return nil, false
	}
	return o.Archives, true
}

// HasArchives returns a boolean if a field has been set.
func (o *BuildRequest) HasArchives() bool {
	if o != nil && !IsNil(o.Archives) {
		return true
	}

	return false
}

// SetArchives gets a reference to the given BuildRequestArchives and assigns it to the Archives field.
func (o *BuildRequest) SetArchives(v BuildRequestArchives) {
	o.Archives = &v
}

// GetSelectedTeams returns the SelectedTeams field value if set, zero value otherwise.
func (o *BuildRequest) GetSelectedTeams() []BuildRequestSelectedTeamsInner {
	if o == nil || IsNil(o.SelectedTeams) {
		var ret []BuildRequestSelectedTeamsInner
		return ret
	}
	return o.SelectedTeams
}

// GetSelectedTeamsOk returns a tuple with the SelectedTeams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildRequest) GetSelectedTeamsOk() ([]BuildRequestSelectedTeamsInner, bool) {
	if o == nil || IsNil(o.SelectedTeams) {
		return nil, false
	}
	return o.SelectedTeams, true
}

// HasSelectedTeams returns a boolean if a field has been set.
func (o *BuildRequest) HasSelectedTeams() bool {
	if o != nil && !IsNil(o.SelectedTeams) {
		return true
	}

	return false
}

// SetSelectedTeams gets a reference to the given []BuildRequestSelectedTeamsInner and assigns it to the SelectedTeams field.
func (o *BuildRequest) SetSelectedTeams(v []BuildRequestSelectedTeamsInner) {
	o.SelectedTeams = v
}

// GetForceRebuild returns the ForceRebuild field value if set, zero value otherwise.
func (o *BuildRequest) GetForceRebuild() bool {
	if o == nil || IsNil(o.ForceRebuild) {
		var ret bool
		return ret
	}
	return *o.ForceRebuild
}

// GetForceRebuildOk returns a tuple with the ForceRebuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildRequest) GetForceRebuildOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceRebuild) {
		return nil, false
	}
	return o.ForceRebuild, true
}

// HasForceRebuild returns a boolean if a field has been set.
func (o *BuildRequest) HasForceRebuild() bool {
	if o != nil && !IsNil(o.ForceRebuild) {
		return true
	}

	return false
}

// SetForceRebuild gets a reference to the given bool and assigns it to the ForceRebuild field.
func (o *BuildRequest) SetForceRebuild(v bool) {
	o.ForceRebuild = &v
}

func (o BuildRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Archives) {
		toSerialize["archives"] = o.Archives
	}
	if !IsNil(o.SelectedTeams) {
		toSerialize["selectedTeams"] = o.SelectedTeams
	}
	if !IsNil(o.ForceRebuild) {
		toSerialize["forceRebuild"] = o.ForceRebuild
	}
	return toSerialize, nil
}

type NullableBuildRequest struct {
	value *BuildRequest
	isSet bool
}

func (v NullableBuildRequest) Get() *BuildRequest {
	return v.value
}

func (v *NullableBuildRequest) Set(val *BuildRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildRequest(val *BuildRequest) *NullableBuildRequest {
	return &NullableBuildRequest{value: val, isSet: true}
}

func (v NullableBuildRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


