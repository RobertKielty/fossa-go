/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetOrganizationLimits200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationLimits200Response{}

// GetOrganizationLimits200Response An object that provides the current usage of a resource, the contractual limit of the resource, and whether or not the organization has an unlimited cap on the resource. 
type GetOrganizationLimits200Response struct {
	// The current usage of the resource.
	Usage *int32 `json:"usage,omitempty"`
	// The contractual limit of the resource.
	Max *int32 `json:"max,omitempty"`
	// Whether or not the organization has an unlimited cap on the resource.
	Unlimited *bool `json:"unlimited,omitempty"`
}

// NewGetOrganizationLimits200Response instantiates a new GetOrganizationLimits200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationLimits200Response() *GetOrganizationLimits200Response {
	this := GetOrganizationLimits200Response{}
	return &this
}

// NewGetOrganizationLimits200ResponseWithDefaults instantiates a new GetOrganizationLimits200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationLimits200ResponseWithDefaults() *GetOrganizationLimits200Response {
	this := GetOrganizationLimits200Response{}
	return &this
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *GetOrganizationLimits200Response) GetUsage() int32 {
	if o == nil || IsNil(o.Usage) {
		var ret int32
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLimits200Response) GetUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *GetOrganizationLimits200Response) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given int32 and assigns it to the Usage field.
func (o *GetOrganizationLimits200Response) SetUsage(v int32) {
	o.Usage = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetOrganizationLimits200Response) GetMax() int32 {
	if o == nil || IsNil(o.Max) {
		var ret int32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLimits200Response) GetMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetOrganizationLimits200Response) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int32 and assigns it to the Max field.
func (o *GetOrganizationLimits200Response) SetMax(v int32) {
	o.Max = &v
}

// GetUnlimited returns the Unlimited field value if set, zero value otherwise.
func (o *GetOrganizationLimits200Response) GetUnlimited() bool {
	if o == nil || IsNil(o.Unlimited) {
		var ret bool
		return ret
	}
	return *o.Unlimited
}

// GetUnlimitedOk returns a tuple with the Unlimited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLimits200Response) GetUnlimitedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unlimited) {
		return nil, false
	}
	return o.Unlimited, true
}

// HasUnlimited returns a boolean if a field has been set.
func (o *GetOrganizationLimits200Response) HasUnlimited() bool {
	if o != nil && !IsNil(o.Unlimited) {
		return true
	}

	return false
}

// SetUnlimited gets a reference to the given bool and assigns it to the Unlimited field.
func (o *GetOrganizationLimits200Response) SetUnlimited(v bool) {
	o.Unlimited = &v
}

func (o GetOrganizationLimits200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationLimits200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Unlimited) {
		toSerialize["unlimited"] = o.Unlimited
	}
	return toSerialize, nil
}

type NullableGetOrganizationLimits200Response struct {
	value *GetOrganizationLimits200Response
	isSet bool
}

func (v NullableGetOrganizationLimits200Response) Get() *GetOrganizationLimits200Response {
	return v.value
}

func (v *NullableGetOrganizationLimits200Response) Set(val *GetOrganizationLimits200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationLimits200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationLimits200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationLimits200Response(val *GetOrganizationLimits200Response) *NullableGetOrganizationLimits200Response {
	return &NullableGetOrganizationLimits200Response{value: val, isSet: true}
}

func (v NullableGetOrganizationLimits200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationLimits200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


