/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the UpdateIssuesRequestOneOf1TicketOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIssuesRequestOneOf1TicketOneOf{}

// UpdateIssuesRequestOneOf1TicketOneOf struct for UpdateIssuesRequestOneOf1TicketOneOf
type UpdateIssuesRequestOneOf1TicketOneOf struct {
	Type *string `json:"type,omitempty"`
	Title *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	UniqueTickets []UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner `json:"uniqueTickets,omitempty"`
	TrackerId *string `json:"trackerId,omitempty"`
	JiraId *string `json:"jiraId,omitempty"`
	IssueType *string `json:"issueType,omitempty"`
	Labels []string `json:"labels,omitempty"`
	CustomFields []UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner `json:"customFields,omitempty"`
	Components []UpdateIssuesRequestOneOf1TicketOneOfComponentsInner `json:"components,omitempty"`
}

// NewUpdateIssuesRequestOneOf1TicketOneOf instantiates a new UpdateIssuesRequestOneOf1TicketOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIssuesRequestOneOf1TicketOneOf() *UpdateIssuesRequestOneOf1TicketOneOf {
	this := UpdateIssuesRequestOneOf1TicketOneOf{}
	return &this
}

// NewUpdateIssuesRequestOneOf1TicketOneOfWithDefaults instantiates a new UpdateIssuesRequestOneOf1TicketOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIssuesRequestOneOf1TicketOneOfWithDefaults() *UpdateIssuesRequestOneOf1TicketOneOf {
	this := UpdateIssuesRequestOneOf1TicketOneOf{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetType(v string) {
	o.Type = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetDescription(v string) {
	o.Description = &v
}

// GetUniqueTickets returns the UniqueTickets field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetUniqueTickets() []UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner {
	if o == nil || IsNil(o.UniqueTickets) {
		var ret []UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner
		return ret
	}
	return o.UniqueTickets
}

// GetUniqueTicketsOk returns a tuple with the UniqueTickets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetUniqueTicketsOk() ([]UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner, bool) {
	if o == nil || IsNil(o.UniqueTickets) {
		return nil, false
	}
	return o.UniqueTickets, true
}

// HasUniqueTickets returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasUniqueTickets() bool {
	if o != nil && !IsNil(o.UniqueTickets) {
		return true
	}

	return false
}

// SetUniqueTickets gets a reference to the given []UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner and assigns it to the UniqueTickets field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetUniqueTickets(v []UpdateIssuesRequestOneOf1TicketOneOfUniqueTicketsInner) {
	o.UniqueTickets = v
}

// GetTrackerId returns the TrackerId field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetTrackerId() string {
	if o == nil || IsNil(o.TrackerId) {
		var ret string
		return ret
	}
	return *o.TrackerId
}

// GetTrackerIdOk returns a tuple with the TrackerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetTrackerIdOk() (*string, bool) {
	if o == nil || IsNil(o.TrackerId) {
		return nil, false
	}
	return o.TrackerId, true
}

// HasTrackerId returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasTrackerId() bool {
	if o != nil && !IsNil(o.TrackerId) {
		return true
	}

	return false
}

// SetTrackerId gets a reference to the given string and assigns it to the TrackerId field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetTrackerId(v string) {
	o.TrackerId = &v
}

// GetJiraId returns the JiraId field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetJiraId() string {
	if o == nil || IsNil(o.JiraId) {
		var ret string
		return ret
	}
	return *o.JiraId
}

// GetJiraIdOk returns a tuple with the JiraId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetJiraIdOk() (*string, bool) {
	if o == nil || IsNil(o.JiraId) {
		return nil, false
	}
	return o.JiraId, true
}

// HasJiraId returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasJiraId() bool {
	if o != nil && !IsNil(o.JiraId) {
		return true
	}

	return false
}

// SetJiraId gets a reference to the given string and assigns it to the JiraId field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetJiraId(v string) {
	o.JiraId = &v
}

// GetIssueType returns the IssueType field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetIssueType() string {
	if o == nil || IsNil(o.IssueType) {
		var ret string
		return ret
	}
	return *o.IssueType
}

// GetIssueTypeOk returns a tuple with the IssueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetIssueTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssueType) {
		return nil, false
	}
	return o.IssueType, true
}

// HasIssueType returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasIssueType() bool {
	if o != nil && !IsNil(o.IssueType) {
		return true
	}

	return false
}

// SetIssueType gets a reference to the given string and assigns it to the IssueType field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetIssueType(v string) {
	o.IssueType = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetLabels(v []string) {
	o.Labels = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetCustomFields() []UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner {
	if o == nil || IsNil(o.CustomFields) {
		var ret []UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetCustomFieldsOk() ([]UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner and assigns it to the CustomFields field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetCustomFields(v []UpdateIssuesRequestOneOf1TicketOneOfCustomFieldsInner) {
	o.CustomFields = v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetComponents() []UpdateIssuesRequestOneOf1TicketOneOfComponentsInner {
	if o == nil || IsNil(o.Components) {
		var ret []UpdateIssuesRequestOneOf1TicketOneOfComponentsInner
		return ret
	}
	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) GetComponentsOk() ([]UpdateIssuesRequestOneOf1TicketOneOfComponentsInner, bool) {
	if o == nil || IsNil(o.Components) {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) HasComponents() bool {
	if o != nil && !IsNil(o.Components) {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []UpdateIssuesRequestOneOf1TicketOneOfComponentsInner and assigns it to the Components field.
func (o *UpdateIssuesRequestOneOf1TicketOneOf) SetComponents(v []UpdateIssuesRequestOneOf1TicketOneOfComponentsInner) {
	o.Components = v
}

func (o UpdateIssuesRequestOneOf1TicketOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIssuesRequestOneOf1TicketOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.UniqueTickets) {
		toSerialize["uniqueTickets"] = o.UniqueTickets
	}
	if !IsNil(o.TrackerId) {
		toSerialize["trackerId"] = o.TrackerId
	}
	if !IsNil(o.JiraId) {
		toSerialize["jiraId"] = o.JiraId
	}
	if !IsNil(o.IssueType) {
		toSerialize["issueType"] = o.IssueType
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	if !IsNil(o.Components) {
		toSerialize["components"] = o.Components
	}
	return toSerialize, nil
}

type NullableUpdateIssuesRequestOneOf1TicketOneOf struct {
	value *UpdateIssuesRequestOneOf1TicketOneOf
	isSet bool
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOf) Get() *UpdateIssuesRequestOneOf1TicketOneOf {
	return v.value
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOf) Set(val *UpdateIssuesRequestOneOf1TicketOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIssuesRequestOneOf1TicketOneOf(val *UpdateIssuesRequestOneOf1TicketOneOf) *NullableUpdateIssuesRequestOneOf1TicketOneOf {
	return &NullableUpdateIssuesRequestOneOf1TicketOneOf{value: val, isSet: true}
}

func (v NullableUpdateIssuesRequestOneOf1TicketOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIssuesRequestOneOf1TicketOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


