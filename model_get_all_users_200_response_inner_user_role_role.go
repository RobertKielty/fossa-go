/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the GetAllUsers200ResponseInnerUserRoleRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllUsers200ResponseInnerUserRoleRole{}

// GetAllUsers200ResponseInnerUserRoleRole struct for GetAllUsers200ResponseInnerUserRoleRole
type GetAllUsers200ResponseInnerUserRoleRole struct {
	// The role's unique identifier
	Id *int32 `json:"id,omitempty"`
	// The organization the role belongs to
	OrganizationId *int32 `json:"organizationId,omitempty"`
	// Whether the role is custom
	IsCustom *bool `json:"isCustom,omitempty"`
	// The role's name
	Name *string `json:"name,omitempty"`
	// The role's scope
	Scope *string `json:"scope,omitempty"`
}

// NewGetAllUsers200ResponseInnerUserRoleRole instantiates a new GetAllUsers200ResponseInnerUserRoleRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllUsers200ResponseInnerUserRoleRole() *GetAllUsers200ResponseInnerUserRoleRole {
	this := GetAllUsers200ResponseInnerUserRoleRole{}
	return &this
}

// NewGetAllUsers200ResponseInnerUserRoleRoleWithDefaults instantiates a new GetAllUsers200ResponseInnerUserRoleRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllUsers200ResponseInnerUserRoleRoleWithDefaults() *GetAllUsers200ResponseInnerUserRoleRole {
	this := GetAllUsers200ResponseInnerUserRoleRole{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetAllUsers200ResponseInnerUserRoleRole) SetId(v int32) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *GetAllUsers200ResponseInnerUserRoleRole) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetIsCustom returns the IsCustom field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetIsCustom() bool {
	if o == nil || IsNil(o.IsCustom) {
		var ret bool
		return ret
	}
	return *o.IsCustom
}

// GetIsCustomOk returns a tuple with the IsCustom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetIsCustomOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCustom) {
		return nil, false
	}
	return o.IsCustom, true
}

// HasIsCustom returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) HasIsCustom() bool {
	if o != nil && !IsNil(o.IsCustom) {
		return true
	}

	return false
}

// SetIsCustom gets a reference to the given bool and assigns it to the IsCustom field.
func (o *GetAllUsers200ResponseInnerUserRoleRole) SetIsCustom(v bool) {
	o.IsCustom = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetAllUsers200ResponseInnerUserRoleRole) SetName(v string) {
	o.Name = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *GetAllUsers200ResponseInnerUserRoleRole) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *GetAllUsers200ResponseInnerUserRoleRole) SetScope(v string) {
	o.Scope = &v
}

func (o GetAllUsers200ResponseInnerUserRoleRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllUsers200ResponseInnerUserRoleRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.IsCustom) {
		toSerialize["isCustom"] = o.IsCustom
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableGetAllUsers200ResponseInnerUserRoleRole struct {
	value *GetAllUsers200ResponseInnerUserRoleRole
	isSet bool
}

func (v NullableGetAllUsers200ResponseInnerUserRoleRole) Get() *GetAllUsers200ResponseInnerUserRoleRole {
	return v.value
}

func (v *NullableGetAllUsers200ResponseInnerUserRoleRole) Set(val *GetAllUsers200ResponseInnerUserRoleRole) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllUsers200ResponseInnerUserRoleRole) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllUsers200ResponseInnerUserRoleRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllUsers200ResponseInnerUserRoleRole(val *GetAllUsers200ResponseInnerUserRoleRole) *NullableGetAllUsers200ResponseInnerUserRoleRole {
	return &NullableGetAllUsers200ResponseInnerUserRoleRole{value: val, isSet: true}
}

func (v NullableGetAllUsers200ResponseInnerUserRoleRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllUsers200ResponseInnerUserRoleRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


