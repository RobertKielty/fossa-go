/*
FOSSA API

OpenAPI Specification for public FOSSA APIs

API version: 4.28.61
Contact: support@fossa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fossa

import (
	"encoding/json"
)

// checks if the DeletePackageLabelAssignmentsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePackageLabelAssignmentsRequest{}

// DeletePackageLabelAssignmentsRequest struct for DeletePackageLabelAssignmentsRequest
type DeletePackageLabelAssignmentsRequest struct {
	// The IDs of the package label assignments to delete.
	AssignmentLabelIds []int32 `json:"assignmentLabelIds,omitempty"`
}

// NewDeletePackageLabelAssignmentsRequest instantiates a new DeletePackageLabelAssignmentsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePackageLabelAssignmentsRequest() *DeletePackageLabelAssignmentsRequest {
	this := DeletePackageLabelAssignmentsRequest{}
	return &this
}

// NewDeletePackageLabelAssignmentsRequestWithDefaults instantiates a new DeletePackageLabelAssignmentsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePackageLabelAssignmentsRequestWithDefaults() *DeletePackageLabelAssignmentsRequest {
	this := DeletePackageLabelAssignmentsRequest{}
	return &this
}

// GetAssignmentLabelIds returns the AssignmentLabelIds field value if set, zero value otherwise.
func (o *DeletePackageLabelAssignmentsRequest) GetAssignmentLabelIds() []int32 {
	if o == nil || IsNil(o.AssignmentLabelIds) {
		var ret []int32
		return ret
	}
	return o.AssignmentLabelIds
}

// GetAssignmentLabelIdsOk returns a tuple with the AssignmentLabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePackageLabelAssignmentsRequest) GetAssignmentLabelIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.AssignmentLabelIds) {
		return nil, false
	}
	return o.AssignmentLabelIds, true
}

// HasAssignmentLabelIds returns a boolean if a field has been set.
func (o *DeletePackageLabelAssignmentsRequest) HasAssignmentLabelIds() bool {
	if o != nil && !IsNil(o.AssignmentLabelIds) {
		return true
	}

	return false
}

// SetAssignmentLabelIds gets a reference to the given []int32 and assigns it to the AssignmentLabelIds field.
func (o *DeletePackageLabelAssignmentsRequest) SetAssignmentLabelIds(v []int32) {
	o.AssignmentLabelIds = v
}

func (o DeletePackageLabelAssignmentsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePackageLabelAssignmentsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignmentLabelIds) {
		toSerialize["assignmentLabelIds"] = o.AssignmentLabelIds
	}
	return toSerialize, nil
}

type NullableDeletePackageLabelAssignmentsRequest struct {
	value *DeletePackageLabelAssignmentsRequest
	isSet bool
}

func (v NullableDeletePackageLabelAssignmentsRequest) Get() *DeletePackageLabelAssignmentsRequest {
	return v.value
}

func (v *NullableDeletePackageLabelAssignmentsRequest) Set(val *DeletePackageLabelAssignmentsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePackageLabelAssignmentsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePackageLabelAssignmentsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePackageLabelAssignmentsRequest(val *DeletePackageLabelAssignmentsRequest) *NullableDeletePackageLabelAssignmentsRequest {
	return &NullableDeletePackageLabelAssignmentsRequest{value: val, isSet: true}
}

func (v NullableDeletePackageLabelAssignmentsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePackageLabelAssignmentsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


